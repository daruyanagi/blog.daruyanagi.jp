<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows Runtime on blog.daruyanagi.jp</title>
    <link>https://blog.daruyanagi.jp/tags/windows-runtime/</link>
    <description>Recent content in Windows Runtime on blog.daruyanagi.jp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 12 Oct 2014 13:55:37 +0000</lastBuildDate><atom:link href="https://blog.daruyanagi.jp/tags/windows-runtime/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>winmd を参照していると ClickOnce で配置できない</title>
      <link>https://blog.daruyanagi.jp/entry/2014/10/12/135537/</link>
      <pubDate>Sun, 12 Oct 2014 13:55:37 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/10/12/135537/</guid>
      <description>Mihari 1.0.0.0 - &amp;#x3060;&amp;#x308B;&amp;#x308D;&amp;#x3050; を ClickOnce で配置しようと思ったら、エラーが出てビルドできなくなった。 マニフェストの生成エラーです。ファイルまたはアセンブリ &#39;…\Windo</description>
    </item>
    
    <item>
      <title>WinRT：システムにインストールされた Windows ストア アプリを列挙する（2）</title>
      <link>https://blog.daruyanagi.jp/entry/2014/09/11/025615/</link>
      <pubDate>Thu, 11 Sep 2014 02:56:15 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/09/11/025615/</guid>
      <description>WinRT&amp;#xFF1A;&amp;#x30B7;&amp;#x30B9;&amp;#x30C6;&amp;#x30E0;&amp;#x306B;&amp;#x30A4;&amp;#x30F3;&amp;#x30B9;&amp;#x30C8;&amp;#x30FC;&amp;#x30EB;&amp;#x3055;&amp;#x308C;&amp;#x305F; Windows &amp;#x30B9;&amp;#x30C8;&amp;#x30A2; &amp;#x30A2;&amp;#x30D7;&amp;#x30EA;&amp;#x3092;&amp;#x5217;&amp;#x6319;&amp;#x3059;&amp;#x308B; - &amp;#x3060;&amp;#x308B;&amp;#x308D;&amp;#x3050; で未解決だった問題を解決しておく。 AppxManifest.xml を読んで DisplayName などを取得する とりあえず動けばいいので、dynamic（System.Dynami</description>
    </item>
    
    <item>
      <title>WinRT：システムにインストールされた Windows ストア アプリを列挙する</title>
      <link>https://blog.daruyanagi.jp/entry/2014/09/10/021908/</link>
      <pubDate>Wed, 10 Sep 2014 02:19:08 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/09/10/021908/</guid>
      <description>WPF アプリケーションからシステムにインストールされた Windows ストア アプリを列挙するには、この Windows Runtime API を使えばいいらしい。 PackageManager.FindPackagesForUser(String) Method (Windows) ちなみに、Windows</description>
    </item>
    
    <item>
      <title>オープン拡張辞書を Windows Runtime アプリで読み書きする（4）</title>
      <link>https://blog.daruyanagi.jp/entry/2014/07/03/033712/</link>
      <pubDate>Thu, 03 Jul 2014 03:37:12 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/07/03/033712/</guid>
      <description>&amp;#x30AA;&amp;#x30FC;&amp;#x30D7;&amp;#x30F3;&amp;#x62E1;&amp;#x5F35;&amp;#x8F9E;&amp;#x66F8;&amp;#x3092; Windows Runtime &amp;#x30A2;&amp;#x30D7;&amp;#x30EA;&amp;#x3067;&amp;#x8AAD;&amp;#x307F;&amp;#x66F8;&amp;#x304D;&amp;#x3059;&amp;#x308B;&amp;#xFF08;3&amp;#xFF09; - &amp;#x3060;&amp;#x308B;&amp;#x308D;&amp;#x3050; でオープン拡張辞書の読み込みは成功したので、今度は書き込み。 public static async void Save(string filename) { XNamespace ns1 = &amp;quot;http://www.microsoft.com/ime/dctx&amp;quot;; var xml = new XDocument( new XDeclaration(&amp;quot;1.0&amp;quot;, &amp;quot;utf-8&amp;quot;, &amp;quot;yes&amp;quot;), new XComment(&amp;quot;Build by Open Extended Dictionary Editor for WinRT&amp;quot;), new XElement(ns1 + &amp;quot;Dictionary&amp;quot;, new</description>
    </item>
    
    <item>
      <title>オープン拡張辞書を Windows Runtime アプリで読み書きする（3）</title>
      <link>https://blog.daruyanagi.jp/entry/2014/06/21/133254/</link>
      <pubDate>Sat, 21 Jun 2014 13:32:54 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/06/21/133254/</guid>
      <description>&amp;#x30AA;&amp;#x30FC;&amp;#x30D7;&amp;#x30F3;&amp;#x62E1;&amp;#x5F35;&amp;#x8F9E;&amp;#x66F8;&amp;#x3092; Windows Runtime &amp;#x30A2;&amp;#x30D7;&amp;#x30EA;&amp;#x3067;&amp;#x8AAD;&amp;#x307F;&amp;#x66F8;&amp;#x304D;&amp;#x3059;&amp;#x308B;&amp;#xFF08;2&amp;#xFF09; - &amp;#x3060;&amp;#x308B;&amp;#x308D;&amp;#x3050; の続き。今度は第二の方法「XDocument を使う」でやってみる。 public static void Load(string path = @&amp;quot;Assets\Sample.dctx&amp;quot;) { var xml = XDocument.Load(Path.Combine(Package.Current.InstalledLocation.Path, path)); XNamespace ns1 = &amp;quot;http://www.microsoft.com/ime/dctx&amp;quot;; var header = xml.Root.Element(ns1 + &amp;quot;DictionaryHeader&amp;quot;); dictionary.DictionaryGuid = header.Element(ns1 + &amp;quot;DictionaryGUID&amp;quot;).Value; dictionary.DictionaryLanguage = header.Element(ns1</description>
    </item>
    
    <item>
      <title>オープン拡張辞書を Windows Runtime アプリで読み書きする（2）</title>
      <link>https://blog.daruyanagi.jp/entry/2014/06/20/160824/</link>
      <pubDate>Fri, 20 Jun 2014 16:08:24 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/06/20/160824/</guid>
      <description>&amp;#x30AA;&amp;#x30FC;&amp;#x30D7;&amp;#x30F3;&amp;#x62E1;&amp;#x5F35;&amp;#x8F9E;&amp;#x66F8;&amp;#x3092; Windows Runtime &amp;#x30A2;&amp;#x30D7;&amp;#x30EA;&amp;#x3067;&amp;#x8AAD;&amp;#x307F;&amp;#x66F8;&amp;#x304D;&amp;#x3059;&amp;#x308B;&amp;#xFF08;1&amp;#xFF09; - &amp;#x3060;&amp;#x308B;&amp;#x308D;&amp;#x3050; の続き。まずは第一の手段「XmlDocument を使う」で実装してみた。 public static async void Load(string path) { var file = await Package.Current.InstalledLocation.GetFileAsync(path); var text = await Windows.Storage.FileIO.ReadTextAsync(file); var xml = new XmlDocument(); var settings = new XmlLoadSettings(); xml.LoadXml(text,</description>
    </item>
    
    <item>
      <title>オープン拡張辞書を Windows Runtime アプリで読み書きする（1）</title>
      <link>https://blog.daruyanagi.jp/entry/2014/06/19/210043/</link>
      <pubDate>Thu, 19 Jun 2014 21:00:43 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/06/19/210043/</guid>
      <description>オープン拡張辞書は、Microsoft IMEの追加辞書を作成、共有する機能です。簡単にインストールができるので、Webページや共有フォルダー</description>
    </item>
    
    <item>
      <title>インストール済みの Windows Store Apps を列挙する</title>
      <link>https://blog.daruyanagi.jp/entry/2014/06/06/135749/</link>
      <pubDate>Fri, 06 Jun 2014 13:57:49 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/06/06/135749/</guid>
      <description>方針 PackageManager.FindPackagesForUser(String) Method (Windows) を使えばよい――が、この API は Windows Store Apps では使うことができない。今回は Windows Desktop Apps （コンソール）からこの API を呼んでみる。 準備 適当にコードを書い</description>
    </item>
    
  </channel>
</rss>
