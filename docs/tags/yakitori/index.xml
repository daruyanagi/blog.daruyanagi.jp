<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yakitori on だるろぐ - だるやなぎのブログ</title>
    <link>https://blog.daruyanagi.jp/tags/yakitori/</link>
    <description>Recent content in Yakitori on だるろぐ - だるやなぎのブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 10 Jun 2018 12:39:46 +0000</lastBuildDate>
    
	<atom:link href="https://blog.daruyanagi.jp/tags/yakitori/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Yakitori 1.1.0.0</title>
      <link>https://blog.daruyanagi.jp/entry/2018/06/10/123946/</link>
      <pubDate>Sun, 10 Jun 2018 12:39:46 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2018/06/10/123946/</guid>
      <description>GitHub を掃除してたら、古いアプリを見つけてしまい、ついでなのでいろいろ書き直しちゃいました。タスクバーにピン留めしておくと便利なスクリーンショットツールです。なるべく Windows 10 標準機能と使っている（＆若干の付加機能）のと、タスクトレイに常駐しないのが特徴と言えば特徴。
  br/&amp;gt;
ユーザーインターフェイスの刷新将来的なアップデートに備えたリファクタリング トーストを出せるようになりたいなって思っていてそのまま放置だったのですが、WPF ＋ WinRT でごちゃごちゃやるより、WPF ⇔ UWP の仕組みを使えないかなと思い、それに備えたコードの整理を行いました。
  するに、リクツ上はできるという、これをやってみたい。できるかどうかは知らないけど。</description>
    </item>
    
    <item>
      <title>Yakitori 1.0.0.0：Windows 10 のネイティブ機能を活用したスクリーンショット支援ツール</title>
      <link>https://blog.daruyanagi.jp/entry/2017/06/15/235744/</link>
      <pubDate>Thu, 15 Jun 2017 23:57:44 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/06/15/235744/</guid>
      <description>  週は身内に不幸があったりちょっと情緒不安定だったので、手慰みに Windows 10 のスクリーンショット機能をジャンプリストから利用できるようにするツールを作ってみました。「ネイティブ機能を利用する」という手抜きシンプルさがウリです。
 ツールの名前は、大阪へ向かうフェリーのレストランで「撮る……撮る……」と名前を考えながら晩飯を選んでいたら、いつの間にかお盆の上に焼き鳥があったという故事から採っています。
### なぜ作ったのか[ツールなしで“矩形キャプチャー”が可能！「Creators Update」に新搭載されたスクリーンショット機能が便利【やじうまの杜】](http://forest.watch.impress.co.jp/docs/serial/yajiuma/1061300.html)Windows 10 Creators Update 以降では OS ネイティブのスクリーンショット機能が拡充されていますが、キーボードショートカットを覚えるのが面倒クリップボードへコピーされた画像をファイル化するのが面倒スクリーンショットフォルダーがどこにあるのか分からん＆開くのが面倒なのではないかと思い作ってみました。あと、常駐しないのもよいところかな。逆にジャンプリストの利用が前提になっているのはマイナスかもね。なお、作った本人は「WinSnap」という有償ツールを愛用しているので、この手のツールは要らない模様（ぉ### 使い方とりあえず実行する設定ダイアログが表示されるのでタスクバーにピン留め次回からはジャンプリストから Windows 10 ネイティブのスクリーンショット機能を呼び出せます### 機能Windows 10 ネイティブのスクリーンショット機能を呼び出しますアクティブウィンドウをクリップボードへコピーデスクトップ全体をクリップボードへコピーデスクトップ全体をスクリーンショットフォルダーへ保存（Windows 8以降？が必要）デスクトップを矩形選択してクリップボードへコピー（Windows 10 Creators Update 以降が必要）クリップボードに格納されている画像をスクリーンショットフォルダーへ保存スクリーンショットフォルダーを開くカウントダウン実行常駐しませんスペシャルサンクス：オレンジフェリーの無料 Wi-Fi### 蛇足：メッセージポンプこのアプリは Tonjiru と似たような方法で起動オプションを実装＆ジャンプリストから呼べるように作ってありますが、App クラスを生成せずにカウントダウンを行おうとするとうまくいきませんでした。DispatchTimer ってメッセージポンプがないとダメなのかな（よくわかってない）。ShowDialog() でもいけるやろ、と思ったのですがそっちもダメだったので、おとなしく App.Run() しています。ここを削ればもう少し高速化できるんじゃないかなーと思うのですが、まぁ、そこまでやらんでもいいかな。</description>
    </item>
    
  </channel>
</rss>