<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>告知 on だるやなぎ</title>
    <link>https://blog.daruyanagi.jp/tags/%E5%91%8A%E7%9F%A5/</link>
    <description>Recent content in 告知 on だるやなぎ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 10 Feb 2020 12:10:22 +0000</lastBuildDate>
    
	<atom:link href="https://blog.daruyanagi.jp/tags/%E5%91%8A%E7%9F%A5/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Shriken 1.1</title>
      <link>https://blog.daruyanagi.jp/entry/2020/02/10/121022/</link>
      <pubDate>Mon, 10 Feb 2020 12:10:22 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2020/02/10/121022/</guid>
      <description>  ョートカットキーやアクセラレーター（［Alt］キーを押すと、コマンドを実行するためのキーが表示されます）への対応を行いました。
  と、他のアプリから［共有］コマンドで「Shriken」を呼んだときだけ、［コピー］［保存］処理の終了後にウィンドウを自動で閉じるようにしていたのですが、うまく動かないことがあるようなので一時的に停止しています。
Shriken を入手 - Microsoft Store ja-JP
Release v1.1 · daruyanagi/Shriken · GitHub
次のバージョンは Windows UI library を少し試して、Crop 処理を入れられたらいいなーって思っています*1。それか、Undo/Redo かな……すでに履歴リストを保持する設計になってるんで、UI をくっつけるだけだしね。
*1:ImageCropper っていう素敵なコントロールがもうあるみたいなので！  </description>
    </item>
    
    <item>
      <title>Shriken 1.0.0</title>
      <link>https://blog.daruyanagi.jp/entry/2020/02/05/182710/</link>
      <pubDate>Wed, 05 Feb 2020 18:27:10 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2020/02/05/182710/</guid>
      <description>ログ掲載のために画像をリサイズするだけのアプリ「Shriken」をリリースしました。「スマホ同期」で［共有］→ 画像をリサイズしてクリップボードへコピー → はてなブログへ貼り付ける というプロセスがちょっとだけ簡単になります*1。Shriken を入手 - Microsoft Store ja-JPとりあえずストアに出して、Surface Pro X で使いたいと思い（だから ARM64 ビルドもあるよ！）、不安定な機能は全部削除しているので、普通の人はあまりこれのお世話になることはないと思いますが、将来的には以下の機能が実装される予定です。
 クロップ 閲覧時のズーム ペンによる注釈 顔認識と笑い男化   笑い男機能つけといた pic.twitter.com/jRU3ibh8lA— 新型だるやなぎウイルス (@daruyanagi) 2020年1月12日
 ここまで完成すれば、まぁ、需要はなくもないんじゃないでしょうか。ちなみに、名前が Shuriken ではなく Shriken なのは、他の人に名前がとられてたからです。でも、Shrink image からもじって付けようと思ってたので、あまり問題はない（キリッ
### 開発秘（？）話 久しぶりの UWP 開発だったので、どんな UI にしていいのかさっぱりわかりませんでした。  基本機能はできたので、UI をどうにかする（UWP の UI ってどうデザインすればスタンダードなのか、さっぱり忘れた） pic.twitter.com/GgKE3nFn6R— 新型だるやなぎウイルス (@daruyanagi) 2020年1月2日
  がんばって UI をマシにしてみた pic.twitter.com/C1Alq1DvsY— 新型だるやなぎウイルス (@daruyanagi) 2020年1月3日
 いろいろ試行錯誤した結果、標準アプリである「フォト」に似せればいいか、という考えに落ちつくまでに、View は3回ぐらい作り直しました。そのおかげで、最初はコードビハインドにべた書きしていた ViewModel、Model も分離されるようになり（だって、View 作り直すたびにコードビハインドをコピペするの大変じゃん？）、（あくまで個人的には）いい感じに設計できました。怪我の功名ってやつですね。機能追加してもそうそう破綻しなさそうです。
 ぇ、ドキュメントサイトからコントロールギャラリーアプリを起動して実際に挙動を確かめられるの、めっちゃ素敵やんhttps://t.</description>
    </item>
    
    <item>
      <title>今年もプロ生愛媛が開催されます！</title>
      <link>https://blog.daruyanagi.jp/entry/2019/03/23/130511/</link>
      <pubDate>Sat, 23 Mar 2019 13:05:11 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2019/03/23/130511/</guid>
      <description>  プログラミング生放送勉強会 第59（？）回＠サイボウズ株式会社 松山オフィス（愛媛） : ATND](https://atnd.org/events/104613)私事でいろいろかまけていて告知がかなり遅れてしまいましたが、今年も6月にプロ生愛媛が開催されます！　会場の都合で今年はちょっと早めの**06/01 (土) **に開催されます（サイボウズさん、毎年ありがとうございます）。当初は6月15日で予定していましたが、それでスケジュールを組んでいた方はリスケお願いしますm(__)m
### プロ生とは [プログラミング生放送](https://pronama.jp/)プログラミング生放送勉強会は、ニコニコ動画発の「IT っぽいことならなんでも OK」という緩い勉強会です。日頃取り組んでいること、何か物申したいこと、すごいことやったから誉めて！……なんでもありです。ちなみに、この勉強会は“生放送”されるので、オンラインからでも参加できます。**「たかがみかんのために愛媛なんか行ってられねえよ！」**っていう方もぜひ参加してください！　もちろん、会場に来てくださるのが一番いいと思います。気軽に参加できる LT も募集しているので、ぜひどうぞ（会場の方は基本的に映らないので、顔出し禁止な人でも参加できます）会場は全国持ち回りなのですが、愛媛・松山市ではここ数年、6月に開催しています。この時期は飛行機が安めだと思うので、旅行がてら来るのもありじゃないかと思います。いまなら、改修中の道後温泉本館もみれますぜ！  </description>
    </item>
    
    <item>
      <title>Impress Watch の「キャッシュレス百景」に寄稿しました</title>
      <link>https://blog.daruyanagi.jp/entry/2019/02/19/191203/</link>
      <pubDate>Tue, 19 Feb 2019 19:12:03 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2019/02/19/191203/</guid>
      <description>んかトップページにババンとと掲出されているのがちょっと照れ臭いのですが……過去に掲載された記事では東京での話が多かった気がするので、ちょっと視点を変えるつもりで愛媛県・松山市でのキャッシュレスライフを軽く書いてみました。Suica統一キャッシュレスライフを阻む愛媛・松山のご当地電子マネー by 柳英俊【キャッシュレス百景】隠れたテーマは グローバル vs ドメスティック でしょうか。電子マネーを地域通貨的に使おうという動きはたまに見られるのですが、ハイエクが割と好きな僕でもあまり筋のいい話ではないなと思っています。おカネって、いろんなものをつなげる媒介じゃないですか。共同体に閉じようという動きと正反対なものなんですよね。んで、国という単位でみるならば、その根っこは徴税に紐づいている。国際マクロ経済ならばともかく、どんな貨幣だろうがポイントだろうが、最終的には円に換算されて――おもに徴税のためにね――一つになるわけです。だから、電子マネーをバラバラにしたからといって地域経済が守られたり、振興されることはない……たぶん、不便なだけ。いったん可換・比較可能な数値として計量化されてしまえば、そこにどんな想いが込められていようと、それはいずれ捨象され、取引に切り刻まれて経済の海に飲み込まれてしまう。でも、これだけ電子マネーが乱立するのを見られるのも今だけかなって思うと、それはそれで面白いですよね。市場経済が立ち上がろうとする時代、とくにさまざまな権威がモザイクのようにあった西洋ではいろんな種類の貨幣がアホみたいに乱立していたのを我々は知っているわけですが、ああいうのを目の当たりにできている。いずれは淘汰され、必ずしも一番優れていないものがヘゲモニーを握ることになるんだと思いますが（！）、それが何になるのか、ちょっと興味深くありませんか。できれば技術的に優れたものに王冠が授けられんことを願うわけですが……それまでは「それは無理筋やろ」っていう試みも生暖かく見守って、火傷をしない程度に関わっていけたら楽しいかなって思っています。いやさ、何が生き残るかだなんて、ほんとのところは誰にもわかんないわけで。あの「マチカ」だって化けないとも限らない――合理性は脇に置いて、ワーッとした盛り上がりがあれば、微レ存。とにかく好きなのを使って、肩入れして、その場だけでも楽しめばいい気もします。そんな感じ。</description>
    </item>
    
    <item>
      <title>Tonjiru v1.5.7.0 をストアにリリースしました</title>
      <link>https://blog.daruyanagi.jp/entry/2018/09/25/163814/</link>
      <pubDate>Tue, 25 Sep 2018 16:38:14 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2018/09/25/163814/</guid>
      <description>スクトップで開いているウィンドウをまとめて閉じてすっきりさせるアプリ「Tonjiru」をアップデートしました（連休中に宣言した「インドアタスクを片付ける」の成果です♡）。ストアでの配信も始まっているようです。
 ストアに提出なう / “v1.5.0.0” https://t.co/6Npkr66dSb— だるやなぎ准将 (@daruyanagi) September 24, 2018
 （WPF バイナリのバージョンは 1.5.0.0 ですが、ストアパッケージはビルドするたびにマイナーバージョンがあがるので 1.5.7.0 です。まぁ、ビルドやリビジョンのナンバーはどうでもいいさね）ストアに提出してから24時間ほどで審査を通過。WPF/Desktop Bridge なアプリですが、2回目からは審査が早いですね。Tonjiru を入手 - Microsoft Store ja-JPv1.5 の目玉は――ウィンドウリストの更新時にしょぼいローディング画面を出すようになったことです。しょぼくても、あるのとないのとではえらい違いだよね。ついでに、ローディング中はツールバーのボタンを無効化しました。イジるとクラッシュしてたんや……それに関連してエラー処理も足しています。あと、ローディングにかかる時間がめっちゃ短縮されました。初期リリースのコードは「とりあえず動く」程度だったので直さないといけないなーと思ってたのですが……ちょろっといじったら劇的に早くなって、「もしかしてローディング画面いらんかったんちゃう……」って感じです。まぁ、アプリは堅固にしないとね、やっぱりちゃんとエラーチェックや待機エフェクトは大事だよね。そのほかにも、デスクトップ版には入れてたけどストア版には入ってなかったジャンプリストの微修正やらなんやらいろいろマシになっています。このアプリを使っているのは世界で僕だけのような気もしますが、せっかくストアに申請したし、そのとき無駄に苦労した分大事にアップデートしたいと思います。</description>
    </item>
    
    <item>
      <title>9月22日：ドメイン喪失から3年半……daruyanagi.net がもどってきました（もう水素水を売ってるヤツだなんて言わせない！！</title>
      <link>https://blog.daruyanagi.jp/entry/2018/09/24/134516/</link>
      <pubDate>Mon, 24 Sep 2018 13:45:16 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2018/09/24/134516/</guid>
      <description>### 2015年4月：daruyanagi.net を失う [ドメインの延長手続きミスに伴う連絡先の変更について - だるろぐ](https://blog.daruyanagi.jp/entry/2015/04/28/070348)daruyanagi.net のドメイン更新手続きを失念していて、所有権を失う。当時、このドメインは Value-Domain で管理してもらってたのだけど、「お金をチャージして更新手数料を払う」というちょっとめんどくさいシステムだった。クレジットカードがなかった高校生時代、XREA サーバーでお世話になってたころはそれがありがたかったのだけど、この時はさすがにちょっと Value-Domain を呪った……クレカで自動更新できたらよかったのに！*1　通知メールがスパム扱いされていて、完全に気付かなかった。他にもドメインはもっていたのだけど、daruyanagi.net は  daruyanagi.net：ExpressWeb（ASP.NET） ＋独自ドメインでホームページを運用 mail.daruyanagi.net：Google Apps（現：GSuite）の無償プランでメールサービスを運用（メイン） みたいな感じでフル活用していたので、喪失はかなり痛手だった。なかでも一番のショックは、みつばたん（http://c-mitsuba.com/）にデザインしてもらった名刺が配れなくなったこと……メールアドレスが印刷されていたのに、それが失効してしまった／(^o^)＼  ### 2016年9月：daruyanagi.net で水素水のアピールが始まる   メインを喪失して傷心の俺さまをあざ笑うかのように、daruyanagi.net で水素水のサイトが建立される。
 てか、https://t.co/V4lJHhUzOS が水素水のページになっててくそわろ— しばやん (@shibayan) 2016年9月26日
  なるほど、 daruyanagi .net のようなかつてはすごいPVを誇っていたドメインを高ドメインパワーとよび、そのパワーを使って水素水を宣伝するということか— たなか (@tanaka_733) 2018年7月19日
   ### 2017年ごろ：水素水への憎悪が心に満ち溢れる 「水素水」というキーワードを耳にするたびに憎悪、諦観、悲痛、嘲笑、自虐……さまざまな反応を示しており、精神に多大な負担がかかっていることが伺える。  おう、水素水とか売ってるやつは早くくたばれw— だるやなぎ准将 (@daruyanagi) 2017年2月2日
  ウケるｗ / “「インチキ水素水」ブログ、「中傷だ」と日本トリムが研究者提訴（1/2ページ） - 産経WEST” https://t.co/ioBo5EQT8N— だるやなぎ准将 (@daruyanagi) 2017年4月13日
  https://t.co/IMS2MHSp5b で水素水について学んでる— だるやなぎ准将 (@daruyanagi) 2017年4月18日</description>
    </item>
    
    <item>
      <title>9月22日：daruyanagi.jp を HTTPS にした</title>
      <link>https://blog.daruyanagi.jp/entry/2018/09/23/134815/</link>
      <pubDate>Sun, 23 Sep 2018 13:48:15 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2018/09/23/134815/</guid>
      <description>週は3連休。外に行く元気もないので、このお休みは溜まってるインドア仕事を片付ける。まずは、サイトのお手入れ。はてなのおかげで blog.daruyanagi.jp が HTTPS になったのに、メイン（？）の daruyanagi.jp は HTTP のままでカッコ悪いなぁ、と思っていたところだったし、本腰を入れてやる。現状、daruyanagi.jp は
 ASP.NET Core Razor Pages：表はたいして何もないのだけど、ウラで謎の仕組みがいろいろ動いている  無職の仕事を楽にするためのツール 旧ブログ（かつて daruyanagi.jp ではてなブログを運営していた）からのリダイレクト  Microsoft Azure の共有プランで独自ドメインを割り当てて運用（月1,000円ぐらい） みたいな感じ。Microsoft Azure の共有プランは SSL をサポートしていないので、このままでは HTTPS 化できない。SSL 対応のベーシックプランにアップグレードすると、月7,000円ぐらいかかる。たいしたサイトじゃないのに月7,000円もかけてはいられないし、できればタダでできないかなーと思ってたのだけど、GitHub Pages＋Let&amp;#39;s encrypt ならば結構簡単にできそうだ。――というわけで、  今の daruyanagi.jp は独自ドメインを外す（引き続き daruyanagi.azurewebsites.net でアクセスできるので、ツール類の移行は不要。リダイレクトは数年以上やってたわけで、いい加減いいだろう） GitHub Pages で HTTPS なペライチのサイトを立てて、これに daruyanagi.jp を割り当てる みたいな感じでやってみた。やり方はあちこちで解説されてるし、ぶっちゃけ公式のマニュアルみれば誰でもできると思うので割愛。ただ、HTTPS のオプションを有効化してから実際に反映されるまで少し時間がかかったのはちょっと不安で、そこだけあわあわしてしまった。ガチャガチャしてるうちに反映されて、無事使えるようになった。  GitHub Pages で https://t.co/uJG0Fdi9by を HTTPS にしてる。もう少し待たないといけないみたい pic.twitter.com/kCyLNdKm5M— だるやなぎ准将 (@daruyanagi) September 22, 2018
  ぉ、いけたわ？ pic.twitter.com/lnKuBSZjZE— だるやなぎ准将 (@daruyanagi) September 22, 2018</description>
    </item>
    
    <item>
      <title>Amaguri v1.1.0.0：保存時の効果音</title>
      <link>https://blog.daruyanagi.jp/entry/2018/08/31/060000/</link>
      <pubDate>Fri, 31 Aug 2018 06:00:00 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2018/08/31/060000/</guid>
      <description>  んか「フォト」でコピーすると OutOfMemory エラーが発生するので調査したんだけど――
    像をコピーすると、ファイルリストと一緒にイメージもクリップボードに格納してくれるみたい*1。「ペイント」で張り付ければイメージに、「エクスプローラー」で張り付けると画像ファイルになって便利なんだけど、そのあたりをちゃんと考えてなかった。ちゃんと条件分岐を増やして不要な処理を減らす。あと、高速に［Ctrl］＋［C］キーを押しまくったりするとたまにエラーが発生するので、それもちゃんとトラップしてバルーンで警告するようにした。他にも少しエラー処理を足したので、アプリのクラッシュは減ったはず。それでもデカいファイルを扱う場合などに連続処理が発生するとあまりよろしくないので、ファイルの保存時に警告音を再生するオプションを付けた。音が鳴るまでは次のコピーを控えてもらえると、余計なエラーが発生しない。
  もう少し使って、まぁまぁ、だいじょうぶになったらストア向けのパッケージも作る。前回の経験でいえば、申請から公開まで1カ月以上はかかると思う。
*1:クリップボードのデータは複数の形式を同時に持てる。例：プレーンテキストと書式付きテキスト、HTML  </description>
    </item>
    
    <item>
      <title>「Amaguri」v1.0.0.0</title>
      <link>https://blog.daruyanagi.jp/entry/2018/08/26/224927/</link>
      <pubDate>Sun, 26 Aug 2018 22:49:27 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2018/08/26/224927/</guid>
      <description>  てなブログ1ってクリップボードから張り付けて画像をアップロードできるけど、ファイルサイズに制限があるじゃないですか2。いちいち縮小するのが面倒だったので、クリップボードに格納された画像のサイズが大きい場合は勝手に縮小するアプリを作りました。縮小したくないときは［Shift］キーを押すと、一時的に機能を止めることができます。あと、ついでなのでデスクトップへ保存する機能も付けました。たとえば［PrintScreen］キーを押すとスクリーンショットが自動でデスクトップに保存されます。そう、Mac みたいにね。デスクトップをキャプチャーするとき、あの機能って邪魔だと思うんだけど、確かに便利なことも多いので……もちろん、設定画面で無効化できます。
  WPF なので TransformedBitmap で縮小をしていたんですけど、Winsnap というスクショツールで取得した画像をコピーするとなぜか全体が黒くなってしまう？　調べたけどよくわからなかったので、System.Drawing.Bitmap に変換して縮小しました。一通り動くまでは一瞬だったけど、この原因調査に半日消えちゃったよ！ちなみに、名前は「クリップボード、クリップボード、クリッ……そういえばそろそろクリの季節だなー、甘栗食べたいなー」と思ってつけました。
*1:フォトライフ？ *2:エラーメッセージをちゃんと出してくれないから気づかないけど  </description>
    </item>
    
    <item>
      <title>7月18日：「Tonjiru」アプリがストアで公開されました（長かったー</title>
      <link>https://blog.daruyanagi.jp/entry/2018/07/24/060000/</link>
      <pubDate>Tue, 24 Jul 2018 06:00:00 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2018/07/24/060000/</guid>
      <description>ンクリックでアプリをまとめて閉じ、デスクトップをスッキリさせるアプリ「Tonjiru」が Microsoft Store で公開されました。まったく大したアプリではないのですが、WPF アプリをストアに掲載するフローを体験したかったので満足です。Tonjiru を入手 - Microsoft Store ja-JP
### APPX にパッケージングする   近の Visual Studio には「Windows アプリケーション パッケージ プロジェクト」というテンプレートが用意されており、簡単に既存のアプリを APPX にパッケージングできます。詳しいやり方については Microsoft Docs を参照してください。かいつまんで言うと、
 アプリを作る（Tonjiru ソリューション - Tonjiru プロジェクト） ソリューションに「Windows アプリケーション パッケージ プロジェクト」を新規追加する（Tonjiru ソリューション - WindowsAppPackageプロジェクト） WindowsAppPackage プロジェクト → Tonjiru プロジェクトへの参照を張る （必要であれば WindowsAppPackage プロジェクトでエントリーポイントを設定する） みたいな流れです。できあがったパッケージは WindowsAppPackage_1.4.4.0_AnyCPU_bundle.appxuploadのような名前になります。名前がイマイチですね……できればこれからは、  Tonjiru ソリューション  Tonjiru.WPF プロジェクト（アプリケーションプロジェクト）→ Tonjiru.WPF.exe Tonjiru プロジェクト（パッケージプロジェクト）→ Tonjiru.appx  という構成にしようかなって思います。もうめんどくさいので、新規開発するときの話になりますけど。  ### 審査 パッケージができあがったら、それをストアに提出します。やり方はいつもと大して変わりませんが、ただ一点、Win32/WPF → UWP に変換したアプリは FullTrust 権限を必要とするので、その理由も書かなくてはいけない点には注意ですね。なんて書いていいのかよくわからなかったので、とりあえず内部で使ってる API を列挙して、なんのために使っているかを説明し、それ以外の用途には使ってないぜ、というのを英語でつらつらと主張してみました。  自分のデスクトップアプリを UWP にパッケージングしてストアに投げた！最近のはウンコ簡単だな！！— Daruyanagi Go（Office 付き） (@daruyanagi) 2018年6月9日</description>
    </item>
    
    <item>
      <title>告知：今年もやります！　2018/06/16 プログラミング生放送勉強会＠サイボウズ株式会社 松山オフィス</title>
      <link>https://blog.daruyanagi.jp/entry/2018/04/16/194106/</link>
      <pubDate>Mon, 16 Apr 2018 19:41:06 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2018/04/16/194106/</guid>
      <description>  年もやるっぽいので、よろしくお願いします！（52回でいいのかな？　間違ってたらごめん！）2018/06/16 プログラミング生放送勉強会 第52回＠サイボウズ株式会社 松山オフィス : ATNDとりあえずスピーカーがまったくきまってないので、誰かお願いします……最悪、だるやなぎトークがんばるしかない……orz
### プロ生って何？ たぶんニコニコ生放送発祥の IT 勉強会コミュニティです。IT に関することならジャンルを問わず、みんなで持ち寄って発表をしています。今ハマってる面白いこと、お仕事でこんなことやってる、俺はこんな失敗をした、こんなことやってみました……だいたいなんでもオッケーなはず。勉強会の内容は、たぶんオンライン配信されます。視聴者のコメントは「MISAO 」でニコニコ動画風にプレゼンに表示されることも多いです。たまにマサカリも飛んできますけど、キニシナイ。   a href=&amp;quot;https://archive.codeplex.com/?p=misao&amp;quot;&amp;gt;https://archive.codeplex.com/?p=misao愛媛では毎年6月にやるのが半ば恒例です。今年がうまくいけば、来年もまた開催できると思うので、是非ともよろしくお願いします。昨年の様子を知りたい方は、https://atnd.org/events/96211 に参加体験記のリンクを張っていますので、参考にしてください。
 ### 参加したい！ 現地でお会いしましょう。https://atnd.org/events/96211 から申し込んでね！オンライン視聴も歓迎です（たぶん配信されるのだと思う  ### スピーカーがしたいんだけど Twitte/@daruyanagi やこのブログのコメント、なんでもいいのでコンタクトをいただければ。顔出しは困るという方も相談に乗ります（基本的に配信されるのはスライドだけかな？ライトニングトーク（LT）や準備のお手伝いをしたいという方も歓迎です。例年、県外から来てくれる方も多いのですが、できたら県内の学生とかに頑張ってほしいかなーって、おじさんは思っています。  ### 参加費は？ 不要です。家におやつが余ってれば、一品持ってきてくださるとみんなが喜びます。懇親会は、去年4,000円でした。今年も同じところに仕様かなって思ってるので、同じ額になる予定です。ちなみに、学生の方は申し出ていただければ半額になります。タダじゃなくてごめんね。  </description>
    </item>
    
    <item>
      <title>Omawari 1.4.0.0：ユーザーインターフェイスを手直ししました</title>
      <link>https://blog.daruyanagi.jp/entry/2017/10/06/094818/</link>
      <pubDate>Fri, 06 Oct 2017 09:48:18 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/10/06/094818/</guid>
      <description>部的なところはあまりいじらず、今まで放置してたユーザーインターフェイスの改善（？）を行いました。あと、ぬるぽエラーをちまちま殺したり。
 複数環境での起動を考慮する 各部の名称を整理・わかりやすくする ローカルフォルダーや親ルールにアクセスするボタンを追加 ログウィンドウに前後移動機能を追加 既存のウィンドウがあれば新規に開かずアクティブにする New/No Changed ステータスの新設 アプリケーションアイコンの追加 データフォルダーを開くコマンドを新設 ウィンドウを開く位置をオーナーの真ん中に設定（不完全、動いてないかも 日ごろ使っていて不便なところから、互換性をとりながら少しずつ、ね。“個人的にはログの前後移動”や“既存のウィンドウがあれば新規に開かずアクティブにする”なんかの実装に達成感を感じています。たかだか数行ちょろっと書くだけでだいぶ便利になった。でも、そろそろコードの整理しないといろいろあかんなぁ。ついでにアプリケーションアイコンを付けたけど、なんとこれ Office の丸パクリ。あんまりよくないので、時間があるときにクラウドワークスあたりでお願いしようかなって思ってます。あと、ウチの環境はだんだんデータが肥大化してきていてパフォーマンスが顕著に落ちているので、次はクリーニング機能を付けつつ、データベースへの移行とかも考えようかなーみたな。データ構造ももっとシンプルにできたのなぁー……最初はもっと使い捨てのつもりで作ってたから、あんまり考えてなくてね。    ### Chocolatey パッケージ化の準備 実は Chocolatey から簡単にインストールできるようにといろいろ準備をしています。Chocolatey ってのは yum とか apt-get みたいにアプリを入れられるヤツの Windows 版ですね。Chocolatey のパッケージは、  パッケージに全部ファイルを入れちゃう リモートに置いてあるインストーラーを叩く という2パターンで作れるので、最初は ZIP 版をベースに前者のパッケージを作っていたのですが、いろいろお約束事をクリアするのが面倒……ライセンスファイルとかいろいろもろもろ。後者はそういうのが要らないっぽいので、前バージョンから ClickOnce を用意しています。次回辺りはちゃんと申請を通したい。https://yanagi.blob.core.windows.net/clickonce-omawari/setup.exeついでにスクリプトでリリースパッケージ（ZIP）と Azure Blob へのアップロードも PowerShell で行うようにしてみました。毎回手でやんの鬱陶しくなってきたしね。 ```ps1 # Add-AzureAccount $StorageAccountName = &amp;ldquo;yanagi&amp;rdquo; $StorageAccountKey = &amp;ldquo;***&amp;rdquo; $ContainerName = &amp;ldquo;clickonce-omawari&amp;rdquo;
$binRootDirectory = &amp;ldquo;C:\Users\Hideto\GitHub\Omawari\Omawari\bin&amp;rdquo; $publishRootDirectory = &amp;ldquo;C:\Users\Hideto\GitHub\Omawari\Omawari\Publish&amp;rdquo;
function New-ReleaseArchive { [cmdletbinding()] param( $rootDirectory, $Force )</description>
    </item>
    
    <item>
      <title>Omawari 1.3.0.0：画面構成を変えた……ダルい作業だった。</title>
      <link>https://blog.daruyanagi.jp/entry/2017/10/01/123530/</link>
      <pubDate>Sun, 01 Oct 2017 12:35:30 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/10/01/123530/</guid>
      <description>面構成をわかりやすくしてみました。
 メイン画面（チェックルールの一覧）  チェックルールの詳細画面（ログの一覧）  ログの詳細画面   ひたすら XAML を書き換える作業は辛かったぴょん……でも、ログの詳細画面ではどのログと Diff をとってるのかわかりやすくなったと思う。これまでは作った自分でさえよくわかっていないかった。   とは削除確認ダイアログ（＋データも同時に消すか確認）を作ったり、内部的なエラーハンドリングを改善したり、いろいろ。
  また、今回から ClickOnce を Azure に置くことにしました（https://yanagi.blob.core.windows.net/clickonce-omawari/Omawari.application）。次回リリースしたときにうまくアップデートされるといいなぁ。できたら、これを Chocoraley パッケージにするつもりです。</description>
    </item>
    
    <item>
      <title>Omawari 1.2.0.0：いわゆる Web 更新チェッカーだけど、細かいところを改善した</title>
      <link>https://blog.daruyanagi.jp/entry/2017/09/23/140731/</link>
      <pubDate>Sat, 23 Sep 2017 14:07:31 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/09/23/140731/</guid>
      <description>br/&amp;gt;
 メインリストビューに Last Update 欄を設ける  それに伴うコード整理 Refresh ボタンは不要になったので廃止  通知トレイで DEBUG モードなのがわかるように ファイル操作の非同期化 （メイン画面を初期表示＆スクロールする際のカクツキを抑えた）  それに伴うリグレッションの修正 ついでにステータスバーに総稼働時間を表示するように  リファクタリング Click Once がめんどいのでやめた（ごめんなさい！）     ### リリースアーカイブを毎回手で作るの面倒くさくなったので PowerShell にした   lickOnce って Web サーバーでホストしない場合、更新するのにいちいち古いバージョンのアンインストールが必要になって大変面倒くさいので、単に ZIP アーカイブでまとめて配布するようにした。そのパッケージを毎回手で作るのは面倒なので、PowerShell でアーカイブを作るスクリプトを描いた。
# 起点となる bin フォルダー $root = Join-Path $PSScriptRoot &amp;#34;Omawari\bin&amp;#34; # 入力フォルダー $src = Join-Path $root &amp;#34;Release&amp;#34; # 出力フォルダー $version = (Get-ItemProperty (Join-Path $src &amp;#34;Omawari.exe&amp;#34;)).VersionInfo.FileVersion $dest = Join-Path $root Omawari-$version.</description>
    </item>
    
    <item>
      <title>Omawari 1.1：Web 更新を巡回するヤツ。静的スクレイピングとか追加した</title>
      <link>https://blog.daruyanagi.jp/entry/2017/09/19/195837/</link>
      <pubDate>Tue, 19 Sep 2017 19:58:37 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/09/19/195837/</guid>
      <description>いぶサマになってきた気がする。あっちこっちにぬるぽエラーがあって、潰すのに難儀した。Swift とか羨ましいかもね？（よく知らんけど）
 デバッグビルドとリリースビルドの共存（開発の都合） 通知アイコンの改善 （タイマーの通算稼働時間のカウント） Updated を Pending に変えるまでの時間をグローバル設定から読み込むように ステータス色分けの改善 内部で保持している UTC を Local Time にちゃんと直して表示 コードの整理 **静的スクレイピング機能の追加** **プレビューの文字化けを修正** **更新ログウィンドウの追加** スクレイピングルールのダブルクリックでログを表示（編集画面の方がよかったか？）     ### 静的スクレイピング機能の追加   hantomJS は遅いので、AngleSharp を使った静的スクレイピングをデフォルトにしました。下手したら3分ぐらいかかっていた処理が、たった数秒に。C#でモダンにスクレイピングするならAngleSharp - QiitaAngleSharp は HtmlAgilityPack より断然使いやすいので、今後はこっちをメインに使おうと思います。
 ### プレビューの文字化けを修正 WebBrowser.NavigateToString() を使うとたまに文字化けする問題。HTML で UTF-8 エンコードを指定すればよかったのですが、Diff の方だけやって、プレビューの方には適用されてなかった（爆死 ```cs public class WebBrowserExtension { public static readonly DependencyProperty HtmlProperty = DependencyProperty.RegisterAttached( &#34;Html&#34;, typeof(string), typeof(WebBrowserExtension), new UIPropertyMetadata(null, HtmlPropertyChanged)); public static string GetHtml(DependencyObject obj) { return (string)obj.</description>
    </item>
    
    <item>
      <title>Windows の［共有］機能からシェアした URL を整形してクリップボードにコピーできるストアアプリ「Clipper」v3.0.0 を公開しました</title>
      <link>https://blog.daruyanagi.jp/entry/2017/09/01/090403/</link>
      <pubDate>Fri, 01 Sep 2017 09:04:03 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/09/01/090403/</guid>
      <description>  indows の［共有］機能からシェアした URL を整形してクリップボードにコピーできるストアアプリ「Clipper」を3年ぶりにアップデートしました！ 「Microsoft Edge」の拡張機能が充実すれば要らない子になるはずだったのですが、意外に全然ダメダメなのでサクッとね。
 Release 4: 3.0 (17/08/29)  new design improve error handling  ほんとは Visual Studio 2013 のプロジェクト（旧ストアアプリ、なんていうの？ WinRT？）をちまちまアップデートを……と思っていたのですが、途中でめんどくさくなって、また一から作り直しました！　さすがに3回目ともなると、半日立たず作れていい気分です（吐血   と比べたらだいぶ良くなったと思いますが、プルダウンメニューにしたのはイマイチかもしれない。自分で使いながら改善を模索していこうかと思います。ちょっと面白いのは、このアプリからまた［共有］機能が呼べることです。整形した URL をさらにほかのアプリへ渡す、なんてこともできるようになりました。これに伴い、Twitter へ投稿する機能は削除しています。［共有］機能を使った方がいいと思います。
  方、ときどきデータがクリップボードにコピーされないという不具合は根絶できませんでした。 Clipboard.Flush() を呼べばアプリケーションのライフサイクルが終わってもデータがクリップボードに保持されるみたいなので、それで解決かと思ったのですが、たまに COM 側で例外が飛んできます。とりあえず通知だけ実装してリリースしましたが、今後の課題です*1。
    形ルールの管理画面も新しくなりました。昔は画面遷移がよくわかってなかったのですべての要素を一画面にツッコむという荒業でしのいでいましたが、それに比べるとだいぶ使いやすいはずです。正直、昔の画面は、しばらくたつと作った本人ですらよくわからなくなるひどいものでした。
  と、機能には関係ないですが、C# 7.1 を使ってみました。いろいろ簡単に書けて幸せですけど、間違って x86/Debug の C# のバージョンだけを latest に設定していたので、パッケージのビルド（Release）でコンパイルがコケて 3 分ぐらい悩みました。こんなことで躓くのは僕だけかもですが、皆さん気を付けましょう（【更新】Clipper - Windows Store WatchClipper を購入 - Microsoft ストア 日本
*1:WPF での解決策はみかけるけど、UWP での解決は見つからない……ワークアラウンドもいろいろ考えたけど、実装が面倒なだけで効果的な解決にはなってなかったのでとりあえず削除  </description>
    </item>
    
    <item>
      <title>Diff ツール「Subun」v1.1.2.0</title>
      <link>https://blog.daruyanagi.jp/entry/2017/08/28/124221/</link>
      <pubDate>Mon, 28 Aug 2017 12:42:21 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/08/28/124221/</guid>
      <description>UWP 製の差分表示ツール「Subun」をアップデートしました。【更新】Sabun - Windows Store Watch（自分で作った更新チェッカーサイトでストアで公開されたことを知る……）変更点は以下の通り。
 v1.1.2.0  ファイルピッカーで何も選択しなかった場合にアプリがクラッシュする不具合を修正  今回は @od_10z さんにテストしていただきました。 @daruyanagi 一応ご報告です。
sabunをHP Elite x3(W10M)で動かしたところ、ファイル開くボタンを押してから戻るとアプリがクラッシュするようです。
また、ファイルを指定してから戻ってきてクラッシュ後、再度アプリを立ち上げようとすると即クラッシュします。
&amp;mdash; ファイレクシアのしゃろとも、ＯＤ−１０Ｚ ／ ◇◇(黒/Φ)(赤/Φ) (@od_10z) August 20, 2017  りがとうございます！　もう一つのバグは自動生成コードのなかで発生していたのでちょっと対応が難しいかもしれない（調子に乗ってよくわかりもしない「Windows Template Studio」を使ってみた弊害？）。今のアプリのできにはまったく満足していないので、もっとシンプルかつクールな次期バージョンにご期待してください――プライオリティが低いのでいつになるのかわかりませんが！Sabun を購入 - Microsoft ストア 日本</description>
    </item>
    
    <item>
      <title>Surface Laptop を買ったので、簡単な Diff ツールを作って公開した</title>
      <link>https://blog.daruyanagi.jp/entry/2017/08/16/184814/</link>
      <pubDate>Wed, 16 Aug 2017 18:48:14 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/08/16/184814/</guid>
      <description>  urface Laptop がほしくなったので、近所のエディオンまでバイクをかっ飛ばして買ってきました。Windows 10 S を実機で使ってみたかったのダ！それにしても、Windows 10 S 縛りはキツいですね。最近はストアも充実してきたのだけど、まだまだ圧倒的にアプリが足りない。でも、アレもない、コレもないと愚痴ってるだけってのもアレなので、とりあえず急場しのぎでほしかった Diff ツールをサクッと作ってみました（秀丸のは使いにくいなぁ……orz）。
  本的に2つのテキストファイルを開いて比較し、変更箇所を色分けするだけです。フォルダーボタンを押すとファイルピッカーが現れるので、比較したいファイルを指定してください。色分けの意味は以下の通り。
 黄色：変更（変更された段落は薄い黄色） 赤色：削除 緑色：追加（挿入された段落は薄い緑色） 内部的には色のカスタマイズは打ち消し線・下線などの追加が可能になっているので、将来バージョンがでることがあれば設定画面から変更できるようになるはずです（現バージョンはテーマの変更機能のみを実装）。   ァイルのドラッグ＆ドロップも一応対応しています。ターゲットはフォルダーボタンが無難です（あとで気が付いたんだけど、バグってて他の部分ではドラッグが受け付けてもらえない）。
 単一ファイルの場合：ドロップしたポイントで判定して、左右どちらかで開くようになってます 複数ファイルの場合：1つは左側、もう1つは右側で開くようになってます（3つ目以降は無視） Diff のアルゴリズムは、以下から拝借しました。[2007/3/15 (木)](http://d.hatena.ne.jp/siokoshou/20070315)ほかにも Google が作った Diff ライブラリが有名みたいです。  Google Code Archive - Long-term storage for Google Code Project Hosting. こっちは人間に読みやすいよう、ごちゃごちゃしてくれる機能なんかがついているようですが、行単位の比較がないのかな？　使うだけなら割と簡単でしたが。 ### ダウンロード [Sabun を購入 - Microsoft ストア 日本](https://www.microsoft.com/ja-jp/store/p/sabun/9pdrdtvdp8fm)Windows 10 Mobile でも利用できるようですが、ユーザーインターフェイスのテストをまったくしていないので、おそらく使い物にならないでしょう。  </description>
    </item>
    
    <item>
      <title>［共有］機能で「はてブ」を見るアプリ「Hateboo」を作ってみました。</title>
      <link>https://blog.daruyanagi.jp/entry/2017/07/03/001442/</link>
      <pubDate>Mon, 03 Jul 2017 00:14:42 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/07/03/001442/</guid>
      <description>Sの［共有］機能でシェアした URL につけられている「はてなブックマーク」を閲覧したり、「はてなブックマーク」を付けることができるアプリを“ストア”でリリースしてみました。よくログインに失敗したり、Windows 10 Mobile だと設定が見切れていて表示できない（プロ生ちゃんアプリでも同じミスやらかしたなー）など、自分で使っていてもポツポツ不具合が見つかるダメアプリですが、おいおいよくしていきたいと思います。とくにログインがよく失敗します……エラーが表示されたら、何とかリトライしてみてください（ごめんなさい！！）。デザインもダメダメだしなー（XAML 力が低い）、今度、その筋の人に相談させてもらおうと思う。なんせ、“ストア”で名前をキープして一年近く放置していたもんで……完成度はともかく、初版を出しておきたかったのだ！「+アプリ内購入が含まれています」と書かれていますが、別にないです。むかしサンプルとして“ストア”でアプリ内購入を作ったのをそのままにしちゃってた。あー、でも、どうせだから今度なにか追加してみようかな。</description>
    </item>
    
    <item>
      <title>Yakitori 1.0.0.0：Windows 10 のネイティブ機能を活用したスクリーンショット支援ツール</title>
      <link>https://blog.daruyanagi.jp/entry/2017/06/15/235744/</link>
      <pubDate>Thu, 15 Jun 2017 23:57:44 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/06/15/235744/</guid>
      <description>  週は身内に不幸があったりちょっと情緒不安定だったので、手慰みに Windows 10 のスクリーンショット機能をジャンプリストから利用できるようにするツールを作ってみました。「ネイティブ機能を利用する」という手抜きシンプルさがウリです。
  ツールの名前は、大阪へ向かうフェリーのレストランで「撮る……撮る……」と名前を考えながら晩飯を選んでいたら、いつの間にかお盆の上に焼き鳥があったという故事から採っています。
### なぜ作ったのか [ツールなしで“矩形キャプチャー”が可能！「Creators Update」に新搭載されたスクリーンショット機能が便利【やじうまの杜】](http://forest.watch.impress.co.jp/docs/serial/yajiuma/1061300.html)Windows 10 Creators Update 以降では OS ネイティブのスクリーンショット機能が拡充されていますが、  キーボードショートカットを覚えるのが面倒 クリップボードへコピーされた画像をファイル化するのが面倒 スクリーンショットフォルダーがどこにあるのか分からん＆開くのが面倒 なのではないかと思い作ってみました。あと、常駐しないのもよいところかな。逆にジャンプリストの利用が前提になっているのはマイナスかもね。なお、作った本人は「WinSnap」という有償ツールを愛用しているので、この手のツールは要らない模様（ぉ  ### 使い方  とりあえず実行する 設定ダイアログが表示されるのでタスクバーにピン留め 次回からはジャンプリストから Windows 10 ネイティブのスクリーンショット機能を呼び出せます   ### 機能  Windows 10 ネイティブのスクリーンショット機能を呼び出します  アクティブウィンドウをクリップボードへコピー デスクトップ全体をクリップボードへコピー デスクトップ全体をスクリーンショットフォルダーへ保存（Windows 8以降？が必要） デスクトップを矩形選択してクリップボードへコピー（Windows 10 Creators Update 以降が必要）  クリップボードに格納されている画像をスクリーンショットフォルダーへ保存 スクリーンショットフォルダーを開く カウントダウン実行 常駐しません スペシャルサンクス：オレンジフェリーの無料 Wi-Fi  ### 蛇足：メッセージポンプ このアプリは Tonjiru と似たような方法で起動オプションを実装＆ジャンプリストから呼べるように作ってありますが、App クラスを生成せずにカウントダウンを行おうとするとうまくいきませんでした。DispatchTimer ってメッセージポンプがないとダメなのかな（よくわかってない）。ShowDialog() でもいけるやろ、と思ったのですがそっちもダメだったので、おとなしく App.Run() しています。ここを削ればもう少し高速化できるんじゃないかなーと思うのですが、まぁ、そこまでやらんでもいいかな。  </description>
    </item>
    
    <item>
      <title>Tonjiru v1.3.0 ＋ 多言語化対応</title>
      <link>https://blog.daruyanagi.jp/entry/2017/06/09/175700/</link>
      <pubDate>Fri, 09 Jun 2017 17:57:00 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/06/09/175700/</guid>
      <description>こに日本語の UI があるじゃろ（＾ｖ＾）　これをこうして――
  うじゃ（＾ｖ＾）！
  やり方は @Grabacr07 先生のをほぼパクった。WPF アプリの国際化 (多言語対応) と、実行中の動的な言語切り替え | grabacr.nétしっかしこれ、リソース作るの面倒やな……みんなよくやると思うわ。最近プログラミングしてなかったので練習で作り始めたしょうもないツールなのに、作ってるうちにちょっと楽しくなっちゃった、いろいろ手を加えすぎた気がするけど、それもこれでひと段落にしようと思う（できたら Chocolatey パッケージを作ってみたいってのはあるけど）。</description>
    </item>
    
    <item>
      <title>Tonjiru v1.2.0 ＋ WPF での起動オプション、ジャンプリスト、トースト</title>
      <link>https://blog.daruyanagi.jp/entry/2017/06/08/195054/</link>
      <pubDate>Thu, 08 Jun 2017 19:50:54 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/06/08/195054/</guid>
      <description>br/&amp;gt;
 起動オプションの追加（/g で GUI 付きの起動） ジャンプリストへの対応（GUI 付きの起動を追加） ウィンドウ情報のクリップボードコピー（JSON 形式） ウィンドウ情報のファイル保存（JSON 形式） 通知機能 安定性の向上     ### WPF と起動オプション 起動時に［Shift］キーが押されていたら GUI を起動するという挙動は  App.xaml の StartupUri を削除 App.Startup でキーの押し下げ確認と MainWindow の自前生成 という感じで実現していたんだけど、起動オプションを付けたら破綻したので、  App.xaml の StartupUri を元に戻す App.xaml のビルドアクションを Page にして、main 関数を自分で書く という感じに変えた。 ```cs [System.STAThreadAttribute()] public static void Main() { var args = Environment.GetCommandLineArgs(); if (args.Contains(&amp;quot;/g&amp;quot;) || (Control.ModifierKeys &amp;amp;amp; Keys.Shift) == Keys.Shift) { var app = new Tonjiru.</description>
    </item>
    
    <item>
      <title>Tonjiru v1.1.0 ＋ GitHub Flow × GitHub for Windows</title>
      <link>https://blog.daruyanagi.jp/entry/2017/06/07/191844/</link>
      <pubDate>Wed, 07 Jun 2017 19:18:44 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/06/07/191844/</guid>
      <description>br/&amp;gt;
 アイコンを付けた SendMessage と PostMessage を選択できるように 不具合の修正 SendMessage だと相手がメッセージの処理を完了するまで制御が返ってこないので、PostMessage を使う方がいいかなって思った。    ### 関係のない話：GitHub Flow × GitHub for Windows &amp;gt; GitHub Flowとは何だろうか？  masterブランチのものは何であれデプロイ可能である 新しい何かに取り組む際は、説明的な名前のブランチをmasterから作成する（例: new-oauth2-scopes） 作成したブランチにローカルでコミットし、サーバー上の同じ名前のブランチにも定期的に作業内容をpushする フィードバックや助言が欲しい時、ブランチをマージしてもよいと思ったときは、 プルリクエスト を作成する 他の誰かがレビューをして機能にOKを出してくれたら、あなたはコードをmasterへマージすることができる マージをしてmasterへpushしたら、直ちにデプロイをする これがフローのすべてだ。
 GitHub Flow (Japanese translation) · GitHub  去年ぐらいからこれを実践している（つもり）なのだけど、如何せん、一人でやっているのであまり自信がない。ので、自分のやり方をさらしておく。
#### 1. 何か改善を思いついたら issue にメモする   の作業が一番面倒くさい……なにかいいアプリ（できればモバイル）があればいいんだけどな。
 #### 2. GitHub for Windows を起動して Sync   マンドだと間違えるマンなので、GUI クライアントを使う。GitHub for Windows（現行安定版）を起動したらこまめに Sync しておく。</description>
    </item>
    
    <item>
      <title>デスクトップのウィンドウを全部閉じるツール「Tonjiru」を作った</title>
      <link>https://blog.daruyanagi.jp/entry/2017/06/06/220256/</link>
      <pubDate>Tue, 06 Jun 2017 22:02:56 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/06/06/220256/</guid>
      <description>いてるウィンドウを全部閉じてデスクトップをキレイにするアプリ「Tonjiru」を作った。似たようなアプリ「CloseAll」の仕様が少し変わっていて、あまり使い勝手がよくないなと思ったので、「これぐらい簡単に作れるだろう」と思ったのだが、作りこむといろいろ面倒だった（とくにストアアプリへの対応）。開いているウィンドウをまとめて閉じてデスクトップをスッキリさせる「CloseAll」v2.1／最新版ではWindows 10をサポート。UWPアプリのウィンドウ列挙も可能に名前は**「閉じる……閉じる……」**と悩みながら晩御飯を作っていたら、いつの間にか**豚汁**ができていたので、それにあやかってつけた。松山は麦味噌が多いのかな、結構適当に作ってもおいしいのができる。仕様的にはシンプルで。起動すると GUI なしに開いてるウィンドウを全部閉じて終了するだけ（これが欲しかったんだよ！）。［Shift］キーを押しながら起動すると GUI が現れ、終了するアプリをチェックで選べる。
  応除外リストを作ったけど、プロセス名ベースなのがあまりイケてない気がする。あと、終了メッセージを送ってもアプリによって挙動が異なるので、WM_CLOSE と SC_CLOSE の両方を送っている。なので、未保存のドキュメントがある場合に「保存しますか？」と確認ダイアログを出すアプリでは、キャンセルして終了をスキップしても、もう一回同じダイアログが表示される（計2回）。あまりイケてないから、将来バージョンではどっちのコマンドを送るかを選択できるようにするかなーと思っている。
### 与太話その一：ストアアプリへの対応 EnumWindows() でトップレベルウィンドウを列挙すると、ストアアプリは「**ApplicationFrameHost**」というのが引っ掛かるが、これは所謂ガワに過ぎない。これではストアアプリを一意に区別することができないので、その子ウィンドウをたぐって「**Windows.UI.Core.CoreWindow**」というのを探し、そのプロセス名（「ストア」アプリだと“WinStore.App”）をとった。もう一つ面倒くさいのが「Microsft Edge」で、こいつはガワのほかにもコンテンツプロセス（MicrosoftEdgeCP）をいくつか余分にもっている。これをひっかけるのは余分だし、ほしいのは“トップレベル”ウィンドウなので、独自にフィルタリング処理を追加した。ただし、ここらへんで頭がこんがらがってきたので、ストアアプリの除外処理はいろいろバグバグだ。いずれ直そうかと思うけど、とりあえずはこのままにしておく。 ```cs private static bool EnumChildWindowProc(IntPtr handle, IntPtr lParam) { var builder = new StringBuilder(256); GetClassName(handle, builder, builder.Capacity); // ストアアプリのためのハック -&amp;gt; &amp;quot;Windows.UI.Core.CoreWindow&amp;quot; を探す if (builder.ToString() == &amp;quot;Windows.UI.Core.CoreWindow&amp;quot;) { int process_id; GetWindowThreadProcessId(handle, out processId); process = Process.GetProcessById(process_id); // プロセス情報を保管 if (process != null) return false; // Microsoft Edge は null だった。とりあえず飛ばしておくことにしておこう } return true;  }</description>
    </item>
    
    <item>
      <title>今年もやります！　プログラミング生放送勉強会＠サイボウズ株式会社 松山オフィス</title>
      <link>https://blog.daruyanagi.jp/entry/2017/03/25/201141/</link>
      <pubDate>Sat, 25 Mar 2017 20:11:41 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/03/25/201141/</guid>
      <description>プログラミング生放送勉強会 第4？回＠サイボウズ株式会社 松山オフィス : ATND今年もプログラミング生放送勉強会が、愛媛・松山で開催されることになりました。場所を貸してくださることになったサイボウズさん、交渉してくださったなかじ先生、ありがとうございます。もうすでにスピーカーを引き受けてくださる方がいて、今からとても楽しみ。今年もいろいろ楽しく、お勉強できたなーと思います。ちなみに**プログラミング生放送勉強会（プロ生）**というのは、IT 関連の話題で楽しくお勉強する会です。別にジャンルは問いません。AWS でも Docker でも Prolog でもいいし、Google でお昼ご飯食べた話や、シリコンバレー行ったついでにホモストリートを探検した話でもいいです。なんでもいいので、軽く IT に関係のあるお話をもってきてもらって、興味の幅を広げていただければと思います。オンラインでの放送もあると思うので、_「くっそー！　愛媛で鯛めしとジャコカツ食って、道後温泉入りたかったのになぁ！　くっそー！」_って方も、リモートで参加して空気だけでも感じていただければ。もちろん、セッションやライトニングトークも受け付けています。度胸試しに、何かしゃべりたいことがある、俺の偉大な発明を見ろ、そんな感じのことを募集しています。プログラミング生放送勉強会 第4？回＠サイボウズ株式会社 松山オフィス……の懇親会 : ATND懇親会にもぜひ参加していただければと思います。ちなみに前回はこんな感じだった気がします。youtu.be僕はいろいろ悲しい目に遭いましたが、みんなが楽しんでくれたらうれしいです。プログラミング生放送勉強会 第41回＠サイボウズ株式会社 松山オフィス 参加ありがとー #pronama - だるろぐ
### 追伸   しいんで早めに登録を済ませていただけると嬉しいです。
 </description>
    </item>
    
    <item>
      <title>AbemaTV の視聴予約をする UWP アプリ「Abema.Alart」を公開停止にしました。</title>
      <link>https://blog.daruyanagi.jp/entry/2017/03/14/193844/</link>
      <pubDate>Tue, 14 Mar 2017 19:38:44 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/03/14/193844/</guid>
      <description>   当社は、インターネットTV局「AbemaTV」（以下、「本サービス」といいます。）を運営しております。  当社は、貴殿による、本書末尾に記載するウェブサイト（以下「貴殿サイト」といいます。）上におけるアプリケーションソフトウェア「Abema.Alart」を用いて 本サービス上のコンテンツを視聴予約する方法の解説及び当該ソフトの提供について、以下のとおり通知いたします。
当社は、貴殿による上記行為は、著作権侵害等の不法行為を構成するものと判断しております。 したがいまして、当社は、貴殿に対し、直ちに、貴殿サイトにおいて、本サービス上のコンテンツを視聴予約する方法について解説すること 及び当該ソフトの提供をすべて中止するよう求めます。併せて、貴殿が過去に提供された同様のソフトについても、以後利用されないよう求めます。つきましては、本書到達後10日以内に、本件に対する貴殿のご対応を当社宛にご回答いただきますようお願い申し上げます。
万が一、上記回答期限内に貴殿からの誠意あるご対応をいただけない場合には、当社は貴殿に対し、法的措置を採ることを検討せざるを得ませんので、その旨申し添えます。
ﾋﾟｬ━━━━(ﾟ∀ﾟ)━━━━!!というわけで、公開停止にしました（ソフト名の綴り間違ってんの直そうと思ってそれっきりだった／(^o^)＼）。AbemaTV の視聴予約をする UWP アプリ「Abema.Alart」を作りました。 - だるろぐちなみに、862人の方にご利用いただけたようです（最高記録だ！）。レビューは散々でしたけどｗ
  </description>
    </item>
    
    <item>
      <title>Microsoft Flow でブログの更新を Twitter で配信してみる</title>
      <link>https://blog.daruyanagi.jp/entry/2017/03/14/080000/</link>
      <pubDate>Tue, 14 Mar 2017 08:00:00 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/03/14/080000/</guid>
      <description>Windows Store Watchこれの更新を――Windows Store Watch (@win_store_watch) | Twitterで配信したいと思いました。方法はいろいろあるだろうけど（IFTTT が有名でしょうか）、今回は Microsoft Flow を試してみようと思います。確かいろいろ制限はあるけど、基本はタダです。
 月ごとの実行数 750 回 無制限のフロー作成 15 分ごとにチェック  ### 準備するもの  Microsoft アカウント Twitter アカウント ブログのフィード URL（はてなブログなら トップのアドレス/feed みたいな感じ）   ### フローを作成する フローというのは特定の処理です。今回の場合、  ブログの更新を Twitter で配信する が目的ですが、これは2つのフローを組み合わせることで実現できます。  ブログの更新を検知 検知した更新を Twitter へ投稿 Microsoft Flow にはすでにたくさんのフロー（メールを送る、プッシュ通知を送るなどなど）が用意されているので、たいていは組み合わせるだけです。   ず https://flow.microsoft.com/ へアクセスし――
  icrosoft アカウントでサインインします。
  とはフローを組み立てていくだけなのですが、実はもう「フィードを Twitter へ投稿する」という作業のテンプレートがありますので、それを使っちゃいます。
  ンプレートを選択すると――
  集画面が現れるので、Twitter 連携とフィード URL の入力をし、画面右上の［フローの作成］ボタンを押せば完成です。簡単すぎて思わず鼻毛伸びそう。</description>
    </item>
    
    <item>
      <title>Windows ストアを見守るブログ、作った。あと、ブログのデザインもリニューアルした</title>
      <link>https://blog.daruyanagi.jp/entry/2017/03/04/140328/</link>
      <pubDate>Sat, 04 Mar 2017 14:03:28 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/03/04/140328/</guid>
      <description>  iframe src=&amp;quot;https://hatenablog-parts.com/embed?url=http%3A%2F%2Fstore-watch.hatenadiary.jp%2F&amp;rdquo; title=&amp;quot;Windows Store Watch&amp;rdquo; class=&amp;quot;embed-card embed-webcard&amp;rdquo; scrolling=&amp;quot;no&amp;rdquo; frameborder=&amp;quot;0&amp;rdquo; style=&amp;quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&amp;ldquo;&amp;gt;この前の PowerShell を進化させて、はてなブログへメール送信＆ブログをアップデートするところまで完成。プライベート公開にしているのも何なので、一般公開してみました。更新履歴ばっかりのっけてるのも何なので、たまには負担にならない程度に独自記事も加えられるといいなーと思います。
  いでに、うちのブログもリニューアルしてみました（トップの画像がしっくりこないけど、また今度でいいや）。
 Blank - テーマ ストア 使いやすくていいテーマですね、これ。[PowerShell：Windows ストアのアプリの更新履歴をチェックする - だるろぐ](https://blog.daruyanagi.jp/entry/2017/03/03/145454) ### 追伸 [PVをツイートするサービス（PVTS）](http://tweetpvservice.nkd.jp/)@YanagiHidetoshi で PV もつぶやくようにしてみました。さんきゅう、id:nakaji999！  </description>
    </item>
    
    <item>
      <title>だるやなぎ LINE スタンプが再び発売されています</title>
      <link>https://blog.daruyanagi.jp/entry/2017/01/06/104242/</link>
      <pubDate>Fri, 06 Jan 2017 10:42:42 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/01/06/104242/</guid>
      <description>待たせしました！　アカウント移行の関係で一時的に購入できなかった「柳 英俊 （だるやなぎ）」LINE スタンプが再び購入できるようになっています。YANAGI Hidetoshi (Daruyanagi) - Creators&#39; Stickersもう持っている方は買わなくていいのですが、2点ほど素材が入れ替わっています（どれだかわかるかな？）。買いなおしてくれると、僕の財布におカネがチャリンチャリンでうれしいです（前のバージョンは僕の懐には入っていないんだな）。それにしても毎回、ダメだしを食らうスタンプが変わるように思えたのは気のせいかな。とても面倒くさかった。
    と、インドネシアでは販売できなくなりました。インドネシアのだるやなぎファンの方がいたら本当にすみません。俺の顔、インドネシアでは文化的に NG なのかもしれん……（震え声</description>
    </item>
    
    <item>
      <title>AbemaTV の視聴予約をする UWP アプリ「Abema.Alart」を作りました。</title>
      <link>https://blog.daruyanagi.jp/entry/2016/10/11/201541/</link>
      <pubDate>Tue, 11 Oct 2016 20:15:41 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2016/10/11/201541/</guid>
      <description>  00円って書いてあるけど、「無料評価版」を使えばずっとタダです。Abema.Alart – Microsoft ストアの Windows アプリ最近“だるろぐ”の収益が落ちてきているので、ビール代をカンパしてください。
### 「Abema.Alart」の使い方   動するとこういう画面が出るので、好みの番組を選択して――
  組の詳細画面で［視聴予約する］ボタンをクリック（初回利用時にバルーンで教えてくれます）。ダイアログで「登録しました」って出れば成功（過去の番組であれば失敗するはずです。重複登録のチェックを忘れていたので、次のバージョンにはつける予定）。
  間になると、トーストで通知してくれます。［視聴する］ボタンを押すと既定のブラウザーで番組を閲覧できます。
  聴予約の取り消しにも対応しています。でも、週末高松・神戸に遊びにっている間、船の中でいいアイデアが浮かびましたので、また改訂版を出すつもり。次回はもう少しエレガントになっていると思います。
 ### 失敗したこと 単語の綴り間違ってた。  </description>
    </item>
    
    <item>
      <title>UWP版「プロ生ちゃん時報」アプリを公開しました。モバイルでも使えるよ！ / マスコットアプリ文化祭だるやなぎ賞のお知らせ</title>
      <link>https://blog.daruyanagi.jp/entry/2016/10/07/172125/</link>
      <pubDate>Fri, 07 Oct 2016 17:21:25 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2016/10/07/172125/</guid>
      <description>  年のマスコットアプリ文化祭開催にあわせ、UWP版「プロ生ちゃん時報」アプリを開発しました。Windows 10 と Windows 10 Mobile で利用できます。プロ生ちゃん時報 – Microsoft ストアの Windows アプリ正時になるとプロ生ちゃんが声をかけてくれるだけのアプリですが、Mac 版（KeiSignal を Mac App Store で）を見かけたので作ってみたかったんだ！　アクティブタイムの設定が行えるので、夜は黙っててほしいといった要望にもお応えできます。トーストによる通知も可能。今気づいたけど、トーストのセリフも声にあわせればよかったな。まぁ、追々アップデートします。ちなみに、うちはテストのためすべての環境にこのアプリを入れているので、正時になるとにぎやかでいいです。なお、アプリケーションのアイコンには去年の作品を流用させてもらいました。単色SDプロ生ちゃんお礼申し上げまする。あと、このアプリを作ったときのことは11月に開催予定（のはず）のプロ生熊本でお話しできるかと。2016年 プロ生勉強会 予定まだ更新されてないみたいだけど、チェックしておいてください。
### だるやなぎ賞のお知らせ   と、今年もマスコットアプリ文化祭に協賛させていただきます。僕の琴線に触れたアプリには“だるやなぎ賞”が贈られるほか、秀逸なフリー素材には“フリー素材賞”を設定しました。去年のサイン手形よりは豪華な賞品を考えているので、みんな狙ってくれ！（お尻フリフリキャラクター &amp;amp; 賞
 </description>
    </item>
    
    <item>
      <title>マスコットアプリ文化祭2016、始まります！ ＆ 去年の“だるやなぎ賞”寸評</title>
      <link>https://blog.daruyanagi.jp/entry/2016/09/29/161557/</link>
      <pubDate>Thu, 29 Sep 2016 16:15:57 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2016/09/29/161557/</guid>
      <description>「マスコットアプリ文化祭」が帰ってきた！マスコットアプリ文化祭2016、開催予告！「マスコットアプリ文化祭」というのは、巷にあふれるいろんなキャラクターを題材にしたアプリケーションのコンテストです。実はアプリケーション以外の作品も応募可能なんですけどね！　かくいう私“だるやなぎ”もキャラクターといえばキャラクターなので使っていただいていいですし、地味に“だるやなぎ大賞”“だるやなぎ賞”を協賛させていただいています。
  、思い出したんですけど、2015年の「マスコットアプリ文化祭」の“だるやなぎ大賞”“だるやなぎ賞”の寸評をブログで書くという約束をしていたのをちゃっかり忘れていたので、この機会にちょちょいと紹介したいと思います。
### だるやなぎ大賞   だるやなぎ大賞”は、「Mascot Shortcut Maker」です。Mascot Shortcut Maker
&amp;gt; アプリのショートカットをマスコットキャラのアイコンで作成します。  プリセットされたマスコットのアイコンから選択できます。 全部ずんだもちとかだるやなぎにするとかっこいいです。
大事なことなのでもう一度言いましょう。_だるやなぎにするとかっこいいです。_この紹介文だけで“だるやなぎ大賞”をあげようと決意しました。このアプリを使っていて思い出したのですが、僕が高校の頃入り浸っていた“パリ研（パソコン研究会のソがリになってる）”のパソコンでは、ごみ箱のアイコンが“木”のアイコンになっていました。どこかのだれかが、やなぎの木をゴミ箱にしたんですな。ほんと許されざるやつですね。でも、_アプリのアイコンが気に入らないなー、だるやなぎにできたらいいのになー_って思う人は案外多いんじゃないかと思います。本ソフトを使えば、そういう野望を簡単に実現できるというわけですな。たいしたことはないといえばないんだけど、こういうのがないと世の中面白くないよねー。
#### だるやなぎ賞 だるやなぎ賞は2作品。   作品目は、「秋葉防衛軍 ADF」です。秋葉防衛軍 ADFアキバは大事だもんね、守らないとね！マウスとキーボードでライフルやサブマシンガン（だったような気がする）で敵を撃つ感じのよくある感じではあるんですが、こういうのは割と好きだったり。見知った街が舞台（超リアルかっていうとそうでもないんだが、見覚えがある感じなんだよなー！）だと、楽しさも倍増って感じです。次回作への期待も込めて、“だるやなぎ賞”をお送りします！　あっ、要らないとか言わないで！！
  う1作品は、「プロ生ちゃんドリンクサーバ」です。プロ生ちゃんドリンクサーバ
&amp;gt; プロ生ちゃんドリンクサーバは 同一のLAN内からブラウザでアクセスすることで飲み物を注文することができる自作ドリンクサーバです。ペットボトルの蓋を交換するだけで飲み物の交換をおこなったり， 飲み物の変更などが容易にでき，また複数の飲み物を混ぜた注文ができます。注文した飲み物はプロ生ちゃんの口から&amp;quot;だばぁ&amp;quot;します  単純に頭おかしいなぁと思いました（褒こういう発想ができる大人になりたかったですね。無駄に電子パーツがごてごてしててそこはかとなくカッコいいところや（文系人間なんで、こういうのにしびれる！　あこがれるぅ！）、アゴが外れてる感があるのも、だばーって感じでいいです。でも、愛媛県民的にはポンジュースを出してほしかったところなので、大賞ではなく賞にしときます。今年はおしっこな！（←ぉぃこら
  ### 追伸 ことしは俺も参戦するぞー！！  </description>
    </item>
    
    <item>
      <title>Aoba 1.5.0：艦これキャプチャーツールに アニメーション GIF 録画機能をつけた</title>
      <link>https://blog.daruyanagi.jp/entry/2016/09/03/202159/</link>
      <pubDate>Sat, 03 Sep 2016 20:21:59 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2016/09/03/202159/</guid>
      <description>  りあえずほしい機能は全部付けたので、あとは自分で使いながら改良するだけかも。
 ダウンロード GitHub で ClickOnce するのは、思った以上に制約が多いのでやめて、代わりに Azure Blob Storage に置いてみたよ。初めて使ってみたけど、そんなに難しくなかった。お金はちょっとかかるっぽいけど、割と安いみたい。   UI クライアントをいくつか比較してみたけど、CloudBerry Explorer というのが一番使いやすかったかも。コマンドラインだったら AzCopy ってのもあるみたいで、自分みたいに ClickOnce のファイルを Azure Blob Storage に置くだけだったらそっちの方が楽かもしれない。
### 更新点  Twitter 投稿画面の改善 Gif キャプチャー機能 設定の保存 コードのリファクタリング Twitter の投稿画面では、フリップビューのパチモノみたいなのをつけて（アニメーションないし、フリックではめくれない劣化版）、過去の写真も選択できるようにした。連写機能で撮った決定的瞬間をうｐしたいときとかに使えるかも。作り方は簡単で、  スクショをリスト List&amp;lt;string でもっておく ViewModel で int SelectedIndex をもつ Image に List[SelectedIndex] をバインド ボタンに SelectedIndex を ++/-- するコマンドをバインドしていい感じに配置 するだけ。ユーザーコントロールにして、切り替えのアニメーションぐらい付けたいけど、自分の XAML 力でそこまでできるかどうかはわからない。  </description>
    </item>
    
    <item>
      <title>Aoba 1.4.4：艦これキャプチャーツールに CoreTweet で Twitter 投稿機能をつけた</title>
      <link>https://blog.daruyanagi.jp/entry/2016/09/01/204619/</link>
      <pubDate>Thu, 01 Sep 2016 20:46:19 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2016/09/01/204619/</guid>
      <description>  じさんでも簡単に Twitter を組み込めると人気の CoreTweet で投稿機能を組み込んだよ。メッセージの文字数制限チェックが甘いとか、細部でダメなところも多いけど、気を付けていれば問題ない（ぁCoreTweet については酢酸先生のまとめを参考にするとよいかも。必要なことはすべて酢酸先生（たち）が教えてくれた。あと、Tokens.Create() で作成したトークンがログイン可能なのかを調べる手段がわからなかったのだけど、以下のサイトが参考になった。Tokens.Create() はいろいろ組み立てるだけ。検証は Account.VerifyCredentials() を使う、と（頭にメモメモほかには
 Properties.Default.Settings を書き込んだら Save() しなきゃ保存されない。すっかり忘れてて悩んだ Twitter から取得したトークンを Properties.Default.Settings に書き込んだら設定ファイルを .gitignore しとかないと GitHub で全裸公開しちゃうことになる（キーをリセットしたよ ViewModel からウィンドウを閉じる方法はいろいろあるが、ボタンに CommandParameter={Binding Window1} して Command 側で (Window1 as Window).Close() するのが一番簡単っぽい というあたりが今回の気付き。マイナーバージョンがインクリメントされているのは、GitHub に置いたファイルを ClickOnce で配布できないかを試したから。結論的には、「自動更新機能は使えないかもだけど、インストーラーで配布することはできる。毎回 ZIP を作るのよりはマシだし、使う側も便利かな」って感じ。自動更新機能は次回からは削除する。ちなみに、今回からは ZIP での配布はない。ほしいかな？　この前のプロ生＋わんくま大阪で PowerShell を少し学んだので、パッケージするスクリプトでも書いてみるか。アプリのダウンロードは【こちら】から。 ### 主な変更点  Twitter投稿機能を付けた ClickOnce での配布 ちょっとコードを整理した（今度真面目にやる） タブレットモードで利用したときのちょっとした不具合を修正 GIF キャプチャー機能をつけたら、だいたいやりたいことは終わりだな。  </description>
    </item>
    
    <item>
      <title>Aoba 1.3.0：艦これの画面をビデオキャプチャーできるようにした / Screna っていうライブラリが超便利</title>
      <link>https://blog.daruyanagi.jp/entry/2016/08/29/175526/</link>
      <pubDate>Mon, 29 Aug 2016 17:55:26 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2016/08/29/175526/</guid>
      <description>これの画面を音声付きで動画キャプチャーできるようにしたよ。それに伴い、UI をいろいろ変更。
  画は My Video\Aoba に保存される。もちろん、ボタン一発で開けるようにしてある。フレームレートは弄れるけど、今のところフォーマットは AVI（MotionJPEG）で固定。 設定画面作るのめんどいからね、しょうがないね。
#### スクリーンキャプチャー用のライブラリ Screna 今回は Screna というライブラリのお世話になった。NuGet で簡単にインストールできる点、動画キャプチャーをサポートしている点などがいい感じ。C# でキャプチャーする方法はいろいろ紹介されてるけど、現時点ではこれが割とモダンだと思った。FFmpeg で MP4 圧縮もできるみたいだけど、今回はそこまでは試していない。基本的な使い方はこんな感じ（公式のサンプルそのまま）。まず AVI サポートのために Screna.SharpAvi を NuGet でインストール。 ``` Install-Package Screna.SharpAvi ```次にネームスペースを追加。 ```cs using Screna; using Screna.Avi; ```cs // どの画像をとってくるかを決める IImageProvider を初期化 var provider = new ScreenProvider(); // デスクトップ全体をキャプチャー // 動画を書き込む AviWriter を初期化 var VideoWriter = new AviWriter(&amp;quot;output.avi&amp;quot;, AviCodec.MotionJpeg); // レコーダーを作って録画開始 var Recorder = new Recorder(VideoWriter, provider, 10); Recorder.Start(); // なにかの処理 Recorder.</description>
    </item>
    
    <item>
      <title>Aoba 1.2.0：連射モードの追加と通知の改善 / GitHub で Pull Request を Merge できなくなった</title>
      <link>https://blog.daruyanagi.jp/entry/2016/08/29/045312/</link>
      <pubDate>Mon, 29 Aug 2016 04:53:12 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2016/08/29/045312/</guid>
      <description>  射モードを追加。指定したインターバルでタイマーが動き、取得済みのゲームエリアをパシャパシャするヤツ。タイマーが動いていることを示すインジケーターがいいの思いつかなかったので、とりあえずアイコンをオレンジにしておいた。この辺りは永遠に適当。
  ューに Brush をバインドしたつもりが動かずに悩んだけど、System.Windows.Media ではなく System.Drawing になっていた orz
  知もいい感じにしておいた。通知は切ることもできるけど、ゲームエリアの取得に失敗したときだけはでるようにしている。
#### Git の使い方わからん GitHub の Visual Studio 拡張機能を使っていたのだけど、操作をミスって Pull Request を Merge できなくなった。GitHub で「コマンドラインでコンフリクトをなんとかしろやボケ」と言われてしまう（スクショとり忘れた）。とりあえず閉じておいた。ローカルの master とリモートの master に齟齬ができたみたいだなぁ。   したいのだけど、やり方がさっぱりわからなかったのだが、「GitHub for Windows」を起動してごちゃごちゃしていると……
  んかコンフリクトのあるファイルが表示されたので、当該部分を消してコミットして Sync しておいた（Sync がなにやってんのかはイマイチよくわからんが）。なんかよくわからんけど助かった……。Visual Studio 拡張機能にもいいところがあるんだろうけど、_ブランチ切って*1、コードをしこしこ書いて、終わったらプルリクエスト作って、GitHub で Merge して、Release を作成する（、ブランチを削除する）_っていうのがシームレスにできる「GitHub for Windows」の方が自分はいいかも。手を動かしてるうちに、いろいろ分かってくるかもだし（ただし、Sync はイマイチよくわからん）。
*1:今回はここで間違ったみたい。remote と local が同期されていないのに remote からブランチをきって local にコミットしたのか？  </description>
    </item>
    
    <item>
      <title>艦これのスクリーンショットを撮れるツールを自作した</title>
      <link>https://blog.daruyanagi.jp/entry/2016/08/28/155619/</link>
      <pubDate>Sun, 28 Aug 2016 15:56:19 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2016/08/28/155619/</guid>
      <description>  休み中にオンラインストレージの掃除やツールのアップデートをやっていたのだけど、愛用していた艦これのキャプチャーツールが動かなくなったので、WPF で自作した。一応自分ところでは動いているのだけど（Windows 10 version 1607＋Visual Studio 2015 Update 3で動作確認）、参照の不足なんかで動かないことがあるかもしれない。使い方は
 一番左の検知ボタンを押してゲーム画面の範囲を検出する 検出に成功すると、キャプチャーボタンが有効化される キャプチャーボタンを押す だけ。キャプチャーが成功すると、トーストが出る（なので、Windows 8 以降じゃないと動かないと思う）。   ーストをクリックすると、キャプチャーした画像にアクセスできる。
  応、頑張った点としては
 マルチモニター対応（自分が Surface 3 or サブディスプレイで遊んでるので スケーリングとか拡大表示にも対応してるかも（大きさは決め打ちにしていない  ゲーム画面の左上ピクセルかなーって感じのピクセルを探して、そこからある程度デカい矩形を検出 そんな感じで割と適当なのと、ちょっと処理が遅いかなって感じなので、気が向いたら改善するかも  みたいな感じ。簡易なロジック自体は割と簡単にできたけど、UI を整えたりなんだかんだで（WPF でトーストのだしかたわかんねぇ……ぐちゃぐちゃ参照を追加したけど、ここでちょっと間違ってる気がする）、半日ぐらいかかった（  #### 追伸 Visual Studio の GitHub 拡張を使ってみたけど、やっぱり自分には GitHub アプリの方が使いやすいかな……。  #### 追記 タブレットモードでも最前面表示されるように改修。  WindowStyle を ToolWindow にする ShowTaskbar を false にする でいけるっぽい。  </description>
    </item>
    
    <item>
      <title>HoloLens おさわり会 in 愛媛・松山 マツヤマンスペース 参加ありがとうございました！</title>
      <link>https://blog.daruyanagi.jp/entry/2016/06/28/163058/</link>
      <pubDate>Tue, 28 Jun 2016 16:30:58 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2016/06/28/163058/</guid>
      <description>だるさんのほろれんずブログ待機
&amp;mdash; 蜜葉 (@mitsuba_yu) June 28, 2016  加報告を書くまでが勉強会やねんで（震え声
### HoloLens おさわり会 in 愛媛・松山 全国持ち回りで行われていた HoloLens おさわり会の愛媛・松山版（残念ながら、今回で最後みたい）。今回は駅前のコワーキングスペース・マツヤマンスペースさんをお借りして開催しました。ありがとうございます。あと、公私忙しいにもかかわらずわざわざ Hololense を松山にまで持ってきてくれた @mitsuba_tan もさんきゅーです。   HoloLens* というのは、Microsoft が開発した **MR（Mixed Reality：複合現実）デバイス**です。これ、ディスプレイだけじゃなくて、PC がまるごと1個乗ってるんですよ（別途、母艦が必要な HMD（ヘッドマウントディスプレイ）との大きな違いですね！）。スペックはウチがもっている Surface 3 に GPU を足した感じ？　かなりコンパクトで、プロトタイプにしてはデザインも洗練されているなぁというのが第一印象でした。心なしか、みんな装着するとイケメンになるんや。なお、日本で入手するのは今のところ難しいみたい。日本マイクロソフト的には今のところ存在しないことになっているデバイスです（ぁ価格は40万円ほど？　個人的には40万はちょっと出せないけど、20万だったら断然ほしい、泣きながらリボ払いで買うわって感じ。
 ### VR、AR、そして MR さて、先ほど MR デバイスと紹介しましたが、これはなんなのでしょう？　よく耳にする VR とか AR とはどこが違うのか？   mitsuba_tan がわかりやすいスライドを用意してくれたので、そっちを見てみるとわかりやすいかも。
  *VR（Virtual Reality：仮想現実）**っていうのは、現実に存在しない世界を人工的に見せること。@kovlt さんが会場にもってきてくれた「GearVR」がいい例ですね。目が完全にふさがって、前が見えません。見えるのは人工的に作り出された世界。
  方、**AR（Augmented Reality：拡張現実）**というのは現実の世界に情報を上乗せできる技術です。一時期流行った「セカイカメラ」なんかがそれですね。個人的にはアニメ「東のエデン」にでてくるエデンシステムなんかがピッタリかなって思います。ケータイで写すと、その被写体に関する情報を検索して、吹き出しで表示してくれます。VR と AR の違いは、双方向性です。VR は仮想現実が五感を刺激し、反応を起こすとそれが仮想現実へフィードバックされます。わかりやすく言うと、_バーチャルメイドさんのパンツをのぞこうとする → 平手打ちのグラフィックとともに、ほっぺたに痛みがフィードバックされる → ちょっと喜ぶ（頬の筋肉が弛緩） → バーチャルメイドさんが「なに興奮してるのよ、ブタ野郎！」と罵る_みたいな感じですね。AR は現実に情報を上乗せするだけなので、せいぜいカメラごしでみた現実にバーチャルメイドさんを写すぐらいが限界かも。</description>
    </item>
    
    <item>
      <title>今年もやるで！　プログラミング生放送勉強会＠サイボウズ株式会社 松山オフィス</title>
      <link>https://blog.daruyanagi.jp/entry/2016/05/18/182210/</link>
      <pubDate>Wed, 18 May 2016 18:22:10 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2016/05/18/182210/</guid>
      <description>iframe src=&amp;rdquo;//hatenablog-parts.com/embed?url=https%3A%2F%2Fatnd.org%2Fevents%2F75725&amp;rdquo; title=&amp;quot;プログラミング生放送勉強会＠サイボウズ株式会社 松山オフィス（6/18開催） : ATND&amp;rdquo; class=&amp;quot;embed-card embed-webcard&amp;rdquo; scrolling=&amp;quot;no&amp;rdquo; frameborder=&amp;quot;0&amp;rdquo; style=&amp;quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&amp;ldquo;&amp;gt;
&amp;gt; もはや毎年恒例？　プロ生が松山に帰ってきた！　6/18（土）、プログラミング生放送勉強会を開催します！　プロ生勉強会は、IT・開発系ノンジャンルの IT 勉強会です。参加資格は、興味があれば OK ！　初めての方も参加お待ちしてまーす。  開催まで1カ月！ノンジャンルの IT 勉強会・プログラミング生放送勉強会が今年も愛媛・松山にやってきます。今年は今のところ 23 名の方にご登録いただいています。東京換算だと 69 名なので、かなりにぎわっていますね！　まだどんな内容になるかしっかり決まってはいないのですが、スピーカー陣の顔触れを見るとかなり期待できそう（？）。しっかし、毎年恒例になってきた LT という名のロングトーク、今年は何を話す気なのか……なんか嫌な予感しかしない。あと、ライトニングトークもまだ受け付けていると思うので、「スピーカーとして登壇する勇気はないけど、話したいことがある！」みたいなヒトが要ればぜひ。かくいうボクも参加する予定です。みんなで楽しく盛り上がって、それなりに興味の幅を増やしたり、個人のモチベーションの足しにしていただければ嬉しいです。詳しくは、なかじ先生のブログも参照のこと。最後に、一つお願い。懇親会参加希望の方は、場所を決める都合もあるので早めに登録しておいてください。あと、ここがお勧めっていうところがあれば教えてくださいね☆（ゝω・）vｷｬﾋﾟでは、当日お目にかかりましょう(｀･ω･´)ゞ</description>
    </item>
    
    <item>
      <title>さよなら ExpressWeb </title>
      <link>https://blog.daruyanagi.jp/entry/2016/02/18/104255/</link>
      <pubDate>Thu, 18 Feb 2016 10:42:55 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2016/02/18/104255/</guid>
      <description>  br/&amp;gt;
&amp;gt; 平素は弊社ExpressWebレンタルサーバーをご利用いただき、誠にありがとうございます。  2010年4月より提供してまいりましたExpressWebですが、 この度、本サービスを終了させていただく事になりましたので、ご案内申し上げます。サービス終了に伴い、お客様には大変ご迷惑をおかけすることを、深くお詫び申し上げます とともに、多くのお客様にサービスをご愛顧いただきましたこと、 スタッフ一同心から感謝申し上げます。
  終了対象サービス ExpressWeb
  サービス終了日 各お客様の「現在のご利用期限」を以て終了
 最新情報 - データ・ジャパン株式会社    WebMatrix で便利にお安く使わせていただいていた ExpressWeb ですが、とうとうウチのアカウントも終了と相成りました。2011年2月から運用していたみたいなので、5年ほどのお付き合いになりましたか。ありがとうございます。ExpressWeb がなかったら、あれだけ WebMatrix で遊ぶことはなかったと思う（そして、WebMatrix はどうしよう問題が発生ｗ）。なお、これにともない、オレオレサービスの一部が止まっています。
@daruyanagi す、すいません。明石の工廠サイトってもう閉じてしまわれたのでしょうか？
&amp;mdash; 猫又にゃぉ助＠宿毛湾泊地所属提督 (@nekomata_nya) February 17, 2016  近はイタリア装備の改修に集中していて、自分で作ったサービスを使っておらず、気が付くのが遅れました(;´･ω･) イタリアでダメならローマにすればいいだけなので、わざわざ改修表を見に行くまでもなかった。
@nekomata_nya https://t.co/gXV4CQPHSi 一応復旧。 https://t.co/dkIWeFxmyL の DNS もそっちに向けるようにしたから、浸透（笑）したらアクセスできるようになる気がしますー
&amp;mdash; 40やなぎ ♨🍊🐟🇯🇵 (@daruyanagi) February 18, 2016  かし、外部ドメインの利用にはお金がかかるっぽくて、http://akashi.daruyanagi.jp/ での運用はちょっと考え中。申し訳ないけれど、もし使う方がいらっしゃるのなら、
 明石の改修工廠ノート - Home を代わりに使ってください。あと、http://about.daruyanagi.jp/ も使えなくなっているが、こっちは誰も困らないと思うので放置。Microsoft Azure 周りの情勢がひと段落したら、またいろいろ整備すると思うけれど、もうちょっと様子見やね。いろいろ作りたいのはあるんだけど、学習コスト考えると今はちょっとやる気でない感じ。 ### 追伸 安くて低額なプランができたらうれしいんだけどなぁ。あまりにも使い過ぎた場合はシャットダウンしてくれてもいいので、その程度のしょうもないやつを動かせて独自ドメインぐらいは使えるプラン。今は最安値で月1,000円ぐらいなのかな？　でもうち、サブドメイン切りまくって使いたいマンだしなー。今度詳しい人に聞いてみるかな。  </description>
    </item>
    
    <item>
      <title>自分でいうのもなんだけど、これはキモい！　だるやなぎ LINE スタンプが満を持して登場</title>
      <link>https://blog.daruyanagi.jp/entry/2015/10/21/210059/</link>
      <pubDate>Wed, 21 Oct 2015 21:00:59 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/10/21/210059/</guid>
      <description>とうとうだるやなぎ LINE スタンプが完成したようです。さっそく使ってみて、相手の反応を確かめてみましょう。
### 著名なメイド好きプログラマー S 氏の場合   ちゃくちゃ気に入ってくれたようです。きっと買ってくれると思います。
 ### 家族の場合   しか反応してくれませんでした（兄から見ても、他人の気持ちを慮ることのできる、デキのいい妹だと思います）が、かなり好評のようですね。なお、このあとサラッと話題を変えられて、バックトゥザフューチャーの話になった模様。
  は LINE 友達がほとんどいないので、これぐらいしか試せませんでしたが、なかなか好評のようです。ぜひ皆さんには僕の代わりにいろいろなシーンで活用していただきたいと思います（ただし、何が起こるかは保証できませんが……）。――コーヒー1本分のお値段で得られる、かけがえのない体験。既読スルーを許さない、圧倒的キモさをあなたに。だるやなぎ LINE スタンプをよろしくお願いします。また、本プロジェクトに出資していただいた方、ありがとうございました！　この場をお借りしまして、お礼申し上げます。お手製色紙をゲットされた方、大事にしてくださいね♪
 </description>
    </item>
    
    <item>
      <title>悲報：だるやなぎLINEスタンプがリジェクト される</title>
      <link>https://blog.daruyanagi.jp/entry/2015/10/06/132209/</link>
      <pubDate>Tue, 06 Oct 2015 13:22:09 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/10/06/132209/</guid>
      <description>【悲報】だるやなぎLINEスタンプ リジェクト pic.twitter.com/oLLoU3aJHp
&amp;mdash; ＪＺ５ (@jz5) October 6, 2015  すがにキモすぎたのでしょうか。現場からは以上です。
### おまけ 知らんうちにこんなのもできてた。  </description>
    </item>
    
    <item>
      <title>ありがとうございますありがとうございます！！　“柳 英俊（だるやなぎ）LINE スタンプ プロジェクト”が目標金額に到達！</title>
      <link>https://blog.daruyanagi.jp/entry/2015/09/10/002506/</link>
      <pubDate>Thu, 10 Sep 2015 00:25:06 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/09/10/002506/</guid>
      <description>  る朝、目を覚ますといきなり始まっていた“柳 英俊（だるやなぎ）LINE スタンプ プロジェクト ”ですが、このたび、皆様のご協力を得て、目標金額への到達を果たすことができました。本当にありがとうございました。そして、この喜び（と戸惑い、動揺、恐怖、呆れ）をどう表現していいのか分からず、お礼を申し上げるのが遅れてしまいましたことをお詫びいたします。本プロジェクトがゴールできたのも、ひとえに皆様の“だるやなぎ”への熱い愛があればこそ。ご支援をいただきました28人の方々には厚く御礼申し上げます（以下に挙げますお名前は順不同です）。
 しばやん さま karamem0 さま （希望しない）さま （掲載する名前については希望しません。）さま Takekazu Omi さま のはこ さま あたご さま ぼんぷろ さま はまもつ さま @miso_soup3 さま tsuwabuki さま クズ肉 さま okuzawats さま ERION1107 さま（Twitter: @erion1107） めんたろ さま @garicchi さま チャック さま 返答のない11名の方々 正直なところ_「こんなプロジェクトにお金払うなら、赤十字かユニセフにでも募金してあげた方が世界のためなのではないか」_と思わないでもないのですが、皆様から寄せられた想いを無駄にするわけにはまいりません。これを機に“フリー素材”として粉骨砕身、東奔西走、精励恪勤、奮励努力していく決意を改め、一人でも多くの方に“だるやなぎ”を使っていただけますよう、そして世界に“フリー素材”が広げるために力を尽くしてまいる所存です。さぁ、みなさんも私と一緒に_「レッツ、フリー素材！」_なお、LINE スタンプは目下、鋭意作成中。上級コース向けの特典・だるやなぎ手形もぶりぶり量産しているところです。お楽しみに！ </description>
    </item>
    
    <item>
      <title>助けて！　&amp;quot;柳 英俊（だるやなぎ）LINE スタンプ プロジェクト”が息をしてないの！</title>
      <link>https://blog.daruyanagi.jp/entry/2015/08/19/164112/</link>
      <pubDate>Wed, 19 Aug 2015 16:41:12 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/08/19/164112/</guid>
      <description>  「世界のフリー素材に、俺はなる！」_高い志を胸に始められた“柳 英俊（だるやなぎ）LINE スタンプ プロジェクト”はプログラマー界隈からの熱烈な支持を受け、またたくまに8万円を超える資金を得た。柳 英俊（だるやなぎ）LINE スタンプ プロジェクトしかし、順風満帆かと思われたプロジェクトに突如、暗雲が立ち込める。
1ヶ月以上1円も投資されていません！！　残りあとわずか皆さんお金を捨てるつもりで応援してください！！　柳 英俊（だるやなぎ）LINE スタンプ プロジェクト https://t.co/XJwqBTvLLB pic.twitter.com/wYE7unljvC
&amp;mdash; ＪＺ５ (@jz5) August 11, 2015  タートダッシュでそこそこの資金をだまし取った獲得したものの、そこから伸び悩んでしまったのだ。
死ん…でる pic.twitter.com/TQE7DGWN5z
&amp;mdash; ＪＺ５ (@jz5) August 15, 2015  「俺の LINE スタンプなど、誰も欲していなかったのか……」ショックを受け、倒れ伏すだるやなぎ。そこに颯爽と現れた敏腕プロデューサー @jz5 が囁く。「クラウドファンディングはスタートダッシュと締め切り間近が一番カネがあるまるんや……（ニヤリ」_お願い、死なないでだるやなぎ！あんたが今ここで倒れたら、世界のフリー素材になる約束はどうなっちゃうの？ 締め切りまで日はまだ残ってる。ここを耐えれば、LINE スタンプをゲットできるんだから！次回「だるやなぎ死す」。デュエルスタンバイ！
### 追記 平和の土下座してきた pic.twitter.com/glGywZiwg8
&amp;mdash; 40やなぎ ♨🍊🐟🇯🇵 (@daruyanagi) August 15, 2015  り3万円、どうかよろしくお願いいたします。
 ### お詫びと訂正   下座してお願いしたつもりでしたが、正しくは韓国の最敬礼「クンジョル」だったかもしれないです。僕にはよくわかんないので、とりあえずお詫びしておきます。
 </description>
    </item>
    
    <item>
      <title>起きてビックリ： &amp;quot;柳 英俊（だるやなぎ）LINE スタンプ プロジェクト”始動！</title>
      <link>https://blog.daruyanagi.jp/entry/2015/06/23/043025/</link>
      <pubDate>Tue, 23 Jun 2015 04:30:25 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/06/23/043025/</guid>
      <description>週末、高松で歩きまくって疲れたせいか、昨晩は20時ぐらいに寝てしまったのだけど、起きたらこんなことになってた／(＾o＾)＼
  iframe src=&amp;rdquo;//hatenablog-parts.com/embed?url=https%3A%2F%2Fmotion-gallery.net%2Fprojects%2Fdaruyanagi&amp;rdquo; title=&amp;quot;柳 英俊（だるやなぎ）LINE スタンプ プロジェクト&amp;rdquo; class=&amp;quot;embed-card embed-webcard&amp;rdquo; scrolling=&amp;quot;no&amp;rdquo; frameborder=&amp;quot;0&amp;rdquo; style=&amp;quot;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&amp;ldquo;&amp;gt;柳 英俊（だるやなぎ）LINE スタンプ プロジェクト
&amp;gt; 柳 英俊をご存知ですか？　「だるやなぎ」というニックネームの方が有名かもしれません。彼は、2014年2月に東京を離れ、現在 愛媛県 松山市に住むフリーライターの男性 35歳 独身。一般人と少し違うところは、Creative Commons Zero (CC0) ライセンスであること。いわゆるフリー素材です。ただ、残念なことに、まだ認知度が低く、良質なコンテンツも世に出せていません。そこで今回、LINE クリエイターズスタンプとして公開すること、また当プロジェクト自体により、認知を広め、価値を高め、盛り上げていきたいと考えています。これまでご存知なかった方も、気軽に参加いただき、“柳 英俊 アーリーアダプター” となって応援をお願いします。柳 英俊にしてほしいスタンプメッセージのご提案もお待ちしています。  “プロ生ちゃん”を世に送り出した敏腕プロデューサー @jz5 が裏でなにか画策しているのは知っていたけれど（“だるやなぎからのメッセージ”なんかは事前に打ち合わせしたし）、意外に本格的な感じですな（震え声
  かも、もう4万円ほど集まっているし。お金はもっと大事に使うべきやと思うで！クラウドファンディングってよくわかっていないんだけど、目標額に到達したらお金って戻るのかな？（フリーソフトにお金出したことあるけど、何か見返りがあるわけじゃない＆目標額達成でちゃんとモノが開発されたから、そういうケースに遭遇したことがない）　まぁ、そういうことも含めて、自分も一口乗ることにしようかなと思う――来月のお小遣いが入金されたら。
&amp;gt; 追記：　ちょうど Google Adsense でお小遣いをもらったので投入してみましたが、プロジェクトがゴールした場合にのみ決済が走るようですね（クレジットカードだと引き落とされますが、まぁ、あとで返ってくるんちゃうかな）。あと、参加するとだれが支援してくれたのかが分かるのですが……意外なメンツもいて思わずお茶吹きましたｗ  あと、もしこのプロジェクトが無事にゴールしたら、設定されているお礼とは別に、スペシャルコース貢献者にはなにかしたいかなー。なにしよう？</description>
    </item>
    
    <item>
      <title>プログラミング生放送勉強会 第34回＠サイボウズ株式会社 松山オフィス、無事終わりました！ #pronama</title>
      <link>https://blog.daruyanagi.jp/entry/2015/06/19/023709/</link>
      <pubDate>Fri, 19 Jun 2015 10:21:24 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/06/19/023709/</guid>
      <description>台のことを書いたりしていて遅れましたけど、皆様のおかげでプログラミング生放送勉強会 第34回＠サイボウズ株式会社 松山オフィス、無事終わりました！ 参加してくださった方、ニコ生で応援してくださった方、ありがとうございました。
### 開戦前！   イボウズさんの向かいにある「五志喜」で腹ごしらえ。郷土料理 五志喜 本店 (大街道/郷土料理（その他）)今だけかもしれませんが、“宇和島風の鯛めし”（鯛の刺身＋出汁をご飯にのせた南予の食べ方）のほかに、炊き込みご飯タイプの“鯛めし”（松山風だの今治風だの、いろんな呼ばれ方をしているみたい。つまりは中予の鯛めし）があったので、今回は炊き込みごはんの方をいただきました。
  もっきり混ぜ混ぜして食べると美味しい。「五志喜」のランチセットには“じゃこカツ”（じゃこ天にコロッケ風の衣をつけたもの）もあるので、これだけで松山で食べるべきご飯の6割ぐらい（当社比）は制覇できる計算です。「五志喜」の“じゃこカツ”はちょっと味が濃い目なので、ビールがほしくなるかも。ご飯を食べ終わったぐらいに、ちょうど @daisuke_nomura たちがやってきてすれ違いに。初めて松山市に行ってきた話 - zoar.log何を食べたのかは知りませんが id:k-side 氏は“宇和島風の鯛めし”の方を食べたみたいですね。こっちもうまそう。ところで、リンク先で言及されてる“松山市民には有名であると(一部で)言われているレストラン”ってどこだろう？　松山に来て1年半たつのに、まだまだ知らないことばかりですね。
 ### はじまりはじまり！   日は確か40人ぐらいきてくれた気がします。東京換算だと120人規模になりますね。最近話題になっていたドタキャンも数えるほどで、懇親会の会場確保などを担当してた僕にとっては大変ありがたかったデス。忘れ物を取りに帰っていた関係もあって、受付を全部 @nakaji 先生に押しつけちゃったのがちょっと申し訳ない。プログラミング生放送勉強会 第34回＠サイボウズ株式会社 松山オフィスが開催されました | Cybozu Inside Out | サイボウズエンジニアのブログセッションについてはサイボウズさんのブログ記事に詳しいです。
#### セッション1「猫でもわかる ASP.NET 5 入門」 スピーカー：Microsoft MVP for ASP.NET/IIS しばやんさん（@shibayan）  猫でもわかる ASP.NET 5 入門  from Tatsuro Shibamura 「ご飯ご馳走するから、わしにでもわかるように ASP.NET 5 の話してくれ」とリクエストしたら、ネコ向けにしてくれました。コマンドを覚える数を絞ってくれたので、最近痴呆の激しい僕にもなんとかできそう。WebMatrix が本格的に死んだらこの辺りの作法は嫌でも身に付けなきゃいけないので、今度手を動かしてお勉強しようと思います。  #### セッション2「今からでも遅くない！React事始め」 スピーカー：サイボウズ株式会社 成田 幸紀さん  今からでも遅くない!</description>
    </item>
    
    <item>
      <title>【再告知】 今年も「プログラミング生放送勉強会」をサイボウズ株式会社 松山オフィスにて開催します！ #pronama</title>
      <link>https://blog.daruyanagi.jp/entry/2015/05/27/124519/</link>
      <pubDate>Wed, 27 May 2015 12:45:19 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/05/27/124519/</guid>
      <description>今年も「プログラミング生放送勉強会」が松山で開催されます。「プログラミング生放送勉強会」というのは、  プロ生で活動している（セッションの内容はプロ生でも全国ネット放送（？）です！） IT系ノンジャンルです。デスクトップでもモバイルでも Web でも、なんなら組み込みでもなんでも！ みたいな感じの勉強会です。割とゆるい感じですので、あんまり気張らずに参加していただければと。詳しくは @nakaji の記事を参照してください。今年は参加費無料（ただし、おやつ持参のこと）だそうです。僕も一応書きました。 ### 今年のお品書き 謎に包まれていたセッションの内容もだんだん明らかになってきました。今年はこんな感じのようです。 #### セッション1「猫でもわかる ASP.NET 5 入門」 スピーカー：Microsoft MVP for ASP.NET/IIS しばやんさん（@shibayan）  #### セッション2「調整中」 スピーカー：サイボウズ株式会社 成田 幸紀さん  #### セッション3「rust primer」 スピーカー：プログラミング生放送勉強会 名古屋支部長　Ｙｏｕ＆Ｉさん（@you_and_i）そのほかにも、@daisuke_nomura による LT という名のロングトークあり（もうセッションでええやろ！）。ライトニングトークの方も盛りだくさんです。不肖、だるやなぎも参加者が少なければ穴埋めをしようかと思っています。_「だるやなぎはすっこんでろ！」_という方は、ぜひライトニングトークの方にも参加していただければと思います。   ### すでに申し込み済みの方 懇親会の募集ページも公開しました。こっちにも登録していただければ幸いです。席に限りがありますので、お早目の登録をお願いします。人数オーバーフローしたらどうしようと内心ビクビクです。  </description>
    </item>
    
    <item>
      <title>ドメインの延長手続きミスに伴う連絡先の変更について</title>
      <link>https://blog.daruyanagi.jp/entry/2015/04/28/070348/</link>
      <pubDate>Tue, 28 Apr 2015 07:03:48 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/04/28/070348/</guid>
      <description>  もお気づきではないかもしれませんが、ドメインの延長手続きを失念していたため、現在、daruyanagi.net に接続できない状態です。なので、***@daruyanagi.net のメールも受け取れない状態です。復旧までにかなりの時間がかかりそうなので、申し訳ありませんが、メールでのご連絡は
 お仕事：hidetoshi.yanagi（a）gmail.com 割とどうでもいいこと：daruyanagi（a）gmail.com 宛てに送ってください（てへぺろとりあえずブログ（daruyanagi.jp）だけ緊急避難的にデザインを変えましたが……残りどうしようorz </description>
    </item>
    
    <item>
      <title>国際だるやなぎ会議 第1.5回 in 高知</title>
      <link>https://blog.daruyanagi.jp/entry/2014/11/04/225807/</link>
      <pubDate>Tue, 04 Nov 2014 22:58:07 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/11/04/225807/</guid>
      <description>  際だるやなぎ会議の熱狂、再び。――開催日、四国脱出に失敗し参加を逃したメンバーで涙を分かつ第1.5回が高知で開催されマス。
 四国だるやなぎ会議（仮） - クマと愉快な仲間たち | Doorkeeper 高知は大学の頃、友達とクジラを食べに行って以来かな？　どうせなのでゆっくり羽を伸ばしてこようと思います。 </description>
    </item>
    
    <item>
      <title>Mihari 1.1.0.3</title>
      <link>https://blog.daruyanagi.jp/entry/2014/10/13/025303/</link>
      <pubDate>Mon, 13 Oct 2014 02:53:03 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/10/13/025303/</guid>
      <description>  ihari.exe.config をイジってください――というのではあまりにも配慮に欠けるかなと思って、かんたんな設定ダイアログをつけました。
 Mihari for Windows Desktop - だるやなぎ（0x22歳♂） XAML でプロパティの綴りミスってうまくバインディングされず、小一時間ハマったのは秘密です。  1.1.0.3 (2014/10/13)  [FIX] Can not save some setting.    1.1.0.2 (2014/10/13)  [FIX] Get Clickonce Version    1.1.0.1 (2014/10/13)  Setting Dialog [FIX] Mutex bug  メインマシンの環境がぶっ壊れていて、ClickOnce でインストールできないのがツラい……。 #### 追記  1.1.0.4 (2014/10/13)  [FIX] Ignore RecycleBin does not work.  パスのチェックで大文字小文字の区別をつけていたので、一部環境で IgnoreRecycleBin オプションが動いてなかった。カッコ悪い。  </description>
    </item>
    
    <item>
      <title>Mihari 1.0.0.0</title>
      <link>https://blog.daruyanagi.jp/entry/2014/10/12/133551/</link>
      <pubDate>Sun, 12 Oct 2014 13:35:51 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/10/12/133551/</guid>
      <description>  ステム内に実行ファイルが作成されたらトーストで（Windows 8未満の場合はバルーンになるはずだけど試す環境がない）お知らせしてくれるタスクトレイ常駐型のソフトです。ごくごく簡単なログのフィルタリング機能がついています。
 Mihari for Windows Desktop - だるやなぎ（0x22歳♂） 動作には Windows 8.1/.NET Framework 4.5 が必要（Windows 7 で動いたら教えてください）。  1.0.0.0 (2014/10/12)  Initial Release. Exe/Jar/Msi Monitoring. Open Explorer from log view. Log Filtering (you can use wildcard, and date filter). Highlight malicious exe. (for example, hao123) Notification by toast (Windows 8 or later).  Mihari.exe.config Log cleaning, Keep logs only 7 days (default)   </description>
    </item>
    
    <item>
      <title>本（のごくの一部）を書きました。</title>
      <link>https://blog.daruyanagi.jp/entry/2014/09/07/010657/</link>
      <pubDate>Sun, 07 Sep 2014 01:06:57 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/09/07/010657/</guid>
      <description>  の前、電車で古町まで出かけ、セブンイレブンで『そうだったのか！人気『歴史・戦国マンガ』１００の真相』という本を買いました。――実はこの本、原稿を何本か書かせていただいてまして。会社辞めたときは、年内にこんなことなるだなんて想像もしていませんでしたね。ちょっとびっくり。さてこの本、買ったはいいのだけど、割りと自分が書いたのを読むのは恥ずかしくて……実は飾っているだけで全部は読んでいません。でも、自分以外のところをぺらぺらと読んでいたのですが、割りと面白いんじゃないかなーって思います。歴史マンガをいくつか取り上げて面白く紹介する……という趣旨の本だと思いますが、僕は『へうげもの』が好きなので、そのところはとくに「へぇ」って感じで読ませていただきました。へうげもの(1) (モーニング KC)作者: 山田芳裕出版社/メーカー: 講談社発売日: 2005/12/22メディア: コミック購入: 15人 クリック: 208回この商品を含むブログ (387件) を見る詳しいことについては、酢酸先生がブログで紹介してくれているので、そっちを読んでみるといいかもしれません。
 やなぎひでとしさんらが執筆された「そうだったのか!人気『歴史・戦国マンガ』100の真相」を買いました - 酢ろぐ！ そんなわけで、読んでも割と面白いと思うのですが、実は書いてる本人が一番いろいろ勉強になってたり。僕は『ヒストリエ』や『キングダム』、『墨攻』辺りを担当させていただいたのですが、今まで考えたこともなかった切り口で史書を読むのは割と面白いですね。自分はこれでも歴史好きな方だと思うけれど、どちらかというと流れを把握することを重視して、薀蓄の方はとくに興味がなかったように思います。けれど、薀蓄話をしようと思うと細部を掘り下げていかなければならない。すると、歴史の大きな流れとはまた別の、それに翻弄された個人の人生がちょっと見えてきて……書いてるうちに、最初は書くつもりのなかったことまで延々と書いている自分がいました（笑歴史 上 (岩波文庫 青 405-1)作者: ヘロドトス,松平千秋出版社/メーカー: 岩波書店発売日: 1971/12/16メディア: 文庫購入: 3人 クリック: 199回この商品を含むブログ (22件) を見る今回はとくに、ヘロドトスの『歴史』をちゃんと読む機会が得られたのと（よく考えたら読んだことなかったわ）、秦漢期の刑罰・爵位制度について勉強できたのが楽しかったですね。ヘロドトスの『歴史』はわりととんでもな記述も多いので（全体的には素晴らしい歴史書ですが！）、また機会があれば紹介したいかも。そういえば原稿を書きながら思い出したのですが、まだ小学校の頃、東京への帰省（母方が東京でした）で荷物の晩をしながら母に売店で買ってもらった歴史の本（戦国時代100の謎みたいな感じだったと思います）を読みふけっていたら、知らないおじさんに「小さいのにこんな本を読むんだね、偉いね」って褒められたことがあります。楽しくて読んでただけなのに、褒められてなんか変な気分になったのをちょっと覚えています。それから時が経ち、いつしかこういう本からは卒業して、お硬めの本をいろいろ読むようになりました。そのうち頭もだんだん硬くなり、歴史は楽しむものではなく、なにか教訓を引き出したり、分析してモデル化する対象だ――大袈裟に言えば、そういう感覚で歴史に接することが多くなってきたように思います。なので、こういう本に協力する機会を得て、楽しいような、懐かしいような、新鮮なような、そんな感覚を覚えました。興味ある人は、セブンイレブンの本のコーナーをのぞいてみてください。まだ売れ残ってるかも？　ちなみに松山市にはセブンイレブンが18店舗あるそうです！  愛媛県松山市のセブンイレブン一覧 (1/1) - NAVITIME  </description>
    </item>
    
    <item>
      <title>Clipper 2.0.0.0</title>
      <link>https://blog.daruyanagi.jp/entry/2014/08/26/094110/</link>
      <pubDate>Tue, 26 Aug 2014 09:41:10 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/08/26/094110/</guid>
      <description>  ースコードなくしたので一から作り直しました orz でも、おかげで
 共有ターゲットページの表示に時間がかかる 共有ターゲットページの表示に失敗する といった不具合がだいぶ減っていると思います。 &amp;gt;    014/08/26 9:47 追記：ごめんなさい、データの互換性がなくなってるのでもう一度フォーマットの編集と保存をお願いします。保存コマンド（や、Twitter の認証コマンド）はアプリバーにあります。
  れまではテキストフォーマットの設定ファイルを読みだしてその内容（ObservableCollection）をメインページと共有ターゲットページのビューモデルから参照するようにしていたのですが、いろいろ不具合が出てしまいます（WinRT: COM コンポーネントを表す型のインターフェイスを COM コンポーネントを表さない型にキャストすることはできません。 - だるろぐ、この内容も全然回避になってなくて、共有ターゲットページの表示に失敗する原因になってました）。
  いうわけで、ちょっと無駄になるのだけどそれぞれのビューモデルにそれぞれ同じようなクラスを書き、リストを保持するようにしました（クラスを共用するようにすることもダメみたい）。保守性が下がっちゃったけど、so far, so good って感じですかね。あと、そのほかにも
 ユーザーインターフェイスがちょろっとリッチになりました。 少しはわかりやすくなったかなーって思います。 （ブラウザーなどの［共有］チャームからタイトルや URL、選択テキストなどをあらかじめ記述したテンプレートに従って整形し、クリップボードへコピーしたり、ツイートしたりするアプリです）
### 注意点  @daruyanagi Clipper便利でですね！コメント入力テキストボックスが非アクティブになったらソフトキーボード消えるようにしてもらえるとありがたいです— くつき くれむ（公式）.eXe (@k2kkrm) 2014年8月25日
 キーボードのない端末でコメントテキストボックスにフォーカスを当て、次にリストボックスを選択すると、オンスクリーンキーボードがとじないようです。少し調べてみましたが、残念ながらいい解決が思いつきませんでした。オンスクリーンキーボードの表示・非表示は OS（？）の仕事のようなのですが……最初にリストボックスを選択するとオンスクリーンキーボードは現れないので、編集可能なコントロールからフォーカスがほかに移ったにもかかわらずオンスクリーンキーボードが閉じないのは OS 側の問題かなって気もしないでもないです。
  色で囲った辺りをタップするとオンスクリーンキーボードは消えますので、不便で申し訳ないのですが、当面はそれで回避していただけるとありがたいです。
 ### おまけ   ウンロードが 7 もある！ ひとつは多分自分だから、もの好きが6人もいるってことだな！　ありがたい！
 </description>
    </item>
    
    <item>
      <title>Windows ストア アプリを作りました。</title>
      <link>https://blog.daruyanagi.jp/entry/2014/08/19/224807/</link>
      <pubDate>Tue, 19 Aug 2014 22:48:07 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/08/19/224807/</guid>
      <description>  単に言うと、［共有］チャームから
 Create Link - Chrome Web Store Make Link :: Add-ons for Firefox をするアプリです。   形フォーマットを登録しておいて、それを［共有］チャームで選択すると、タイトルや URL がその通りに整形されてクリップボードにコピーされます。現在申請中の最新版だと、Twitter にポストすることもできます。この機能は Windows ストア の Windows 用 ShareTwit アプリ にちょっと似てますね。
（個の埋め込みタグは Windows Store oEmbed を利用しています）ローミング機能を付けてからいろいろ動作が怪しいのですが、そのうち安定するかも……。
  かんかったらアプリバーからデフォルトの設定をロードしてみてください。
### Release 1: 1.1.0.6 (2014/08/16)  初回リリース [New] ［共有］チャームからフォーマットを選択し、アプリのタイトルやリンクを整形してクリップボードにコピーします [New] フォーマットを編集できます [New] フォーマット設定は複数デバイス間でローミングされます（テストがあんまりできてなくて動作が不安定……） そのうち公開されるバージョンでは、さらに機能の追加があります。公開されました。（追記：2014/08/20）  ### Release 2: 1.1.0.7 (14/08/19)  {{comment}} で {{title}} や {{url}} が使えるようになりました。アプリのメイン画面でわざわざ登録するまでもない使い捨てのフォーマットを書くための隠し機能です。 整形済みテキストをツイートできるようになりました。 [Fix] {{comment}} を編集してもプレビューに反映されない場合がある不具合を直した気がする フォーマットを一覧で並び替えられるようにしました。   </description>
    </item>
    
    <item>
      <title>はてなスターを一時的に停止しています。</title>
      <link>https://blog.daruyanagi.jp/entry/2014/03/28/154129/</link>
      <pubDate>Fri, 28 Mar 2014 15:41:29 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/03/28/154129/</guid>
      <description>ちょっと試したいことがあるので、はてなスターを一時的に停止しています。いつもつけてくれている方には申し訳ないですが、ほっぺにビンタ1発いれる権利を先着5名様に差し上げますので、どうかお許しください。</description>
    </item>
    
    <item>
      <title>“武将ジャパン”というサイトで艦これの連載を始めました</title>
      <link>https://blog.daruyanagi.jp/entry/2014/03/21/214729/</link>
      <pubDate>Fri, 21 Mar 2014 21:47:29 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/03/21/214729/</guid>
      <description>  a href=&amp;quot;https://blog.daruyanagi.jp/entry/2014/01/31/180755&amp;quot;&amp;gt;株式会社 Impress Watch・窓の杜編集部を退職しました。 - だるろぐ 経由でオファーを受けたので、頑張ってみることにしました。もともと歴史は好きなんですけど、世界史のひとだったので日本史はそれほど詳しくもなく。読んでてわりと面白いです。歴史のウンチク好きな人には割りとお勧めできるサイトだと思うので、もし気が向いたらフィードを購読してみてくださいね。
 歴史戦国でワクワクしたい！ - BUSHOO!JAPAN（武将ジャパン） 連載のタイトルは編集部のひとにお願いしたのですけど、**艦これブログ～島風に恋をして♪**って！　33歳独身男性でゼカマシに恋するって危ない人じゃないですかやだぁ！   ぁ、**「それはそれで美味しいキャラかな」**って思ってしまう関西人のサガが恐ろしい。こっちは自分も第二次大戦のことを勉強しながら、あまり無理せずのんびり続けていけたらいいなっていうスタンスですので、今から艦これはじめるよっていう人がいれば読んでいただければ嬉しいです。
#### P.S. 原稿塩漬けにし過ぎて、新しいサーバーができてしまった ／(＾o＾)＼  </description>
    </item>
    
    <item>
      <title>傲岸不遜にも“だるやなぎ”でチャリンチャリンリンビジネスを計ろうとする不届きなサイト「だるやなぎ.info」</title>
      <link>https://blog.daruyanagi.jp/entry/2014/03/15/225825/</link>
      <pubDate>Sat, 15 Mar 2014 22:58:25 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/03/15/225825/</guid>
      <description>  a href=&amp;quot;http://daruyanagi.info/&amp;ldquo;&amp;gt;だるやなぎ.info は Twitter で女子高生を中心に幅広い人気を集める今話題のマスコットキャラクター“だるやなぎ”でチャリンチャリンリンビジネス（注: 小銭稼ぎの意と思われる）を計ろうとする不届きなサイトである。この浅薄な Web サイトのメインコンテンツは今のところ**“だるジェネレータ”**のみとなっている。これは、Twitter などで利用できるオリジナルの“だるやなぎ”アイコンが畏れ多くもササッと作れる**“だるメーカー”**と、某広告風の“だるやなぎ”がパパッと作れる唾棄すべき**“だるロード”**で構成されている。この恥ずべきコンテンツは君たちが愛してやまない Windows Azure Web Sites（WAWS）と君たちが全身全霊をこめて愛すべき ASP.NET Web Pages で構築されているはずだ。この天に唾を吐くがごとき不遜な Web サイトの運営は @shibayan によって行われている*1。小生は直接関わってはいないが、ここで得られたチャリンチャリンの一部はわたくしにも還元されるはず*2なので、軽薄千万な資本主義に毒された皆さま方におかれては積極的に広告を踏み踏みしてほしいと願う次第である。&amp;gt;@daruyanagi 整えたから紹介してよ http://t.co/xpbdecpGTo— しばやん (@shibayan) 2014, 3月 15小生は @shibayan と異なり多忙を極めるため、なかなか Web サイトを更新する時間がとれないが、気が向いたときに http://daruyanagi.net/ からもリンクを張るつもりだ。
#### 追記 http://t.co/9vTmtCdhhr Web Pages 使ってない。静的 html のみ— しばやん (@shibayan) March 15, 2014ちなみに http://t.co/ofHDuQqCB7 は 100% Pure Visual Studio Online Monaco で開発しました— しばやん (@shibayan) March 15, 2014 *1:彼は小生から daruyanagi.azurewebsites.net を奪った怪しからぬ男である *2:されなかったら、上野で襲撃するほかない  </description>
    </item>
    
    <item>
      <title>iTunes 関連アプリを根こそぎアンインストールするアプリ「焼きりんご」を作ってみた</title>
      <link>https://blog.daruyanagi.jp/entry/2014/02/08/182407/</link>
      <pubDate>Sat, 08 Feb 2014 18:24:07 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/02/08/182407/</guid>
      <description>に メロディック・ハード・キュア が聞きたくなったので、Amazon から中古の CD を取り寄せた。で、これを iTunes でリッピングして iPhone に転送しようとしたのだけど……なんで全部同期されないの……もういやんなる。iTunes……2014-02-07 17:23:20 via MetroTwitiTunes の再インストールだと……ほんまマジで死ね。なにが UX じゃバカ2014-02-07 17:00:28 via MetroTwitつうか iPhone と iTunes の同期とか糞メンドイ2014-02-07 16:50:51 via MetroTwitiTunes に怒り狂っている2014-02-07 16:49:41 via MetroTwitiTunes まじむかつく。アップデートごときで OS 再起動させんなよクソが2014-02-07 16:44:01 via MetroTwit結局、iTunes の音楽ライブラリを抹消したり同期したり一部だけ同期させたり消したり全部同期してみたり iTunes を再インストールしたり iPhone を初期化しようと悩んだりダメモトでもう一回だけ同期したりしてみたところ、やっとお目当ての楽曲が無事転送された。**途中で何回も死にたくなった。**そういえば最近 こんなこともあったので、根こそぎアンインストールアプリがあれば便利かなと思い、艦これしながら作ってみた。Windows 8.1 の 64bit 版 iTunes でしか試してないので、ほかの環境でうまく動くのかどうかは分からない*1。アプリケーションの GUID ってどの環境でも一緒だよね？　アンインストールするアプリを GUID で決め打ちにしちゃったけど、ほんとはインストールリストを全部ナメて DisplayName が一致するかみた方がよかったのかもしれない。UI フリーズするからイケていないな……。
### この子がやること  「iTunes」 「Apple Software Update」 「Apple Mobile Device Support」 「Bonjour」 「Apple Application Support」 の順にアプリケーションをアンインストール（インストーラーを呼び出すだけ）。  C:\Program Files\Bonjour C:\Program Files\Common Files\Apple\Mobile Device Support C:\Program Files\Common Files\Apple\Apple Application Support C:\Program Files\Common Files\Apple\CoreFP C:\Program Files\iTunes\ C:\Program Files\iPod\ C:\Program Files (x86)\Bonjour C:\Program Files (x86)\Common Files\Apple\Apple Application Support C:\Program Files (x86)\Common Files\Apple\Mobile Device Support C:\Program Files (x86)\Common Files\Apple\CoreFP C:\Program Files (x86)\iTunes\ C:\Program Files (x86)\iPod\ を消そうと頑張ってみる。消せなかったらフォルダをエクスプローラーで開く（自分で消せ）。   前の由来は みなみけ(5) (ヤングマガジンコミックス)。</description>
    </item>
    
    <item>
      <title>トップページを少しだけリニューアルしてみたった。</title>
      <link>https://blog.daruyanagi.jp/entry/2013/11/04/231401/</link>
      <pubDate>Mon, 04 Nov 2013 23:14:01 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2013/11/04/231401/</guid>
      <description>  れほど気に入ってはいないのだけど、http://daruyanagi.net/ のデザインを少しだけ変えた。
  br/&amp;gt;
 はてなブログの人気の記事リストを表示する - だるろぐ WebMatrix 3: Twitter Bot でも作ってみる。 → Windows Azure Websites に置いてみたった。 - だるろぐ の成果をとりあえず組み込んでみたかっただけ……。 </description>
    </item>
    
    <item>
      <title>Filecluster というところに紹介されたった。</title>
      <link>https://blog.daruyanagi.jp/entry/2013/10/25/042315/</link>
      <pubDate>Fri, 25 Oct 2013 16:45:47 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2013/10/25/042315/</guid>
      <description>a href=&amp;quot;https://blog.daruyanagi.jp/entry/2013/10/09/123725&amp;quot;&amp;gt;Softpedia に掲載されたった。 - だるろぐ に引き続き、FileCluster - Free Software Downloads, Reviews and Guides というところからも紹介したとの旨のメールをいただいた。
&amp;gt; Formula Pad for Windows 8 - A simple tool for the students of teachers who need to create mathematical formula by using LaTeX notations in order to export them as images http://www.filecluster.com/Home-Education/Mathematics/Download-Formula-Pad-for-Windows-8.html  こういう商売しているにも拘らず、寡聞にしてここは知らなかったのだけど。恥ずかしす。海外のネタも積極的に拾っているつもりだけれど、まだまだ漏れがあるらしい。インターネッツは広大ですね。この業界も海の分け隔て関係なく案外狭くて、毎日ウォッチしていると「あぁ、このネタはあそこから引っ張ってきたんだな」「ん、ウチを読んでるのかな」などと、緩いつながりが見えてきてなかなか面白い。時間があればこうした情報をまとめるネタ管理サービスなんかも、WebMatrix で作りたいところだ。純粋に自分のために作ったものであっても、公開すればだれかしらの役に立つかもしれんしな。そう思えるのが、この業界の心地よいところだ。それはそうと、この前とあるコンテストに応募してしまったので、新しいアプリを開発せねばならないのだが……どうしよう。どうせなら Windows 8 ではできなくてあきらめたことに挑戦してみたいものだ。</description>
    </item>
    
    <item>
      <title>Softpedia に掲載されたった。</title>
      <link>https://blog.daruyanagi.jp/entry/2013/10/09/123725/</link>
      <pubDate>Wed, 09 Oct 2013 12:37:25 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2013/10/09/123725/</guid>
      <description>然とメール読んでたら……_思わずお茶吹いた。_Formula Pad for Windows 8 - だるやなぎ（0x21歳♂） が Softpedia - Free Downloads Encyclopedia に掲載されたのだそうだ。Softpedia というのは、まぁ、日本で言えば窓の杜とベクターを足して二で割ったようなサイトだ。ソフトウェア関連のニュースとソフトウェアのライブラリサイトをやっているが、ライブラリは窓の杜のように編集部で選ぶ仕組みになっているんだね。連絡だけよこして割りとフリーダムに載せてしまうけれど、個人的にはあんまり気にはしない。一番面倒なのは独自の広告付きインストーラーでラッピングしてしまうアレとかコレだ*1。
  品ページ: Formula Pad for Windows 8 Free Download
&amp;gt; Formula Pad for Windows 8 allows you to create complex formula and use them in your projects as images. The program allows you to create the formula in LaTeX notations and preview the output in the main window.The program can export the formula as a text file or by saving it to a PNG file that can be used in documents, web pages and presentations.</description>
    </item>
    
    <item>
      <title>Windows Store oEmbed API を NuGet にしておきました</title>
      <link>https://blog.daruyanagi.jp/entry/2013/07/24/070906/</link>
      <pubDate>Wed, 24 Jul 2013 07:09:06 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2013/07/24/070906/</guid>
      <description>  a href=&amp;quot;https://blog.daruyanagi.jp/entry/2013/07/18/033539&amp;quot;&amp;gt;WebMatrix 3: Windows Store oEmbed API を利用する - だるろぐ を NuGet にして NuGet Gallery で公開しました。
 NuGet Gallery | WSoEmbed 1.0.2 前回の記事からの変更点は、System.Threading.Thread.CurrentThread.CurrentUICulture で言語を取得して URL をビルドするようにしたことのみ。 ```cs @WindowsStore.GetHtml(APP_URL) @WindowsStore.GetHtml(&amp;ldquo;8289549f-9bae-4d44-9a5c-63d9c3a79f35&amp;rdquo;)
 </description>
    </item>
    
    <item>
      <title>プロ生ちゃんアイコンジェネレーター</title>
      <link>https://blog.daruyanagi.jp/entry/2013/05/20/080741/</link>
      <pubDate>Mon, 20 May 2013 08:07:41 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2013/05/20/080741/</guid>
      <description>  div class=&amp;quot;twitter-detail twitter-detail-left&amp;quot;&amp;gt;@daruyanagi WebMatrix でアイコンジェネレーターつくってよー2013-05-17 22:23:47 via Janetter to @daruyanagiなんかアイコンファイルが ZIP で送られてきたので、テキトーに作った。アイコンジェネレーターってなにをどうすんだよ ( ﾟДﾟ)！
 http://pronama-icon.azurewebsites.net/ 一応 Windows Azure Web Sites に置いてあるけど、ExpressWeb に移すかもしれない。 </description>
    </item>
    
    <item>
      <title>nosniff 1.0.1 </title>
      <link>https://blog.daruyanagi.jp/entry/2013/05/18/212634/</link>
      <pubDate>Sat, 18 May 2013 21:26:34 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2013/05/18/212634/</guid>
      <description>  &amp;gt; 必ず X-Content-Type-Options: nosniff レスポンスヘッダをつけるようにしましょう 機密情報を含むJSONには X-Content-Type-Options: nosniff をつけるべき - 葉っぱ日記  とのことなので、ASP.NET でカスタム HTTP ヘッダを追加する方法 - しばやん雑記 を参考に X-Content-Type-Options: nosniff を付ける NuGet を作っておいた。
 NuGet Gallery | nosniff 1.0.1 Web.config.transform を記述しただけのシンプルなものだけど、いかがでしょうかね。   </description>
    </item>
    
    <item>
      <title>Formula Pad 1.2.0 for Windows 8</title>
      <link>https://blog.daruyanagi.jp/entry/2013/05/10/193905/</link>
      <pubDate>Fri, 10 May 2013 19:39:05 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2013/05/10/193905/</guid>
      <description>  まだにダウンロード数が 0 なのですが、がんばって更新してみました。
 http://apps.microsoft.com/windows/ja-JP/app/formula-pad/86b6ecdc-e810-4aa2-9bdb-bb0da5b34737  ### 1.2.0（2013/05/10）  オンスクリーンキーボードを表示した際の使い勝手を向上（Windows Store Apps： オンスクリーンキーボードの存在を考慮したレイアウト（未解決 → 解決） - だるろぐ） 画面右上にステータスメッセージを表示するようにした エラー処理の強化 あと、解像度の高い環境*1では広告が表示されることがあります。とはいえ、広告コントロールは張り付けてみたものの、実際に広告が掲出されたのはみたことがないので未確認なのですが。まぁ、試してみたかったのです。 *1:縦が1024pxを超える場合、Surface RT では表示されません  </description>
    </item>
    
    <item>
      <title>Formula Pad 1.1.0 for Windows 8</title>
      <link>https://blog.daruyanagi.jp/entry/2013/05/09/191152/</link>
      <pubDate>Thu, 09 May 2013 19:11:52 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2013/05/09/191152/</guid>
      <description>  ろいろありましたが（Windows ストア アプリ：リジェクトを食らいました。 - だるろぐ、Windows Store Apps：公開されました……が！ - だるろぐ）、無事（日本の）Windows ストアにも公開されました。
 http://apps.microsoft.com/windows/ja-JP/app/formula-pad/86b6ecdc-e810-4aa2-9bdb-bb0da5b34737  ### 1.1.0（2013/05/09）  日本市場をはじめとするすべての市場に公開しました 1.0.0 なんてなかったんや……！  </description>
    </item>
    
    <item>
      <title>少しずつ Web サイトのリニューアルをしていきます。</title>
      <link>https://blog.daruyanagi.jp/entry/2013/05/07/214301/</link>
      <pubDate>Tue, 07 May 2013 21:43:01 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2013/05/07/214301/</guid>
      <description>ずはここから。
 http://download.daruyanagi.net/ 仕組み的には Markdown テキストを App_Text フォルダに入れておいて、それを HTML に変換しています。Helper でプラグインっぽく拡張できるのがちょっと自慢。  WebMatrix 2: Markdown を汎用的に拡張する仕組みを考えてみる - だるろぐ ソーシャル関連のボタンは、この一連の記事で実装してみたものを使っています。  WebMatrix 3: フィードの購読者数を取得する（1：サーバーサイド編） - だるろぐ WebMatrix 3: フィードの購読者数を取得する（2: JavaScript 編） - だるろぐ WebMatrix 3: フィードの購読者数を取得する（3: CSS 編） - だるろぐ WebMatrix 3: JSON と JSONP - だるろぐ フィードの出力は以下の記事で実装したものをベースにしています。  WebMatrix 3: RSS フィードを出力する - だるろぐ 今のところキャッシュ機能がないのでそれをつけようかなぁ、と。それ以外にも不満な部分が結構あるので、このサイトで十分に基本機能を練って NuGet パッケージにし、ほかのサイトにも展開していきたいと思います。  WebMatrix：NuGet サーバーをたてる - だるろぐ WordPress のような既存の大規模 CMS を使うのもいいけど、自分で少しずつ実装した方が“自分の手のひらの上で動かしている”感じがあって僕は好きです。Windows Azure Web Sites を使って Dropbox からデプロイできたら便利そうなのだけど、ボクのお給料では Azure の維持は少し大変そうなので泣く泣く断念しました。おちんぎんほしぃなりぃ。 #### P.</description>
    </item>
    
    <item>
      <title>Formula Pad 1.0.1</title>
      <link>https://blog.daruyanagi.jp/entry/2013/05/02/021238/</link>
      <pubDate>Thu, 02 May 2013 02:12:38 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2013/05/02/021238/</guid>
      <description>  キストボックスに TeX 記法で数式を入力すると、それを画像にしてくれます。数式画像はクリップボードへコピーしたり、ファイルとして保存可能。数式テキストを“はてな記法”でコピーすることもできます*1。“Google Chart API”を利用しているので、ネットワーク回線が必須。
  得な機能として、
text = text.Replace(@&amp;#34;\land&amp;#34;, @&amp;#34;\wedge&amp;#34;); text = text.Replace(@&amp;#34;\lor&amp;#34;, @&amp;#34;\vee&amp;#34;); text = text.Replace(@&amp;#34;\lnot&amp;#34;, @&amp;#34;\neg&amp;#34;); ```という処理が入っています。“Google Chart API”や“はてな”では使えない“\land（論理和）”“\lor（論理積）”“\lnot（否定）”が使えます。 </description>
    </item>
    
    <item>
      <title>初めての Windows ストアアプリが無事ストアで公開されました ＼(＾o＾)／</title>
      <link>https://blog.daruyanagi.jp/entry/2012/09/27/195233/</link>
      <pubDate>Thu, 27 Sep 2012 19:52:33 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/09/27/195233/</guid>
      <description>a href=&amp;quot;https://blog.daruyanagi.jp/entry/2012/09/24/210732&amp;quot;&amp;gt;初めての Windows ストアアプリが公……うぎゃー！ - だるろぐ から3日、無事、ストアの審査を通過しました！
 http://apps.microsoft.com/webpdp/ja-JP/app/appbarbuttonstyles/24b07f02-446a-4861-b265-1d2fe4dd5383 普通の人にはまったく役に立たないし、普通じゃない人にもほとんど役に立たないアプリなのでダウンロードする必要はないです。ただ、これからもちょくちょく機能を実装して、ストアに通るか試すためにアップデートしようかなと思います。今回はそれよりも、 @ch3cooh 先生に習ってリジェクト理由とその対策を検討したいと思います（Windows ストア アプリがリジェクトされた - 酢ろぐ！）。 ### 認定レポート   査が終わると、このような「認定レポート」がもらえます。リジェクト理由はその中に書いてあるのですけど、前回は以下の理由でリジェクトされていました。
 お客様のアプリは、要件 1.1 を満たしていません。 お客様のアプリは、要件 1.2 を満たしていません。 お客様のアプリは、要件 4.1 を満たしていません。 お客様のアプリは、要件 6.3 を満たしていません。 では、順にみていきましょう。 #### 要件 1.1：アプリは、サポートしているすべての言語と市場で、ユーザーに独特かつ独創的な価値または実用性を提供しなければならない  #### 要件 1.2：ユーザーが Windows ストアからアプリを入手したとき、そのアプリは完全に機能しなければならない 確かに実用性には欠けるかもしれませんが、ほかに似たようなアプリがあるとは思えません。また、不完全な機能や実装予定の機能を付けた覚えもありません。レビュアーに「何ができるアプリなのか」があまり伝わっていなかったのかもしれません。僕のアプリの機能は、  StandardStyles.xaml で定義されている AppBarButtonStyle のカタログを提供すること スタイルを検索チャームで検索できること スタイルの XAML コードをクリップボードへコピーできること の3点。なので、まず英語での説明を1.5倍ぐらいに増やしました。あと、“Show samples of style”という表現が「不完全な機能」を連想させて誤解を生むかもしれないと思ったので、“Show catalog of styles”と細部の表現に気を使いました。英語としてはそんなに推敲してないし、ダメダメだと思いますけど、今回の審査には通ったのでまぁ、いいんじゃないでしょうか。   と、クリップボードへコピーされたということがわかってもらえなかったのかもしれないと思ったので、トーストで通知するように改良しました。ちょっと過剰な対応かなと思ったけれど、こういう配慮が必要なのも含めて“Metro”デザインなのかもしれません。
 #### 要件 4.1：プライバシーに関する次の要件に準拠しなければならない ストアアプリに提出した人で一番引っかかるのはこれなんじゃないでしょうか。   定レポートに付属していたPDFによると、</description>
    </item>
    
    <item>
      <title>DummyImage 1.2.0</title>
      <link>https://blog.daruyanagi.jp/entry/2012/09/11/090133/</link>
      <pubDate>Tue, 11 Sep 2012 09:01:33 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/09/11/090133/</guid>
      <description>さっそくですけど、DummyImage 1.0.0 - だるろぐ のアップデートです。https://nuget.org/packages/DummyImage
### 変更点 #### 1.1.0 (2012/09/11)   br/&amp;gt;
 ［追加］@DummyImage.GetHtml(DummyImage.Size) をサポート。Intellisense で楽ちん！*1 ［修正］Visual Studio 2012 for Web で動作確認＆手直し   #### 1.2.0 (2012/09/11)  ［修正］GetHtml() の一部オーバーロードで text: を指定できない   *1:クソめんどくさかった  </description>
    </item>
    
    <item>
      <title>DummyImage 1.0.0</title>
      <link>https://blog.daruyanagi.jp/entry/2012/09/11/070914/</link>
      <pubDate>Tue, 11 Sep 2012 07:09:14 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/09/11/070914/</guid>
      <description>ダミーイメージがもらえなくて激怒したので WebMatrix でスマートに解決してみたけど一部激怒した - だるろぐ で作成したヘルパーを NuGet として公開しました。https://nuget.org/packages/DummyImage使い方は簡単！
  br/&amp;gt;
// 幅だけ指定すると 16:9 になります @DummyImage.GetHtml(300) // 好みの属性を与えられます @DummyImage.GetHtml(300, attrs: new { Alt = &amp;#34;Alt Txet&amp;#34;, }) // あとは Intellisense でもみてカスタマイズしてください @DummyImage.GetHtml( 300, backBrush: System.Drawing.Brushes.AliceBlue); ```あと、各種広告や解像度で一般的なサイズをキーワードで指定することもできます。 &amp;lt;div class=&amp;#34;section&amp;#34;&amp;gt; #### Ad Sizes &amp;lt;table&amp;gt; &amp;lt;tbody&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;th&amp;gt;Keyword	&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;Shortcuts	&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;Dimensions	&amp;lt;/th&amp;gt; &amp;lt;th&amp;gt;Regular Expression&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;mediumrectangle	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;medrect	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;300×250	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(med)\w+(rec\w+)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;squarepopup	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;sqrpop	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;250×250	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(s\w+pop)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;verticalrectangle	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;vertrec	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;240×400	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(ver)\w+(rec)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;largerectangle	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;lrgrec	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;336×280	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(large or lrg)(rec)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;rectangle	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;rec	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;180×150	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; ^(rec)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;popunder	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;pop	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;720×300	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(pop)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;fullbanner	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;fullban	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;468×60	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(f\w+ban)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;halfbanner	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;halfban	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;234×60	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(h\w+ban)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;microbar	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;mibar	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;88×31	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(m\w+bar)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;button1	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;but1	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;120×90	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(b\w+1)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;button2	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;but2	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;120×60	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(b\w+2)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;verticalbanner	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;vertban	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;120×240	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(ver\w+ban)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;squarebutton	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;sqrbut	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;125×125	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(s\w+but)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;leaderboard	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;leadbrd	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;728×90	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(lea\w+rd)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;wideskyscraper	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;wiskyscrpr	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;160×600	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(w\w+sk\w+r)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;skyscraper	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;skyscrpr	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;120×600	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(sk\w+r)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;halfpage	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;hpge	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;300×600	&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;^(h\w+g)&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;第一引数に string をとるオーバーロードがあるので、それにつっこんでください。 ```cs @DummyImage.</description>
    </item>
    
    <item>
      <title>SoundKeyboard 2012 v2.4.0</title>
      <link>https://blog.daruyanagi.jp/entry/2012/08/27/000929/</link>
      <pubDate>Mon, 27 Aug 2012 00:09:29 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/08/27/000929/</guid>
      <description>ブログ書いてるあいだに日付が変わりそうだな。
 http://daruyanagi.net/SoundKeyboard%202012  ### 2.4.0（12/06/36）  ［追加］Windows 8向けにスクリーンショット機能を追加。画面回転のロック（ハードキー、または［Windows］＋［O］）をフック（＆殺）しています ［修正］設定ファイルが不正な場合に起動できなくなる（08式机上撮影機 v1.7.0 - だるろぐ） ［変更］ミュート機能のホットキーを［Windows］＋［X］に（「One Note」とキーバインドがカブるため……ペケって覚えてね！    分の場合、画面回転のロックは常に ON 。むしろ、これが OFF になって画面が回転するとウザい。というわけで、このキーを殺してスクリーンショット機能を割り当ててみました。ちなみに、スクリーンショットをとる際に再生されるのは、サウンドパックで［PrintScreen］キー（Snapshot.wav だっけかな）に割り当てられたサウンドです。時間があるときに、このフック機能も ON/OFF できるようにするつもり。というか、この機能単体でほしい人がいたら作るかもしれない。
 SoundKeyboard 2012 v2.3.0 - だるろぐ   </description>
    </item>
    
    <item>
      <title>08式机上撮影機 v1.7.0</title>
      <link>https://blog.daruyanagi.jp/entry/2012/08/26/235336/</link>
      <pubDate>Sun, 26 Aug 2012 23:53:36 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/08/26/235336/</guid>
      <description>http://daruyanagi.net/Type08ScreenCapture
### 1.7.0（12/06/26）  [変更].NET Framework 4.5 ベースになりました（Windows Vista 以前を使っているヒト、さようなら） [修正] スクリーンショットフォルダの名前を修正 [修正] Windows 8 への対応。［Windows］＋［X］キーで使えるようにしました カーソルを含めたスクリーンショットが可能な点以外、システム標準の機能より勝る点はないです。  ### ごめんなさい、Windows 8 のスクリーンショットの保存フォルダは……   indows 8 対応の作業をしていたときのこと。あれ、なんで“スクリーンショット”フォルダが2つあるんだろう（＠＠？実は Windows 8 のスクリーンショットフォルダの名前は“スクリーンショット”ではなく、“Screenshots”でした。見かけは“スクリーンショット”なんだけど、パスは“Screenshots”。やられた……。まぁ、設定ファイルが優先されると思うので、“スクリーンショット”に保存したいヒトはそのまま。“Screenshots”に変更したいヒトは、“AppData”フォルダにある設定ファイルをサクッと消してから起動すればよいと思います。試してないけれど。
 ### ソースコードは……   ぬぬ。また今度。
 08式机上撮影機 v1.6.0 - だるろぐ   </description>
    </item>
    
    <item>
      <title>黒歴史駆動人生。</title>
      <link>https://blog.daruyanagi.jp/entry/2012/07/26/211346/</link>
      <pubDate>Thu, 26 Jul 2012 21:13:46 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/07/26/211346/</guid>
      <description>   日々のつぶやきを直感的に投稿するものだけに、一呼吸おいて見直してみると、自分の過去ツイートに後悔だらけ、以前使っていたTwitterアカウントのツイート内容なんて恥ずかしすぎる――SNSの普及の陰で、そんな思いを抱いている人も少なくないだろう。そうした人にぴったりなサービスとして「黒歴史クリーナー」なるものが登場し、話題となっている。この「黒歴史クリーナー」は、まさに“黒歴史”といえる恥ずかしい過去のツイートを自動で一括消去してくれるもの。Twitterアカウントで認証し、開始をクリックするだけという簡単操作で全削除ができる。 いまや後悔…なツイートを削除、「黒歴史クリーナー」が話題 ネットベンチャーニュース  もったいない！　もったいない！！あなたは今、一年前に自分が何をしていたか思い出せますか？　僕は思い出せるよ。
 『ARIA』を読んでいて朝まで寝られずに睡眠不足でした 話題のニュースは中国の列車事故 『3月のライオン』の最新刊を買おうと思ったけど本屋に置いてなかった 仕事帰りにフィットネスクラブに入会しました（引越し時に辞めました） けれど、フィットネスクラブは結局見学だけ。あとは居酒屋で呑んでました ARIA (1) (BLADE COMICS)作者: 天野こずえ出版社/メーカー: マッグガーデン発売日: 2002/10メディア: コミック購入: 8人 クリック: 188回この商品を含むブログ (334件) を見るこういうのを思い出せるのも、 Twitter のおかげだよ。自分が何を考えていたのか手に取るように……とは言わないけれど、やんわり思い出すことができる。確かにアホなツイートしかしてないし、読み返せば恥ずかしいし、そう大して面白いことを行っているわけではないけれど、「見直すことができる」っていうそのこと自体が楽しいし、また、今の自分を見直すのにも役に立つ。それこそが、ライフログの効用なんじゃないかなって思う。それを消してしまうなんて！確かに「黒歴史」は、見返して恥ずかしかったり、見られて恥ずかしい。けれど、「黒歴史」があるからこそ、それが乗り越えるべき壁になり、そこから先へ多少なりとも進歩できる。人生は「黒歴史」で駆動されている。「黒歴史」のない人間なんて、たぶん面白くもなんともないだろう。去年のお前というわけで、「WebMatrix 2」でこんなのつくってみた。運良く Twilog - Twitterのつぶやきをブログ形式で保存 を一年前から使っていて、ツイートを公開しており、なおかつクオータを使いきって Windows Azure がサスペンドされていなければ、遊ぶことができるよ。 </description>
    </item>
    
    <item>
      <title>08式机上撮影機 v1.6.0</title>
      <link>https://blog.daruyanagi.jp/entry/2012/06/19/034613/</link>
      <pubDate>Tue, 19 Jun 2012 03:46:13 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/06/19/034613/</guid>
      <description>08式机上撮影機 v1.5.0 - だるろぐ に、デスクトップ全体を一時的に暗転させたい (2) - だるろぐ を追加。Type08ScreenCapture - Daruboard
### 1.6.0（12/06/19）  [修正] スクリーンショットエフェクトの復活 [修正] サウンドの存否チェックを追加   ### Merge 頑張ってみた 修正には直接関係ないけど、 merge ができないヘタレなので git でちょっと困った。前回の修正でうっかり README を更新し忘れたので、それを github でチョチョイのちょいと変更したのだけど、_それでリモートとローカルでコンフリクトが起こってしまった ／(^o^)＼ _気がついたら、作った覚えのないブランチがある。(ΦωΦ)ﾌﾌﾌ…でも、GitHub for Windows が何とかしてくれるはず！(´；ω；｀) ﾅﾝﾄﾓﾅﾗﾅｶｯﾀﾖ……git status というコマンドで何が起こったのか見られるみたい。案の定、 README.md が両方で変更されていると。あうあう。そのあと、あちこちでいろいろ調べながら、いろいろ試してみたのだけど（ちゃんと記録とっとけよ！）、もう、何もわからん。とりあえず、最後に適当に git push してみた。 ```cs C:\Users\Hidetoshi Yanagi\Documents\GitHub\Type08ScreenCapture [master] git push To https://github.com/daruyanagi/Type08ScreenCapture.git ! [rejected] master - master (non-fast-forward) error: failed to push some refs to &amp;#39;https://github.com/daruyanagi/Type08ScreenCapture.git&amp;#39; hint: Updates were rejected because the tip of your current branch is behind hint: its remote counterpart.</description>
    </item>
    
    <item>
      <title>08式机上撮影機 v1.5.0</title>
      <link>https://blog.daruyanagi.jp/entry/2012/06/18/202158/</link>
      <pubDate>Mon, 18 Jun 2012 20:21:58 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/06/18/202158/</guid>
      <description>Windows 8 RP のスクリーンショット機能 - だるろぐ への対応。設定用の UI も付けたかったのだけど、XAML のデザイナーが動かなくて……面倒なのでまた今度。新規インストールの時だけ反映されるよ！Type08ScreenCapture - Daruboard
### 1.5.0（12/06/16）  保存フォルダの変更 保存フォルダの存在チェック 撮影音の変更 けれど、デスクトップの暗転効果が動かなくなっちゃった。うーん、テスト不足だった。  08式机上撮影機 v1.4.0 - だるろぐ デスクトップ全体を一時的に暗転させたい - だるろぐ   </description>
    </item>
    
    <item>
      <title>SoundKeyboard 2012 v2.3.0</title>
      <link>https://blog.daruyanagi.jp/entry/2012/06/18/201542/</link>
      <pubDate>Mon, 18 Jun 2012 20:15:42 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/06/18/201542/</guid>
      <description>iP! 2012年7月号 に掲載されました。 - だるろぐ でやる気が出たので、放置していたバグを修正するなど、少し手直ししました。ちなみに、雑誌に書いてあったエロ動画のダウンロード方法はまだ試してません ☆（ゝω・）vｷｬﾋﾟ
 SoundKeyboard 2012 - Daruboard  ### 2.3.0（12/06/16）  ［追加］メニューアイテムにショートカットを表示 ［追加］キーフックの自動修復機能 ［修正］Defalt.wav がない場合にデフォルトサウンドの再生を有効化するとアプリケーションがクラッシュする ［追加］Defalt.wav のないサウンドパックへ Defalt.wav を追加 ［修正］README.md を UTF-8 へ v2.0.0 から WPF にしたのだけど、Visual Studio 2012 だと XAML デザイナーがうまく動かなくて、ちょっと悲しい……。でも、Visual Studio 2010 のソリューションが、変換なしで Visual Studio 2012 で開けるのはちょっと嬉しいかも。  SoundKeyboard 2012 が WPF 製に、v2.0.0 を公開しました - だるろぐ なお、本バージョンは気が向いたらベクターにもアップロードするつもりです。  </description>
    </item>
    
    <item>
      <title>祝？　10万ツイート</title>
      <link>https://blog.daruyanagi.jp/entry/2012/06/03/143807/</link>
      <pubDate>Sun, 03 Jun 2012 14:38:07 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/06/03/143807/</guid>
      <description>この数日間で、いつの間にか10万ツイートを超えていたみたい。塵も積もれば山になるものですね。ほんとに塵ばっかりだけど！というわけで、気分を一新するためにも、Twitter のアイコンを変えてみました。ちょっとおねだりしてしまった*1。前のアイコンもそうだけど、おなかのやっつけ感が気に入っている。
*1:めかちゃん、ありがと！  </description>
    </item>
    
    <item>
      <title>iP! 2012年7月号 に掲載されました。</title>
      <link>https://blog.daruyanagi.jp/entry/2012/05/29/011205/</link>
      <pubDate>Tue, 29 May 2012 01:12:05 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/05/29/011205/</guid>
      <description>SoundKeyboard 2012 - Daruboard が iP! 2012年7月号 に掲載されました1。ソフトが雑誌に掲載されて見本誌もらうなんて、何年振りだろう！　別に買わなくてもいいけど、買ってもいいですよ！　なんかエロい動画のダウンロード方法が書いてありました！iP！ （アイピー）[雑誌][パソコン誌]ちなみに、ほんとは 窓の杜 - 【今日のお気に入り】初期状態で「Google Chrome」を起動「すっぽんぽんくろーむ」 が去年の今頃、とある雑誌に収録予定だったのですけど、そっちは東日本大震災のせいか、立ち消えになりました2*3。まぁ、それはそれで致し方なし。
*1:たぶん、雑誌に掲載されているバージョンより、Webサイトに公開してあるバージョンのほうが新しいです *2:途中で連絡が途絶えました！ *3:このソフトは「Google Chrome」最新版で必要がなくなりました  </description>
    </item>
    
    <item>
      <title>08式机上撮影機 v1.4.0</title>
      <link>https://blog.daruyanagi.jp/entry/2012/05/27/161348/</link>
      <pubDate>Sun, 27 May 2012 16:13:48 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/05/27/161348/</guid>
      <description>23日夜から24日お昼まで、動作しないアプリが公開されていてちょっと申し訳なかったデス……。まぁ、あまり使ってる人はいないだろうし、犠牲者はいないと思う（ぉ
#### バイナリ http://download.daruyanagi.net/Type08ScreenCapture/  #### ソースコード https://github.com/daruyanagi/Type08ScreenCapture  ### 1.4.0（2012/05/27）  バージョンの変更忘れ 更新チェックをアプリの終了後に行うようにした   ### 1.3.0（2012/05/27）  バルーン通知 サウンド通知 マウスカーソルを含めたキャプチャー [修正] スクリーンショットエフェクト（デスクトップ全体を一時的に暗転させたい - だるろぐ） [変更] 保存形式をPNGに 設定の保存（シリアライズを利用したアプリケーションの設定保存 - だるろぐ） アイコンのダブルクリックで撮影   ### 1.2.0（2012/05/23）  [削除] 通知のON/OFF機能追加 [削除] マウスカーソルを含めたキャプチャー スクリーンショットエフェクトの追加 README.md をちゃんと書いた GitHub for Windows もバージョン上がってるみたいだね。うちは Windows 8 環境でフリーズが多発していたのだけど、ちょっとは改善されたのかしら。  </description>
    </item>
    
    <item>
      <title>08式机上撮影機 v1.1.0</title>
      <link>https://blog.daruyanagi.jp/entry/2012/05/22/234957/</link>
      <pubDate>Tue, 22 May 2012 23:49:57 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/05/22/234957/</guid>
      <description>とある記事*1を書くついでに、10分ぐらいで新しい機能を付け足しました。設定が保存されないはずなので、今度ゆっくり改善します。ごめんなさい。08式机上撮影機 - Daruboard
### 1.1.0（2012/05/22）  通知のON/OFF機能追加 保存フォルダを開く機能追加 README.md を申し訳程度に追加 GitHub for Windows これはいいな！ ずっと Mac OS X版がうらやましかったのでうれしい。 *1:http://www.forest.impress.co.jp/docs/news/20120522_534423.html  </description>
    </item>
    
    <item>
      <title>Vector にソフトを公開しました</title>
      <link>https://blog.daruyanagi.jp/entry/2012/03/22/223633/</link>
      <pubDate>Thu, 22 Mar 2012 22:36:33 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/03/22/223633/</guid>
      <description>気が向いたら試してみてね！　テストが適当だから動かないかもしれないけれど*1。作者: daruyanagiそれはそうと、公開した日に限ってこのニュース。自分には関係のない話だけど、なんか変な因縁を感じてしまう (´・ω・｀)
&amp;gt; 株式会社ベクターは22日、同社のサーバーに不正アクセスの痕跡があり、最大で26万1161件の個人情報が流出した可能性があると発表した。一部にはクレジットカードの情報が含まれており、ベクターでは調査結果やユーザーへの補償方針について都度報告するとしている。 ベクターに不正アクセス、カード情報含む最大26万件の個人情報が流出の可能性 -INTERNET Watch  *1:とくに「すっぽんぽんくろーむ」は「Google Chrome」v16 あたりでユーザーの切り替え機能が搭載され、その役割を終えました。プロフィールが破壊されることはないと思うけれど、使わないほうが無難  </description>
    </item>
    
    <item>
      <title>SoundKeyboard 2012 が WPF 製に、v2.0.0 を公開しました</title>
      <link>https://blog.daruyanagi.jp/entry/2012/03/15/234726/</link>
      <pubDate>Thu, 15 Mar 2012 23:47:26 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/03/15/234726/</guid>
      <description>設定が多くなるにつれてコードがこんがらがってきたので、新規に WPF で作り直しました。キーの入力表示にドロップシャドウエフェクトが付いたり、設定をウィンドウのユーザーインターフェイスがカッコよくなっています。WPF は最初は面倒くさいし難しいなって思っていましたが、慣れてみるとそうでもないですね。データとユーザーインターフェイスの分離が WinForm よりも進んでいるので、WinForm ではあとから設定をひとつ加えるごとにコードが加速度的に増えていくのに対し、 WPF はその点複雑性が増すのが抑えられている感じ。初期投資はちょっと多めだけど、それなりにメリットはある。何より許せない INotifyPropertyChanged の実装のめんどくささも解決できたし。これに関しては、もう眠いので明日にでも。SoundKeyboard 2012 - Daruboard</description>
    </item>
    
    <item>
      <title>「08式机上撮影機（Type08ScreenCapture）」を公開しました</title>
      <link>https://blog.daruyanagi.jp/entry/2012/03/11/165757/</link>
      <pubDate>Sun, 11 Mar 2012 16:57:57 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/03/11/165757/</guid>
      <description>**「08式机上撮影機（Type08ScreenCapture）」**は、Windows 8の［Windows］＋［PrintScreen］機能をWindows 7で実現します。ホットキーを押すと、デスクトップのスクリーンショットを撮影して、ピクチャーフォルダへ自動保存することができます。細部仕様が異なるのはキニシテハイケナイ。
 Type08ScreenCapture - Daruboard Windows 8 は［Windows］＋［PrintScreen］キーでデスクトップのスクリーンショットを“ピクチャー”フォルダに保存できる - だるろぐ  #### 注意事項  .NET Framework 4 Client Profile が必要です。インストール時にセットアップされます。 一部ブラウザーがインストーラーを不正なファイルとして検出します。別に怪しい挙動を仕込んではいませんが、気になる方はダウンロードを控えていただけますようお願いいたします。 - オレの作ったアプリが不正なファイル呼ばわりされる件について - だるろぐ   </description>
    </item>
    
    <item>
      <title>SoundKeyboard 2012 を公開しました</title>
      <link>https://blog.daruyanagi.jp/entry/2012/03/11/001549/</link>
      <pubDate>Sun, 11 Mar 2012 00:15:49 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2012/03/11/001549/</guid>
      <description>「SoundKeyboard 2012」は、キーのタイプで音を鳴らすタスクトレイ常駐型ソフトです*1。http://daruyanagi.net/SoundKeyboard%202012主要な機能は以下のとおりです。
 ミュート機能（［Ctrl］＋［Alt］＋［M］キー） デスクトップに入力キーを表示する機能 サウンドパックの切り替え機能 Windows 7 64bit版でのみ動作を確認しています。 #### サウンドパックについて キーにサウンドを割り当てるには、**サウンドパック**を作成します。といっても大仰なものではなくて、単にフォルダへWAVEファイルを入れておくだけでです。例えば、「サウンド」フォルダに「A.wav」を入れて、それをサウンドパックに指定すると、［A］キーを押した時に「A.wav」が再生されます。キーの名前はキー入力のデスクトップ表示機能を利用して確認しながらつけていくとイイと思います。サウンドパックの名前は、フォルダと同じです。さきの例で言えば、「サウンド」がそのままサウンドパックの名前になります。デフォルトでは2つのサウンドパックを収録しています。  **alpha**：アルファベットキーを打つと音がなります。 **mari_skb**：スペースやエンターなどを押すと音がなります。 音声を作成してくれました北村真里さんに感謝いたします。  #### 既知の不具合  サウンドパックの設定は保存されますが、その他のアプリケーションの設定は保存されません。そのうち実装します。 32bit版で動くか不安です。 WAVEファイルの大文字小文字に気をつけて下さい。これはのちのバージョンで修正する予定です。  *1:もともとは @subsfn 氏が Delphi で制作したものですが、だいぶ古くなったので C# で作り直しました。  </description>
    </item>
    
  </channel>
</rss>