<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WebMatrix on blog.daruyanagi.jp</title>
    <link>https://blog.daruyanagi.jp/tags/webmatrix/</link>
    <description>Recent content in WebMatrix on blog.daruyanagi.jp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 26 Mar 2017 23:43:47 +0000</lastBuildDate>
    
	<atom:link href="https://blog.daruyanagi.jp/tags/webmatrix/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>はてなブログのドメインを daruyanagi.jp から blog.daruyanagi.jp へ引越しした</title>
      <link>https://blog.daruyanagi.jp/entry/2017/03/26/234347/</link>
      <pubDate>Sun, 26 Mar 2017 23:43:47 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/03/26/234347/</guid>
      <description>まり気付かれてない気がしますが（こっそりやったので！）、はてなブログのドメインをお引越ししました。はてなブログを独自ドメインにする話はよく見かけますが、独自ドメインで運用していたはてなブログを別のドメインへ移動させた例はあまりないかもしれないので、メモがてら残しておきます。とはいえ、心配したようなトラブルもとくに起こりませんでした。1時間ちょっと はてなブログ がダウンしたのと、AdSense がちょっと減ったような気がする程度です。
### 以前の状態と解決すべき課題以前はdaruyanagi**.net**：メインのブログ（WordPress）daruyanagi**.jp**：はてなブログという運用をしていたのですが（こういうちょっと謎な構造になっていたのは、もっぱら歴史的な事情によります）、WordPress よりも はてなブログの方が管理が楽だったこともあり、いつしか daruyanagi.jp がメインに。持て余していた daruyanagi.net をポートフォリオサイト（というか自己紹介サイト）っぽい感じにして使っていたのですが、とある日、ドメインの延長手続きを失念してしまい、daruyanagi.net を失ってしまいました。  在は水素水を布教するサイトになっています。そんなわけで、
daruyanagi.jp：はてなブログ**about.**daruyanagi.jp：自己紹介サイトというよくわからない構造になってしまい、ちょっと困っていました。できればこれを**blog.**daruyanagi.jp：はてなブログdaruyanagi.jp：自己紹介サイトという感じに整理したかった。あと、トップドメインで はてなブログ を運用するのはあまりよくないので直したかった、というのもあります。&amp;gt;※はてなブログでは、サブドメインを使用しないexample.comでブログを運用すると、ドメイン名の仕組み上、トラブルの原因になることがあります。取得したドメインの前に、必ずサブドメイン（wwwやblogなど）を付加してください。はてなブログを独自ドメインで利用する - はてなブログ ヘルプ Twitter で煽られるのも悲しいですしね！
RFC 違反ドメイン
&amp;mdash; しばやん (@shibayan) March 25, 2017  br/&amp;gt;
### WebMatrix × ASP.NET Web Pages で自己紹介サイトを構築し、Azure へ配置するというわけで、サイトのお引越し処理です。やらなければいけないのは以下の2つになります。はてなブログを daruyanagi.jp から blog.daruyanagi.jp へ移動独自ドメインの割り当てを解除し、daruyanagi.hatenablog.com に戻すDNS設定を行うはてなブログに新しい独自ドメインを割り当てる自己紹介サイトを daruyanagi.</description>
    </item>
    
    <item>
      <title>WebMatrix とおさらばして、Visual Studio 2015 で ASP.NET Web Pages をはじめる</title>
      <link>https://blog.daruyanagi.jp/entry/2017/02/12/100000/</link>
      <pubDate>Sun, 12 Feb 2017 10:00:00 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/02/12/100000/</guid>
      <description>年愛用してきた「WebMatrix」ですが、昨年10月に2017年11月1日 でのサポート終了がアナウンスされました。
&amp;gt;Hi everyoneAfter a long and successful run, Microsoft has decided to end formal support of WebMatrix. Formal support will end on November 1st, 2017. Community support will continue on the WebMatrix forums Please take a look at Visual Studio Code, our new, free, open source, multi-platform editor! VS Code support git integration, extensions and a whole bunch of other great features!Thanks!The WebMatrix teamWebMatrix formal support ends November 1st, 2017 : The Official Microsoft IIS Forums   でにテンプレートをダウンロードする際に 404 が発生することが多くなったほか、拡張機能のダウンロード提供が終了しており、第一線で使うにはつらい状況になっています。そろそろ乗り換えを検討すべきでしょう。Microsoft は後継ソフトとして「Visual Studio Code」を推奨していますが、これは統合ターミナルでバリバリとコマンドを打つ感じなので、GUI に甘やかされた僕にはしんどい感じ（最近「Express」を少し触っているのですが、そっちの文化にあわせるなら割と使いやすいですけどねー）。いずれ慣れないといけないなーとは思うんですが、APS.</description>
    </item>
    
    <item>
      <title>WebMatrix：フィードを読み込むときに System.Xml.XmlException が発生する</title>
      <link>https://blog.daruyanagi.jp/entry/2016/06/03/190631/</link>
      <pubDate>Fri, 03 Jun 2016 19:06:31 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2016/06/03/190631/</guid>
      <description>ASP.NET Web Pages 製の BOT が、ある日を境に突然、System.Xml.XmlException エラーを吐くようになった。
&amp;gt;The element with name &amp;amp;#39;RDF&amp;amp;#39; and namespace &amp;amp;#39;http://www.w3.org/1999/02/22-rdf-syntax-ns#&amp;amp;#39; is not an allowed feed format.  某サイトのリニューアルで、RSS 2.0 が RSS 1.0 になったせいでフィードが読めなくなったらしい／(^o^)＼
&amp;gt;Classes That Model Syndication Feeds and Items SyndicationFeed - represents a syndication feed. Has properties like Title, Description, Links, and Items. The Items property represents the collection of content items expressed in the feed. SyndicationItem - represents a specific syndication feed item and includes properties like Title, Summary, PublishDate, Authors, and so on.</description>
    </item>
    
    <item>
      <title>WebMatrix：改修工廠の早見表がほしかったので作ってみた</title>
      <link>https://blog.daruyanagi.jp/entry/2015/09/19/203816/</link>
      <pubDate>Sat, 19 Sep 2015 20:38:16 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/09/19/203816/</guid>
      <description>  週は超忙しい＆体調がよろしくなかった“ので”、合間を見つけて前々からほしかった改修工廠の早見表を作ってみた。接続詞が間違っているというツッコミが入りそうだけど、こういうのって、そういうときにこそやりたくならない？
### 最初に作ったヤツ  SP.NET Web Pages ＋ SQL Server Compact で作ってみたけど、だいぶ遅かった。遅いのは多分、自分が SQL わかってないせいだと思う（SELECT でごっそりとってきたデータを LINQ で加工するとかいうわけのわからないことをやっていた）。SQL が分かんないのは一朝一夕に改善できないので、とりあえずデータベースへの問い合わせ結果をキャッシュしまくってみたけれど、スタートアップの遅さは改善できない。Web サイトがスタンバイ（スリープ？　なに？）したら、キャッシュを一から再構築しなきゃいけないのも困った。――というわけで、廃棄する予定。
http://akashi.azurewebsites.net/### 二番目に作ったヤツ  、ちょっと考えてみたんだけど、こういうデータっていうのは稀にあるサーバーのメンテナンスのときにしか更新されないわけだ。だったら、なにもデータベースに入れる必要はなかった（CURD のうち R しかやらへんやん？）。JSON か何かでデータを用意しておいて、サーバーのスタートアップ時に読み込めばいい。俺ってアホだなーと思いながら、ぐちゃぐちゃっと今日半日で作ったら（ロジック組むより、データ打ち込む方がよっぽど時間かかった）、最初に作ったヤツよりだいぶ早くて満足。コードを整理しながらロジック見直せばもうちょっと早くなりそう。なんせ今のは cshtml に foreach が腐るほど埋まってるという正真正銘のクソコードだし……ちょうどいいから今度 GitHub にあげて、GitHub Flow ってのを勉強するネタにしようと思う。
http://akashiarsenal.azurewebsites.net/ほんとうはこれを Windows Phone に移植しておでコンに出したかったけれど、いつの間にか締め切り過ぎてたみたい。残念。艦これ Android 版が出るらしいし、Android アプリにするのもアリかなぁ？　</description>
    </item>
    
    <item>
      <title>WebMatrix： URL にドットを含めたい</title>
      <link>https://blog.daruyanagi.jp/entry/2015/09/13/032922/</link>
      <pubDate>Sun, 13 Sep 2015 03:29:22 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/09/13/032922/</guid>
      <description>  iki エンジンなんかを作るときなど、「ドット（.）」を URL に含めたい場合は、Web.config に一行、以下のように加えるといいみたい。
&amp;lt;!--?--&amp;gt;xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&amp;lt;configuration&amp;gt;&amp;lt;/configuration&amp;gt;.webServer&amp;gt;runAllManagedModulesForAllRequests=&amp;#34;true&amp;#34; /&amp;gt;.webServer&amp;gt;```静的リソースまでアプリケーションで処理するようになる（？）ので、効率が悪そうだけど。もっとちゃんと対策したければ、以下の URL が参考になりそう。&amp;lt;iframe src=&amp;#34;//hatenablog-parts.com/embed?url=http%3A%2F%2Fstackoverflow.com%2Fquestions%2F11728846%2Fdots-in-url-causes-404-with-asp-net-mvc-and-iis&amp;#34; title=&amp;#34;Dots in URL causes 404 with ASP.NET mvc and IIS&amp;#34; class=&amp;#34;embed-card embed-webcard&amp;#34; scrolling=&amp;#34;no&amp;#34; frameborder=&amp;#34;0&amp;#34; style=&amp;#34;display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;&amp;#34;&amp;gt;&amp;lt;/iframe&amp;gt;</description>
    </item>
    
    <item>
      <title>お前ら喜べ！　Windows 10 でも WebMatrix が使えるぞ！！</title>
      <link>https://blog.daruyanagi.jp/entry/2015/07/07/210638/</link>
      <pubDate>Tue, 07 Jul 2015 21:06:38 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/07/07/210638/</guid>
      <description>  shibayan からもたらされた極秘情報によると、6月30日に WebMatrix 3.1 がリリースされていたらしい。
 @daruyanagi インスコ済みの WebMatrix のバージョン教えて— しばやん (@shibayan) 2015年7月5日
  @daruyanagi 6/30 にアップデートされてたくさい— しばやん (@shibayan) 2015年7月5日
 変更点が相変わらずよくわからなかったので、その日はそのまま寝て、このこともすっかり忘れていたのだけど、ふと思い立って Windows 10 にインストールしてみたところ……
          ｷﾀ━(ﾟ∀ﾟ)━(∀ﾟ )━(ﾟ　)━(　)━(　)━(　ﾟ)━( ﾟ∀)━(ﾟ∀ﾟ)━!!_ちょっと端っこが欠けてるような気がするけど、きっと気にしたら負けだ！！　ちゃんと息をしてくれているだけで、おじさんは満足です。これでいちいちわざわざゴニャゴニャしなくても、Windows 10 でちゃんと WebMatrix がインストールできる！みんな大好き Visual Basic 6 ともども、Windows 10 でも WebMatrix をよろしくお願いいたします（＾ｖ＾）ﾉ
### おまけ  しお手すきでしたらこれも直していただければ幸いです(`・ω・́)ゝ
</description>
    </item>
    
    <item>
      <title>WebMatrix：フィードを読み込んでデータベースへつっこむときに System.Data.SqlServerCe.SqlCeException が発生する。</title>
      <link>https://blog.daruyanagi.jp/entry/2015/06/25/050342/</link>
      <pubDate>Thu, 25 Jun 2015 05:03:42 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/06/25/050342/</guid>
      <description>だいぶ悩んで、Visual Studio まで立ち上げていろいろデバッグしていたのだけど、原因は簡単だった。
&amp;gt;### datetime300 分の 1 秒、つまり 3.33 ミリ秒の精度で、**1753 年 1 月 1 日から 9999 年 12 月 31 日まで**の日付と時刻のデータを格納するデータ型です。値は .000、.003、または .007 ミリ秒の単位になるように丸められます。2 つの 4 バイト整数として格納されます。最初の 4 バイトは、base date である 1900 年 1 月 1 日からの日数、またはこの日までの日数を格納します。基準日とは、システムが参照する日付です。datetime 型の値には、1753 年 1 月 1 日より前の日付を使用できません。もう一方の 4 バイトは、午前 0 時から数えた時間をミリ秒単位で格納します。秒の有効範囲は 0 から 59 までです。データ型   方、C# の default(DateTime) は 0001/01/01 0:00:00。つまり、SyndicationFeed オブジェクトの LastUpdateTime プロパティあたりにちゃんと値がセットされてなくて（そういうフィードを配信しているサイトは割とある）、default(DateTime) を返してくるとき、それをそのまま SQL CE データベースに格納しようとするとエラーになる。</description>
    </item>
    
    <item>
      <title>先生助けてっ！ WebMatrix ちゃんが息をしてないのっっ！！</title>
      <link>https://blog.daruyanagi.jp/entry/2015/04/28/023803/</link>
      <pubDate>Tue, 28 Apr 2015 02:38:03 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/04/28/023803/</guid>
      <description>br/&amp;gt;
&amp;gt;WebMatrix 3 does not support IIS Express 10. You will not be able to run WebMatrix 3 on the same machine with any version of Visual Studio 2015 that includes IIS Express 10 とうとうこの日が来たかーって感じですね！　一応、_IIS Express 10 に対応した WebMatrix（WebMatrix 4）がリリースされる_という可能性もなきにしもあらずですが、あんまり期待はもてなさそう。また、Visual Studio 2015 を使わないという手もありますが……WebMatrix と Visual Studio だったら Visual Studio 選びますわな。まぁ、でも、WebMatrix のおかげでいろいろ楽しかったです。Visual Studio がジェット戦闘機ならば、WebMatrix はレシプロ複葉機みたいなもんですが、自分みたいな趣味として片手間で触るような人間にはぴったりでした。入門向けとしてはなかなかいいツールではないかと思うのですが、あんまり普及しなくて残念です。
WebMatrix カテゴリーの記事一覧 - だるろぐというわけで、完全に死んだ頃を見計らってお葬式イベントでもやりたいと思います。#### 追伸&amp;gt;これで WebMatrix とかを完全に捨てられますね！Monaco上のファイルを一括ダウンロードする - xin9le.</description>
    </item>
    
    <item>
      <title>WebMatrix： 伊予鉄も止まったので、早速、遅延情報をゲットしてみる。</title>
      <link>https://blog.daruyanagi.jp/entry/2015/01/26/104215/</link>
      <pubDate>Mon, 26 Jan 2015 10:42:15 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/01/26/104215/</guid>
      <description>a href=&amp;quot;https://blog.daruyanagi.jp/entry/2015/01/25/143744&amp;quot;&amp;gt;WebMatrix： JR四国が止まったので、運行情報の取得プログラム作るのが捗った。 - だるろぐ で喜んでたら、今朝は伊予鉄にも遅れが出た。これで、伊予鉄の運行情報もとれるぞ！
電車・バス情報 | 伊予鉄伊予鉄の運行情報ページの構造は、```html&amp;lt;p class=&#34;about&#34;電車・バス　現在通常通り運行しております。&amp;lt;/p&amp;lt;p class=&#34;date&#34;2015/01/26(月) 10:26&amp;lt;/p&amp;lt;table class=default&amp;gt; : : &amp;lt;/table&amp;gt;
```cspublic static List&amp;amp;lt;DelayInfo&amp;gt; GetIyotestu(){const string name = &amp;quot;伊予鉄&amp;quot;;const string url = &amp;quot;http://www.iyotetsu.co.jp/kinkyu/&amp;quot;;return GetDelayInfo(name, url, Encoding.UTF8, _ =&amp;gt; {var doc = new HtmlAgilityPack.HtmlDocument();doc.LoadHtml(_);try{// 遅延情報のテーブルを取得。発見できなければ例外 → 正常運行var rows = doc.DocumentNode// table.default のなかにある tr タグを取得.</description>
    </item>
    
    <item>
      <title>WebMatrix： JR四国が止まったので、運行情報の取得プログラム作るのが捗った。</title>
      <link>https://blog.daruyanagi.jp/entry/2015/01/25/143744/</link>
      <pubDate>Sun, 25 Jan 2015 14:37:44 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/01/25/143744/</guid>
      <description>かに待ってました。人身事故ってのがちょっと胸痛むけれど。すみません。でも、これで運行に遅延が発生した時にどんなコードが吐かれるのかわかったやで。
ＪＲ四国列車運行情報遅れがないとき。```html&amp;lt;div ID=&#34;delay_info&#34;&amp;lt;div class=&#34;no_delay&#34;◇現在、遅れ等の情報はありません。&amp;lt;/div&amp;lt;/div```html&amp;amp;lt;div ID=&amp;quot;delay_info&amp;quot;&amp;gt;&amp;amp;lt;p&amp;gt;◇現在、以下のエリアで影響が出ています（*:**更新）。&amp;amp;lt;/p&amp;gt;&amp;amp;lt;h4&amp;gt;徳島線&amp;amp;lt;/h4&amp;gt;&amp;amp;lt;h5&amp;gt;徳島線（牛島駅構内）　運転再開&amp;amp;lt;/h5&amp;gt;&amp;amp;lt;p&amp;gt;徳島線では……&amp;amp;lt;br&amp;gt;※高徳線の列車は……&amp;amp;lt;/p&amp;gt;&amp;amp;lt;/div&amp;gt;```同じ路線で複数の遅延情報があるケースも考えられるだろうので、タグはこんな感じになるんだろう（と思う）。p
h4 h5 p
h5p: h4 h5 p
h5p: ```cspublic class DelayInfo{public string Line { get; set; }public string Status { get; set; }public string Message { get; set; }}public static List&amp;amp;lt;DelayInfo&amp;gt; GetJRShikoku(){const string key = &amp;quot;jrshikoku&amp;quot;;const string url = &amp;quot;http://www.</description>
    </item>
    
  </channel>
</rss>