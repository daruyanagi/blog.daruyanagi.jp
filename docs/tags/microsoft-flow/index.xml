<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microsoft Flow on blog.daruyanagi.jp</title>
    <link>https://blog.daruyanagi.jp/tags/microsoft-flow/</link>
    <description>Recent content in Microsoft Flow on blog.daruyanagi.jp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 03 Jun 2018 06:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.daruyanagi.jp/tags/microsoft-flow/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>手持ちの Excel ファイルと Microsoft Flow で簡単な Web サービスを作成する</title>
      <link>https://blog.daruyanagi.jp/entry/2018/06/03/060000/</link>
      <pubDate>Sun, 03 Jun 2018 06:00:00 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2018/06/03/060000/</guid>
      <description>Excel で管理しているデータを Web サービス に再利用したいといったことはままあると思います。そういう場合、普通ならば
Excel のテーブルデータをデータベースに移すスクリプトで Web アプリをガシガシ書くそれを Web サーバーにホストして、アクセスできるようにするサーバーが落ちたり、プラットフォームの更新があれば対応するという感じで運用するんだと思いますが、ちょっとしたモノにそこまで手間をかけるのはウンコ面倒です。というわけで、今回はそれを Microsoft Flow でやってみました。Microsoft Flow はよく「IFTTT」みたいなものと表現されますが、ずっと強力であることが分かると思います。Web サービスの方が柔軟性はありますが、Microsoft Flow で作るとExcel なのでみんなで気軽にデータを追加・削除できる（データベースの管理 UI が要らないし、気分的にとっつきやすい。ただし、素人がぐちゃぐちゃにする恐れはある）スクリプト言語苦手でも、多少ロジックが組める人なら大丈夫（関数とかほとんど出てこない）サーバーを用意したり、管理する必要がなくなるのは結構メリットなんじゃないでしょうか。### 三分間クッキング今回は題材として「なにかを問い合わせたら Excel のデータを舐めて変換する」サービスを作ってみます。たまたま手元に「ベクターのソフト公開ページの URL と作者サイト・窓の杜ライブラリの関係」を管理した Excel ファイルがあるので、それを使って「ベクターの URL を投げたら、作者と窓の杜ライブラリの URL を返す」アプリ（Web サービス）を作ってみます。完成イメージはこんな感じです。  br/&amp;gt;
JSON で HTTP 要求を受けたらOneDrive に置いた Excel のテーブルを読んでベクターの URL に合致する行を取得しなければ 404 を返すあれば配列を生成し200 で JSON を返すウンコ簡単だね！！#### 1.</description>
    </item>
    
    <item>
      <title>日記：金曜日は半休にして Trello＋Slack を試した＆テントを張る練習をした</title>
      <link>https://blog.daruyanagi.jp/entry/2018/02/03/054329/</link>
      <pubDate>Sat, 03 Feb 2018 05:43:29 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2018/02/03/054329/</guid>
      <description>金曜日は少しだけお仕事をして、あとはダラダラと過ごした。
### Trello＋Slack Powered by Mictosoft Flowまずは、業務が回っているとなかなか手を出せない、業務フローの改善に着手（半分趣味なので、これはあまり仕事って感じはしない）。今回は「Trello にカードを作って、そのことを Slack にも伝える」というアホの極みな無駄を減らしてみた。コードを書くのはだるいので、なるべく Microsoft Flow を使う。Microsoft Flow には Trello 関係のトリガー（If...then... の if）として  br/&amp;gt;
新しいカードがボードに追加された場合新しいカードがリストに追加された場合が利用できる。なので、「特定のリストにカードが追加されたら……」というアクションは簡単に記述できる――んだけど、その時もらえる情報は、新しく追加されたカードに関する情報だけなのだ。つまり新しいカードが追加されたら Slack にそれを投げるというフローは割と楽に書けるんだけど、新しいカードがリストに追加されたら、そのリストに溜まっているカードのリストを Slack に投げるというフローはひと手間かかる。Microsoft Flow には「ID でリストを取得する」というアクションがあって、それを使うと「リストの中のカード」が取得できるので、これを使えばよい――んだけど、ちょっとハマった。なぜか「リストの中のカード」を得ようとしても null しか返ってこない。  由はわかってみれば簡単で、「ID でリストを取得する」アクションは既定で「リストを取得するだけ」になっていて、子のカードまで取ってきてくれない。拡張オプションで、一緒に取ってくるデータをいろいろ指定してあげなくちゃいけないんだね。とりあえず“all”とか“open”とかにしておくと、リストの中のカードまで取ってきてくれると思う。あと、JST で現在時刻をとるのが最初よくわからなかった。Microsoft Flow って UtcNow() っていう関数が使えるのだけど（名前の通り、標準世界時で現在日時を取得する）、これって帰ってくるのが文字列名のな。AddHours(9) で日本時間にしてやろうとしても受け付けてくれない。アッーーー！　なんだこの面倒くささ！　結局、こんなキモいコードになったんだけど、もっといい方法はないだろうか……。
convertTimeZone(utcnow(),&amp;amp;#39;UTC&amp;amp;#39;,&amp;amp;#39;Tokyo Standard Time&amp;amp;#39;,&amp;amp;#39;dd/MM/yyyy HH:mm&amp;amp;#39;)```ちなみに、リストの結合の区切り文字なんかに改行コードをぶち込みたい場合は、以下のようにする。uriComponentToString(&#39;%0A&#39;)
\nなんかではエスケープされるのか、そのまま出力されてしまうので、最初ちょっと悩んだ。今でもわからないのは&#34; data-lang=&#34;\nなんかではエスケープされるのか、そのまま出力されてしまうので、最初ちょっと悩んだ。今でもわからないのは&#34;&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;quot;section&amp;quot;&amp;gt;### テントの設営  後は、押し入れからテントを引っ張り出して、ベランダに設営して遊んだ。このテントは、バイクでソロキャンプに行きたいなとずっと思ってて、愛媛に来る前に購入したものだ。愛媛にきてもう4年になるから、それ以上の間ずっと、押し入れで脾肉の嘆にくれていたわけやな……すまん……すまん。  なみに、今頃になってキャンプ道具を引っ張り出す気になったのは――べ、べつに、今期の大傑作アニメ『ゆるキャン』に触発されたからじゃないんだからねっ！　前々からやりたいと思っていて、ちょくちょく装備を整えていたんだからねっ！　たまたまやりたくなってしまっただけなんだからねっ！それはともかく、自分がもっていたのはどうやら、モンベルのクロノスドーム 1 型という安い一人用のテント（の旧モデル）だったみたい。塩漬けにし過ぎて、どのメーカーの、どんなモデルを持っていたのかすら覚えてなかったぜ……。&amp;lt;div class=&amp;quot;hatena-asin-detail&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;http://www.</description>
    </item>
    
    <item>
      <title>Microsoft Flow × だるやなぎ API で俺さまの年齢をつぶやく</title>
      <link>https://blog.daruyanagi.jp/entry/2017/04/01/004609/</link>
      <pubDate>Sat, 01 Apr 2017 00:46:09 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/04/01/004609/</guid>
      <description>Microsoft Flow は
API にアクセスしてデータを解析しそれをツイートするといったこと（ロジックフローの連鎖）を簡単に実現できるサービスです。“あーして、こうして、そんでもってこうする！”みたいなのをダイアグラム的に書けるわけですね。あとでスクリーンショットをのせておくので見てほしいのですが、割とビジュアルでわかりやすいです。この Microsoft Flow はスタンドアロンで定期的にフィードが配信されたらみたいなトリガー（処理のきっかけ）を使うこともできますが、モバイルアプリを利用すれば**「このボタンを押すと」**をトリガーにすることができます。今回は だるやなぎ API を利用してモバイルアプリから年齢をつぶやく例を紹介します。毎日、僕の年齢を Twitter につぶやけて、とても便利です。### だるやなぎ APIだるやなぎ API http://api.daruyanagi.jp/ は、だるやなぎのさまざまな情報を取得できる API です。たとえば、http://api.daruyanagi.jp/?format=xml を叩くと、```xmlYANAGI, Hidetoshidaruyanagi1980-04-20T09:00:001998-04-20T09:00:005679936000000000657400006574157776567993600000946656056799360018 18 19 false Oil King  https://onedrive.live.com/?authkey=%21ALMyzgcuZ67AAng&amp;amp;amp;id=2260696B6A4680D7%2118945&amp;amp;amp;cid=2260696B6A4680D7
 愛媛 松山市  33.687285 132.491125
 34.073779 132.926666
&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;quot;section&amp;quot;&amp;gt;### ざっとした使い方  すは &amp;lt;a href=&amp;quot;https://flow.</description>
    </item>
    
    <item>
      <title>Microsoft Flow でブログの更新を Twitter で配信してみる</title>
      <link>https://blog.daruyanagi.jp/entry/2017/03/14/080000/</link>
      <pubDate>Tue, 14 Mar 2017 08:00:00 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/03/14/080000/</guid>
      <description>Windows Store Watchこれの更新を――Windows Store Watch (@win_store_watch) | Twitterで配信したいと思いました。方法はいろいろあるだろうけど（IFTTT が有名でしょうか）、今回は Microsoft Flow を試してみようと思います。確かいろいろ制限はあるけど、基本はタダです。
月ごとの実行数 750 回無制限のフロー作成15 分ごとにチェック### 準備するものMicrosoft アカウントTwitter アカウントブログのフィード URL（はてなブログなら トップのアドレス/feed みたいな感じ）### フローを作成するフローというのは特定の処理です。今回の場合、ブログの更新を Twitter で配信するが目的ですが、これは2つのフローを組み合わせることで実現できます。ブログの更新を検知検知した更新を Twitter へ投稿Microsoft Flow にはすでにたくさんのフロー（メールを送る、プッシュ通知を送るなどなど）が用意されているので、たいていは組み合わせるだけです。  ず https://flow.microsoft.com/ へアクセスし――
  icrosoft アカウントでサインインします。
  とはフローを組み立てていくだけなのですが、実はもう「フィードを Twitter へ投稿する」という作業のテンプレートがありますので、それを使っちゃいます。
  ンプレートを選択すると――
  集画面が現れるので、Twitter 連携とフィード URL の入力をし、画面右上の［フローの作成］ボタンを押せば完成です。簡単すぎて思わず鼻毛伸びそう。</description>
    </item>
    
  </channel>
</rss>