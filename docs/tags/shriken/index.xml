<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shriken on だるろぐ - だるやなぎのブログ</title>
    <link>https://blog.daruyanagi.jp/tags/shriken/</link>
    <description>Recent content in Shriken on だるろぐ - だるやなぎのブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Mon, 10 Feb 2020 12:10:22 +0000</lastBuildDate>
    
	<atom:link href="https://blog.daruyanagi.jp/tags/shriken/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Shriken 1.1</title>
      <link>https://blog.daruyanagi.jp/entry/2020/02/10/121022/</link>
      <pubDate>Mon, 10 Feb 2020 12:10:22 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2020/02/10/121022/</guid>
      <description>  ョートカットキーやアクセラレーター（［Alt］キーを押すと、コマンドを実行するためのキーが表示されます）への対応を行いました。
  と、他のアプリから［共有］コマンドで「Shriken」を呼んだときだけ、［コピー］［保存］処理の終了後にウィンドウを自動で閉じるようにしていたのですが、うまく動かないことがあるようなので一時的に停止しています。
Shriken を入手 - Microsoft Store ja-JP
Release v1.1 · daruyanagi/Shriken · GitHub
次のバージョンは Windows UI library を少し試して、Crop 処理を入れられたらいいなーって思っています*1。それか、Undo/Redo かな……すでに履歴リストを保持する設計になってるんで、UI をくっつけるだけだしね。
*1:ImageCropper っていう素敵なコントロールがもうあるみたいなので！  </description>
    </item>
    
    <item>
      <title>Shriken 1.0.0</title>
      <link>https://blog.daruyanagi.jp/entry/2020/02/05/182710/</link>
      <pubDate>Wed, 05 Feb 2020 18:27:10 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2020/02/05/182710/</guid>
      <description>ログ掲載のために画像をリサイズするだけのアプリ「Shriken」をリリースしました。「スマホ同期」で［共有］→ 画像をリサイズしてクリップボードへコピー → はてなブログへ貼り付ける というプロセスがちょっとだけ簡単になります*1。Shriken を入手 - Microsoft Store ja-JPとりあえずストアに出して、Surface Pro X で使いたいと思い（だから ARM64 ビルドもあるよ！）、不安定な機能は全部削除しているので、普通の人はあまりこれのお世話になることはないと思いますが、将来的には以下の機能が実装される予定です。
 クロップ 閲覧時のズーム ペンによる注釈 顔認識と笑い男化   笑い男機能つけといた pic.twitter.com/jRU3ibh8lA— 新型だるやなぎウイルス (@daruyanagi) 2020年1月12日
 ここまで完成すれば、まぁ、需要はなくもないんじゃないでしょうか。ちなみに、名前が Shuriken ではなく Shriken なのは、他の人に名前がとられてたからです。でも、Shrink image からもじって付けようと思ってたので、あまり問題はない（キリッ
### 開発秘（？）話 久しぶりの UWP 開発だったので、どんな UI にしていいのかさっぱりわかりませんでした。  基本機能はできたので、UI をどうにかする（UWP の UI ってどうデザインすればスタンダードなのか、さっぱり忘れた） pic.twitter.com/GgKE3nFn6R— 新型だるやなぎウイルス (@daruyanagi) 2020年1月2日
  がんばって UI をマシにしてみた pic.twitter.com/C1Alq1DvsY— 新型だるやなぎウイルス (@daruyanagi) 2020年1月3日
 いろいろ試行錯誤した結果、標準アプリである「フォト」に似せればいいか、という考えに落ちつくまでに、View は3回ぐらい作り直しました。そのおかげで、最初はコードビハインドにべた書きしていた ViewModel、Model も分離されるようになり（だって、View 作り直すたびにコードビハインドをコピペするの大変じゃん？）、（あくまで個人的には）いい感じに設計できました。怪我の功名ってやつですね。機能追加してもそうそう破綻しなさそうです。
 ぇ、ドキュメントサイトからコントロールギャラリーアプリを起動して実際に挙動を確かめられるの、めっちゃ素敵やんhttps://t.</description>
    </item>
    
  </channel>
</rss>