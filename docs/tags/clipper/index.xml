<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clipper on blog.daruyanagi.jp</title>
    <link>https://blog.daruyanagi.jp/tags/clipper/</link>
    <description>Recent content in Clipper on blog.daruyanagi.jp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 30 Sep 2018 11:26:12 +0000</lastBuildDate>
    
	<atom:link href="https://blog.daruyanagi.jp/tags/clipper/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Clipper 3.1：不具合の修正</title>
      <link>https://blog.daruyanagi.jp/entry/2018/09/30/112612/</link>
      <pubDate>Sun, 30 Sep 2018 11:26:12 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2018/09/30/112612/</guid>
      <description>  Clipper」は、「Create Link」拡張機能のようなのを「Microsoft Edge」でもやりたいなーと思って作った UWP アプリです。タイトルと URL を好きな書式（HTML、markdown、wiki……）でクリップボードにコピーできます。1年以上ぶりのアップデートで以下の問題点が修正されました。
共有画面の上部に表示している Web プレビュー（Html Fragment）がすごく長くなるアプリがあって、他のコントロールが隠れてしまう（操作不能になる）ことがあった問題日本語を含むサイトの URL がときどきエンコードされないので、自分でちゃんとエンコードするようにした大したアプリではないですが、気に入ったら使ってあげてください。[Clipper を入手 - Microsoft Store ja-JP](https://www.microsoft.com/ja-jp/p/clipper/9wzdncrdf8kz)### 追伸Microsoft Edge 氏、選択テキストの情報も Share してくだされー（大昔はできてたんだけどな……</description>
    </item>
    
    <item>
      <title>日記：いなばのタイカレーセットを買った（まだ試食はしてない</title>
      <link>https://blog.daruyanagi.jp/entry/2018/02/01/045019/</link>
      <pubDate>Thu, 01 Feb 2018 04:50:19 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2018/02/01/045019/</guid>
      <description>昨日は午後6時あたりで気絶して、翌1時ぐらいまでぐっすり寝た。最近は3時間ぐらいの浅い眠りで、細切れに目が覚めてしまい、人々が活動する時間に眠くなってしまうのが辛かったのだけど、昨晩は久しぶりに気持ちよく寝られた。寝転んで、意識が落ちて、目を開けたら、いつのまにか7時間経っていた。丸一日、なにも食べてなかったので、腹が減る。冷凍しておいたご飯を温めて、レトルトのカレーに少し手を加えてぶっかける。電子レンジが回ってるあいだに、冷蔵庫の残り物で手早くサラダを作り、お湯を沸かして簡単なスープを作る。自分だけのためだと適当に済ませがちだけど、できるだけ五味を整え、温かいものを増やすようにしてる。冷蔵庫が空になったので、さすがに今日は買い出しに行かなければならない。世間では月食が話題だったみたいだけど、自分の間では眠れたのが話題だった。少し仕事をして、昼に軽く午睡をとれば、生活サイクルを戻せるかもしれない。
### いなばのタイカレーセット買ったった  月後半はマンガにちょっと使っただけでほとんど支出がなかったので、ご褒美というか、買い物欲発散のためにちょっといいモノを買ってしまった。いなば タイシリーズ5種アソート(チキンとタイカレーグリーン2個/チキンとタイカレーイエロー2個/チキンとタイカレーレッド3個/ガパオチキンバジル2個/バターチキンカレー3個)出版社/メーカー: いなば食品メディア: 食品&amp;amp;飲料この商品を含むブログを見るいなばのタイカレーセット……尊い。
  br/&amp;gt;
チキンとタイカレーグリーン2個チキンとタイカレーイエロー2個チキンとタイカレーレッド3個ガパオチキンバジル2個バターチキンカレー3個の合計10個で、お会計は 1,620円。1個135円か……スーパーだとおいくらなのかは知らんが、普通に安いと思う。割と好きなので、たまに思い出しては買っていたのだけど、一度にこんなに買うことはなかった。ずらっと並んださまは壮観だ。父ちゃんが出張から帰ってきたら一緒に食べ比べしてやろうと思う。### クリップボードエラー  Microsoft Edge」には「Create Link」に相当する拡張機能がたぶんないので、日ごろは愚作「Clipper」を使っている。Clipper を入手 - Microsoft ストア ja-JPところが、最近クリップボードのエラーをよく見かけるようになった。
  は v2 ではこれのせいでクリップボードへコピーされない（エラーも表示されない）という症状があり、v3 でいろいろ改善を試みたつもりだったが、頻度は確かに減ったけど、完全に解消されたわけではないみたい。んで、当該部分のコードを見てみたんだけど……
private void CopyToClipboardAndClose(){var package = new DataPackage();package.RequestedOperation = DataPackageOperation.Copy;package.SetText(Preview);void Notify(string message){var template = ToastNotificationManager.GetTemplateContent(ToastTemplateType.ToastText01);template.GetElementsByTagName(&amp;#34;text&amp;#34;).First().AppendChild(template.CreateTextNode(message));ToastNotification toast = new ToastNotification(template);ToastNotificationManager.CreateToastNotifier().Show(toast);};try{Clipboard.</description>
    </item>
    
    <item>
      <title>Windows の［共有］機能からシェアした URL を整形してクリップボードにコピーできるストアアプリ「Clipper」v3.0.0 を公開しました</title>
      <link>https://blog.daruyanagi.jp/entry/2017/09/01/090403/</link>
      <pubDate>Fri, 01 Sep 2017 09:04:03 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/09/01/090403/</guid>
      <description>  indows の［共有］機能からシェアした URL を整形してクリップボードにコピーできるストアアプリ「Clipper」を3年ぶりにアップデートしました！ 「Microsoft Edge」の拡張機能が充実すれば要らない子になるはずだったのですが、意外に全然ダメダメなのでサクッとね。
Release 4: 3.0 (17/08/29)new designimprove error handlingほんとは Visual Studio 2013 のプロジェクト（旧ストアアプリ、なんていうの？ WinRT？）をちまちまアップデートを……と思っていたのですが、途中でめんどくさくなって、また一から作り直しました！　さすがに3回目ともなると、半日立たず作れていい気分です（吐血  と比べたらだいぶ良くなったと思いますが、プルダウンメニューにしたのはイマイチかもしれない。自分で使いながら改善を模索していこうかと思います。ちょっと面白いのは、このアプリからまた［共有］機能が呼べることです。整形した URL をさらにほかのアプリへ渡す、なんてこともできるようになりました。これに伴い、Twitter へ投稿する機能は削除しています。［共有］機能を使った方がいいと思います。
  方、ときどきデータがクリップボードにコピーされないという不具合は根絶できませんでした。 Clipboard.Flush() を呼べばアプリケーションのライフサイクルが終わってもデータがクリップボードに保持されるみたいなので、それで解決かと思ったのですが、たまに COM 側で例外が飛んできます。とりあえず通知だけ実装してリリースしましたが、今後の課題です*1。
    形ルールの管理画面も新しくなりました。昔は画面遷移がよくわかってなかったのですべての要素を一画面にツッコむという荒業でしのいでいましたが、それに比べるとだいぶ使いやすいはずです。正直、昔の画面は、しばらくたつと作った本人ですらよくわからなくなるひどいものでした。
  と、機能には関係ないですが、C# 7.1 を使ってみました。いろいろ簡単に書けて幸せですけど、間違って x86/Debug の C# のバージョンだけを latest に設定していたので、パッケージのビルド（Release）でコンパイルがコケて 3 分ぐらい悩みました。こんなことで躓くのは僕だけかもですが、皆さん気を付けましょう（【更新】Clipper - Windows Store WatchClipper を購入 - Microsoft ストア 日本
*1:WPF での解決策はみかけるけど、UWP での解決は見つからない……ワークアラウンドもいろいろ考えたけど、実装が面倒なだけで効果的な解決にはなってなかったのでとりあえず削除</description>
    </item>
    
    <item>
      <title>Windows 8.x を UWP へ移植しようとするフリだけしてみた。</title>
      <link>https://blog.daruyanagi.jp/entry/2016/03/22/165453/</link>
      <pubDate>Tue, 22 Mar 2016 16:54:53 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2016/03/22/165453/</guid>
      <description>かつてこんなアプリを Windows 8.x 向けに作った。閲覧ページのタイトルや URL を指定した書式でクリップボードへコピーするというもので、
&amp;gt;簡単に言うと、［共有］チャームから Create Link - Chrome Web Store Make Link :: Add-ons for Firefoxhttps://addons.mozilla.org/ja/firefox/addon/make-link/ をするアプリです。
これを Windows 10（UWP）に移植しようかと思う。MADOSMA が W10M になったので、ちょっとやる気が出ているのだ！
### とりあえず古いアプリをそのまま Windows 10 で実行してみた  indows 8.x のフルスクリーンを前提に作ってあるので、Windows 10 の Windowed モードには収まりきらず、横スクロールが発生している。そもそも、このアプリを作った時は画面遷移のやり方がよく分かっていなかったので、すべての操作が一枚のページで行えるように設計されている。そのため、要素が若干詰め込み過ぎ。開発者の能力不足のせいで、ユーザーに不便を強いている部分だ。
  と、アプリケーションバーを使ってみたかったという理由でアプリケーションバーを採用したのだけど、初期状態で必要なコマンドが表示されていないのは不親切だと思った。右クリックすれば出てくるんだけど……わかんないよな、普通。というか、初めからこのアプリには、このユーザーインターフェイスは適してなかった。開発者のエゴが、ユーザーに不便を強いている部分だ。
  上には謎のハンバーガーボタンが追加されていて、共有チャームなどのコマンドはここに押し込められている。共有チャームはオワコン。
### そのまま UWP に移植してみた  規に UWP プロジェクトを作成し、ほとんどコピペで移植してみた。アプリケーションバーが謎なことになっている以外は、Windows 8.x 時代とほぼ同様に動いているように見える。若干一部の機能がちゃんと動いていないらしいが、それは要調査。それにしても、似ているようで細かい挙動が変わっているのは、本当に面倒くさい。とくに Windows 8.x 向けのサンプルが手元ではそのまま動かなくて、StackOverFlow を歩き回っても解決策が見つからないのにはイライラさせられた。質問はあっても、回答はなかったり。まだまだみんな UWP のノウハウは蓄積できていないみたいなので、自分で頑張るしかない（一部のブログ書いてくれてる開発者には感謝、感謝だなぁ）。ただ、Windows 10 Mobile でも普通に動くのはいいと思った。ユーザーインターフェイスがデスクトップ向けなのですこぶる使いにくいけれど、MADOSMA にデプロイすれば普通に動く。最初はデスクトップとモバイル両対応のユーザーインターフェイスを作り直す苦労を思って気が重くなったが、モバイルファーストで作り直せば、あとはデスクトップはそれをそのまま使えばいいと気づいてからはちょっと気が楽になった。UWP が許す機能の範囲でならば、新しいアプリケーションは UWP で作った方が得だな。今度休みが取れたときに、いろいろ調査を進めようと思う。</description>
    </item>
    
    <item>
      <title>Clipper の割とどうでもいい使い方</title>
      <link>https://blog.daruyanagi.jp/entry/2014/08/27/213046/</link>
      <pubDate>Wed, 27 Aug 2014 21:30:46 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/08/27/213046/</guid>
      <description>  indows 8 の「ミュージック」アプリの場合、
{{title}} に曲名{{description}} にアーティスト名が入るので、```&#34;{{title}}&#34; by {{desc}} #nowplaying```みたいな書式を作ってやると、今聞いている曲がツイートできる。書式をあらかじめ登録してない場合でも、{{comment}} にこの書式を入力すればちゃんと展開される（ハズ）。&#34;パララックス･ビュー&#34; by 上坂すみれ / http://t.co/kCvHKlsQt2— だるやなぎ（歩兵） (@daruyanagi) 2014, 8月 27ただし「ミュージック」アプリを起動した状態で共有しなきゃならない（Windows ストア の Windows 用 ぷろなまなうぷれ アプリ も同じ仕組みじゃないかな）。Windows 8/8.1 には今のところ Now Playing を取得できるインターフェイスがないみたいで残念……Windows Phone の場合は XNA を使えばできるみたい。こういう情報は読み取りオンリーでいいんだから、積極的に公開してくれると面白いアプリがたくさん出てくると思うのだけど。</description>
    </item>
    
    <item>
      <title>Clipper 2.0.0.0</title>
      <link>https://blog.daruyanagi.jp/entry/2014/08/26/094110/</link>
      <pubDate>Tue, 26 Aug 2014 09:41:10 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/08/26/094110/</guid>
      <description>  ースコードなくしたので一から作り直しました orz でも、おかげで
共有ターゲットページの表示に時間がかかる共有ターゲットページの表示に失敗するといった不具合がだいぶ減っていると思います。&amp;gt;   014/08/26 9:47 追記：ごめんなさい、データの互換性がなくなってるのでもう一度フォーマットの編集と保存をお願いします。保存コマンド（や、Twitter の認証コマンド）はアプリバーにあります。
  れまではテキストフォーマットの設定ファイルを読みだしてその内容（ObservableCollection）をメインページと共有ターゲットページのビューモデルから参照するようにしていたのですが、いろいろ不具合が出てしまいます（WinRT: COM コンポーネントを表す型のインターフェイスを COM コンポーネントを表さない型にキャストすることはできません。 - だるろぐ、この内容も全然回避になってなくて、共有ターゲットページの表示に失敗する原因になってました）。
  いうわけで、ちょっと無駄になるのだけどそれぞれのビューモデルにそれぞれ同じようなクラスを書き、リストを保持するようにしました（クラスを共用するようにすることもダメみたい）。保守性が下がっちゃったけど、so far, so good って感じですかね。あと、そのほかにも
ユーザーインターフェイスがちょろっとリッチになりました。少しはわかりやすくなったかなーって思います。（ブラウザーなどの［共有］チャームからタイトルや URL、選択テキストなどをあらかじめ記述したテンプレートに従って整形し、クリップボードへコピーしたり、ツイートしたりするアプリです）
### 注意点 @daruyanagi Clipper便利でですね！コメント入力テキストボックスが非アクティブになったらソフトキーボード消えるようにしてもらえるとありがたいです— くつき くれむ（公式）.eXe (@k2kkrm) 2014年8月25日
 キーボードのない端末でコメントテキストボックスにフォーカスを当て、次にリストボックスを選択すると、オンスクリーンキーボードがとじないようです。少し調べてみましたが、残念ながらいい解決が思いつきませんでした。オンスクリーンキーボードの表示・非表示は OS（？）の仕事のようなのですが……最初にリストボックスを選択するとオンスクリーンキーボードは現れないので、編集可能なコントロールからフォーカスがほかに移ったにもかかわらずオンスクリーンキーボードが閉じないのは OS 側の問題かなって気もしないでもないです。
  色で囲った辺りをタップするとオンスクリーンキーボードは消えますので、不便で申し訳ないのですが、当面はそれで回避していただけるとありがたいです。
### おまけ  ウンロードが 7 もある！ ひとつは多分自分だから、もの好きが6人もいるってことだな！　ありがたい！
</description>
    </item>
    
    <item>
      <title>Windows ストア アプリを作りました。</title>
      <link>https://blog.daruyanagi.jp/entry/2014/08/19/224807/</link>
      <pubDate>Tue, 19 Aug 2014 22:48:07 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/08/19/224807/</guid>
      <description>  単に言うと、［共有］チャームから
Create Link - Chrome Web StoreMake Link :: Add-ons for Firefoxをするアプリです。  形フォーマットを登録しておいて、それを［共有］チャームで選択すると、タイトルや URL がその通りに整形されてクリップボードにコピーされます。現在申請中の最新版だと、Twitter にポストすることもできます。この機能は Windows ストア の Windows 用 ShareTwit アプリ にちょっと似てますね。
（個の埋め込みタグは Windows Store oEmbed を利用しています）ローミング機能を付けてからいろいろ動作が怪しいのですが、そのうち安定するかも……。
  かんかったらアプリバーからデフォルトの設定をロードしてみてください。
### Release 1: 1.1.0.6 (2014/08/16)初回リリース[New] ［共有］チャームからフォーマットを選択し、アプリのタイトルやリンクを整形してクリップボードにコピーします[New] フォーマットを編集できます[New] フォーマット設定は複数デバイス間でローミングされます（テストがあんまりできてなくて動作が不安定……）そのうち公開されるバージョンでは、さらに機能の追加があります。公開されました。（追記：2014/08/20）### Release 2: 1.1.0.7 (14/08/19){{comment}} で {{title}} や {{url}} が使えるようになりました。アプリのメイン画面でわざわざ登録するまでもない使い捨てのフォーマットを書くための隠し機能です。整形済みテキストをツイートできるようになりました。[Fix] {{comment}} を編集してもプレビューに反映されない場合がある不具合を直した気がするフォーマットを一覧で並び替えられるようにしました。</description>
    </item>
    
  </channel>
</rss>