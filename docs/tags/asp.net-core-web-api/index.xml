<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ASP.NET Core Web API on だるろぐ - だるやなぎのブログ</title>
    <link>https://blog.daruyanagi.jp/tags/asp.net-core-web-api/</link>
    <description>Recent content in ASP.NET Core Web API on だるろぐ - だるやなぎのブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sat, 09 Sep 2017 17:19:21 +0000</lastBuildDate>
    
	<atom:link href="https://blog.daruyanagi.jp/tags/asp.net-core-web-api/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Razor Pages：PhantomJS で動的サイトをスクレイピングする（2）</title>
      <link>https://blog.daruyanagi.jp/entry/2017/09/09/171921/</link>
      <pubDate>Sat, 09 Sep 2017 17:19:21 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/09/09/171921/</guid>
      <description>Razor Pages：PhantomJS で動的サイトをスクレイピングする - だるろぐ前回、AngleSharp を使えばよかったかもといったのですが、結果的にはちょっと大変かなって感じでした。
var document = default(IHtmlDocument);using (var client = new HttpClient())using (var stream = await client.GetStreamAsync(Target)){var parser = new HtmlParser();document = await parser.ParseAsync(stream);}Result = document.QuerySelector(Selector)?.InnerHtml;return Page();```確かにシンプルなのですが、外部 JavaScript を読んで、評価して……までやりだすと、いろいろ大変な感じ&amp;lt;a href=&amp;#34;#f-4db4db9a&amp;#34; name=&amp;#34;fn-4db4db9a&amp;#34; title=&amp;#34;すごく頑張ればできなくはなさそうだけど、バージョンアップで API が変わってたりでちょっと調べるのが面倒になった&amp;#34;&amp;gt;*1&amp;lt;/a&amp;gt;。これまで通り PhantomJS でやった方がよさそう。――というわけで。今回はそっちを置いておいて、Web API として使えるようにしてみました。ASP.NET API（Core）を使うのは初めてだったんですが、今回のような単純なモノであれば一瞬でできました。```csnamespace WebApplication7.Controllers{[Route(&amp;#34;api/[controller]&amp;#34;)] public class ValuesController : Controller{// GET api/values[HttpGet]public IEnumerable&amp;amp;lt;string&amp;gt; Get(){return new string[] { &amp;#34;value1&amp;#34;, &amp;#34;value2&amp;#34; };}}}```&amp;lt;code&amp;gt;/api/values&amp;lt;/code&amp;gt; をゲットでたたくと、&amp;lt;code&amp;gt;{ &amp;#34;value1&amp;#34;, &amp;#34;value2&amp;#34; }&amp;lt;/code&amp;gt; が返ってくる。これと組み合わせて、API Controller を Razor Pages で呼び出して使いたいなーと、ちょっと四苦八苦していたのですが、それはちょっと筋悪だったよう。結局は、API と Razor Pages で共通のロジックをまとめて（適当に &amp;lt;code&amp;gt;Services&amp;lt;/code&amp;gt; フォルダーにまとめました）、共有することにしました。  有部分はこんな感じ。```cs// サービスと名付けたモノ（/Services）namespace WebApplication7.</description>
    </item>
    
  </channel>
</rss>