<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows デスクトップ アプリ on blog.daruyanagi.jp</title>
    <link>https://blog.daruyanagi.jp/tags/windows-%E3%83%87%E3%82%B9%E3%82%AF%E3%83%88%E3%83%83%E3%83%97-%E3%82%A2%E3%83%97%E3%83%AA/</link>
    <description>Recent content in Windows デスクトップ アプリ on blog.daruyanagi.jp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Fri, 10 Mar 2017 21:42:27 +0000</lastBuildDate>
    
	<atom:link href="https://blog.daruyanagi.jp/tags/windows-%E3%83%87%E3%82%B9%E3%82%AF%E3%83%88%E3%83%83%E3%83%97-%E3%82%A2%E3%83%97%E3%83%AA/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Visual Studio 2017 で Windows サービスを作った</title>
      <link>https://blog.daruyanagi.jp/entry/2017/03/10/214227/</link>
      <pubDate>Fri, 10 Mar 2017 21:42:27 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2017/03/10/214227/</guid>
      <description>ぁ、この程度のことであれば、今までとあんまり変わらんと思うけどね。ちょこちょこ便利になってる感じはある。
### 今回の目標実行ファイルが書き換わったら、トーストで通知してほしい。### プロジェクトを作成する  テンプレート］－［Visual C#］－［Windows クラシック デスクトップ］を開いて、“Windows サービス（.NET Framework）”を選択。すると、Windows サービス プロジェクトのスケルトンがブリブリっと吐かれる。Service1.cs では味気ないので、今回は MihariService.cs という名前にした。“見張り”やね（以前にもそういう名前のアプリを作って放置してたっけ）。
  に MihariService.cs のデザイナー画面を開き、コンテキストメニューの［インストーラーの追加］コマンドを実行。
  ると ServiceInstaller.cs というのが作成されます。このデザイン画面で ServiceInstaller1 を探し、プロパティ画面からいい感じにプロパティを設定。今回はこんな感じにした。
ServiceName：MihariService（アプリ ID のノリでどこでも使っていくやで）DisplayName：Mihari サービス（WIndowsの「サービス」からはこれが見えるらしい。日本語にした）Description：システム内で EXE ファイルが変更されるのを監視しますStartType：Automatic（これでたぶん自動実行されるはず）最低限の準備はこれでいいみたい。まだ中身はないけれど、ソリューションをビルドする。### サービスの登録とデバッグ  のままデバッグ実行をしても、エラーが出る。ビルドした Windows サービスをシステムに登録しなきゃいけない。
  ず、ツールの類にパスの通ったコマンドプロンプトを起動（よくわかんないけど Developer Command Prompt for VS 2017 というのでいいみたい）。
  ebug フォルダーに移動してパスをコピーしておき、コマンドプロンプトで移動。installutil で MihariService.exe をシステムに登録する。</description>
    </item>
    
    <item>
      <title>証明書エラーのブラウザー比較</title>
      <link>https://blog.daruyanagi.jp/entry/2016/03/20/075626/</link>
      <pubDate>Sun, 20 Mar 2016 07:56:26 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2016/03/20/075626/</guid>
      <description>たまたまブックマークを付けておいた古いページで証明書エラーが出たので、比較のスクリーンショットをとってみた。環境は Windows 10 Pro x64（JPN）。 #entry-10328537792367738078 img { border: 1px solid silver; } 
### Microsoft Internet Explorer 11  りとお馴染な感じ。
  br/&amp;gt;
### Microsoft Edge  ょっとドギツイ表示になってる気もする。
  明書を表示するユーザーインターフェイスがないような。
### Google Chrome 49    っとも情報が詳細なのが Google Chrome かも。
  と最近のバージョンでは開発者ツールでエラーの詳細をチェックできる。
### Mozilla Firefox 45      ラーの詳細はパネル＆ダイアログで。
### Opera 36    番古臭い感じだけど不便は感じないかな。ちなみに Vivaldi は Google Chrome と似たような感じだったかも。</description>
    </item>
    
    <item>
      <title>「Google Chrome 45」でダウンロードするときのぐるぐるのアレ</title>
      <link>https://blog.daruyanagi.jp/entry/2015/08/10/173029/</link>
      <pubDate>Mon, 10 Aug 2015 17:30:29 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/08/10/173029/</guid>
      <description>今回のベータ版から？　カコイイ（割とどうでもいいけど pic.twitter.com/gmFCbvuPOm
&amp;mdash; #だるやなぎ40 (@daruyanagi) July 28, 2015  oogle Chrome 44 → 45 でダウンロードの進捗を示すプログレスインジケーターのデザインがちょっと変わっていたのでメモ。
  oogle Chrome 44
  oogle Chrome 45（beta）「Google Chrome 45」がベータ版に。新しいJavaScriptの言語機能をサポート - 窓の杜</description>
    </item>
    
    <item>
      <title>Google Chrome のパスワードジェネレーター</title>
      <link>https://blog.daruyanagi.jp/entry/2015/04/29/032007/</link>
      <pubDate>Wed, 29 Apr 2015 03:20:07 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/04/29/032007/</guid>
      <description>Google Chrome 43」（beta）でジェットスターのサイトをウロウロしているときにでてきた。
&amp;gt;Passwords are not a very good form of authentication. They are easy to use but they are trivial to steal, either through phishing, malware, or a malicious/incompetent site owner. Furthermore, since people are so apt to reuse passwords losing one password leaks a substantial amount of your internet identity.Chrome&amp;amp;#39;s long term solution to this problem is browser sign in plus OpenID. While implementing browser sign in is something that we can control, getting most sites on the internet to use OpenID will take a while.</description>
    </item>
    
    <item>
      <title>Google Chrome の新しいブックマークマネージャー</title>
      <link>https://blog.daruyanagi.jp/entry/2015/04/15/185222/</link>
      <pubDate>Wed, 15 Apr 2015 18:52:22 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/04/15/185222/</guid>
      <description>  Google Chrome 42」で確認。［ブックマーク］ボタンが［スター］ボタンになってた。ブックマークにカバーイメージや概要なんかも指定できるようになっているのかな。ちょっとリッチになった感じ。
  なみに、アカウントでログインしていない場合は、従来の［ブックマーク］ボタンが表示されるみたい。よく注意してないと、変わったのを見過ごしてしまいそう。
##### 追記アカウントでログインしていない場合でも chrome://bookmarks にアクセスすると有効化されたかも？　よくわかんないな。  しに chrome://bookmarks を開くと、新しいブックマークマネージャーの案内が表示される。
  しい chrome://bookmarks では、ブックマークがタイル表示になっている（リスト表示にすることも可能）。“自動フォルダ”にブックマークが勝手にカテゴライズされていくのが便利くさい。
  なみに、古いヤツ。こちらのほうが味わい深い（？）けど、新しいのに比べるとだいぶ見劣りするかも。まぁ、それでも_「古い方じゃないとイヤだ！　新しいのはクソ！」_っていうヒトがある程度いそうな気がする。自分はブックマークツールバーを使う派なので、割とどうでもいいかなって感じ。“自動フォルダ”が期待通りに賢ければいいんだけど（今のところはいい感じ）。
“Push API”をサポートした「Google Chrome 42」が正式版に - 窓の杜</description>
    </item>
    
    <item>
      <title>「Opera」の真の後継？　「Vivaldi」 のちょっと面白い機能</title>
      <link>https://blog.daruyanagi.jp/entry/2015/01/31/213350/</link>
      <pubDate>Sat, 31 Jan 2015 21:33:50 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2015/01/31/213350/</guid>
      <description>  分は別におぺらーではないので（「Opera」をメインに使っていたのは、BeOS 時代のことだ。確か v5 ぐらいではなかったかと思う）、「Opera」の何がいいのかあまりわかってないが……「Vivaldi」は割かしユニークだなーと思った。
元OperaのTetzchner氏率いるVivaldi Technologies、新ブラウザー「Vivaldi」を公開 - 窓の杜### 画像を非表示  テータスバーにあるボタン一発で画像を消せる。
  像の非表示を有効化してる状態だと、画像はリクエストされないみたい。パケット通信してるときには助かるかも。Click &amp;amp; Load みたいな機能（画像のある場所にプレースホルダを置いて、クリックすると個別に読み込める）つけてくれるともっとありがたいんだけどね。
### ページアクション  ージにさまざまな追加効果を施せる。［Transform - 3D］は、実用性はいざ知らず、インパクトはかなりのものだな。
  んなが好きそうなのは、［Content blocker］。
  告が消えた（＾ｖ＾）……まぁ、広告で食ってる身からすると、割と微妙な気分になるのだけどね。早く広告以外のまっとうなマネタイズの方法が開発されるといいんだけど。
  ィルターも何種追加搭載している。これは［Filter - Grayscale］。
  人的には［Filter - Sepia］が気に入った。目に優しい感じ。使いようによっては便利で、単なるお遊び機能ではないなーって感じた。今のところ、重要な機能としては同期機能、メール機能（メール統合は旧「Opera」の象徴って感じだわな）、拡張機能あたりが欠けているけれど、そこらへんがカバーされたら割といい感じになりそう。まぁ、「Google Chrome」で不便は感じていないのだけど、最近“Chromebook”由来の機能をデスクトップにねじ込んでくることもあるから（いきなりユーザー切り替えメニューが付いたりな！　個人的には便利に使わせてもらってるけど）、そういうのが気に入らない人はこういうオルタナティブがあると助かるよね。
</description>
    </item>
    
    <item>
      <title>Mihari 2.0.0.6</title>
      <link>https://blog.daruyanagi.jp/entry/2014/10/20/213054/</link>
      <pubDate>Mon, 20 Oct 2014 21:30:54 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/10/20/213054/</guid>
      <description>  際だるやなぎ開催記念！　ログウィンドウにだるやなぎが付きました！！　これはダウンロードするしかない！
Mihari for Windows Desktop - だるやなぎ（0x22歳♂）その他の変更点だるやなぎエディション（嫌だったら設定ファイルいじれば無効化できます）スタートアップに登録するオプション付けた（デフォルト有効その他、いろいろバグ修正しかたかも会議の模様は……ちょっと疲れてるのでまたの機会に。#### おまけベクターに登録しようとしたけど、README が入ってないという理由で却下された。README.md じゃダメっぽい……めんどくさいので、まぁ、そのまま放置。</description>
    </item>
    
    <item>
      <title>Mihari 1.1.0.3</title>
      <link>https://blog.daruyanagi.jp/entry/2014/10/13/025303/</link>
      <pubDate>Mon, 13 Oct 2014 02:53:03 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/10/13/025303/</guid>
      <description>  ihari.exe.config をイジってください――というのではあまりにも配慮に欠けるかなと思って、かんたんな設定ダイアログをつけました。
Mihari for Windows Desktop - だるやなぎ（0x22歳♂）XAML でプロパティの綴りミスってうまくバインディングされず、小一時間ハマったのは秘密です。1.1.0.3 (2014/10/13)[FIX] Can not save some setting.1.1.0.2 (2014/10/13)[FIX] Get Clickonce Version1.1.0.1 (2014/10/13)Setting Dialog[FIX] Mutex bugメインマシンの環境がぶっ壊れていて、ClickOnce でインストールできないのがツラい……。#### 追記1.1.0.4 (2014/10/13)[FIX] Ignore RecycleBin does not work.パスのチェックで大文字小文字の区別をつけていたので、一部環境で IgnoreRecycleBin オプションが動いてなかった。カッコ悪い。</description>
    </item>
    
    <item>
      <title>Mihari 1.0.0.0</title>
      <link>https://blog.daruyanagi.jp/entry/2014/10/12/133551/</link>
      <pubDate>Sun, 12 Oct 2014 13:35:51 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/10/12/133551/</guid>
      <description>  ステム内に実行ファイルが作成されたらトーストで（Windows 8未満の場合はバルーンになるはずだけど試す環境がない）お知らせしてくれるタスクトレイ常駐型のソフトです。ごくごく簡単なログのフィルタリング機能がついています。
Mihari for Windows Desktop - だるやなぎ（0x22歳♂）動作には Windows 8.1/.NET Framework 4.5 が必要（Windows 7 で動いたら教えてください）。1.0.0.0 (2014/10/12)Initial Release.Exe/Jar/Msi Monitoring.Open Explorer from log view.Log Filtering (you can use wildcard, and date filter).Highlight malicious exe. (for example, hao123)Notification by toast (Windows 8 or later). Mihari.exe.configLog cleaning, Keep logs only 7 days (default)</description>
    </item>
    
    <item>
      <title>Google Chrome 38</title>
      <link>https://blog.daruyanagi.jp/entry/2014/08/30/091138/</link>
      <pubDate>Sat, 30 Aug 2014 09:11:38 +0000</pubDate>
      
      <guid>https://blog.daruyanagi.jp/entry/2014/08/30/091138/</guid>
      <description>  oogle Chrome 37 のメニュー。
  oogle Chrome 38　のメニュー。ボタンのデザインが変わってたり、項目の順序が入れ替わったりしてた。一瞬［ツール］はどこに行ったんだろうと思ったけど、下の方に引っ越したらしい。名前も［その他のツール］になっている。
新しいユーザー管理UIとゲストモードを搭載した「Google Chrome 38」ベータ版が公開 - 窓の杜メインの変更はユーザーボタンの追加だろうと思うけれど、こういうのもあるってことで。</description>
    </item>
    
  </channel>
</rss>